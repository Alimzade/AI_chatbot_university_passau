Course Code,Course Title,PN Number,Häufigkeit des Modulangebots/Frequency of course offering,Moduldauer/Module duration,Modulverantwortliche(r)/Module convenor,Dozent(in)/Lecturer,Sprache/Language of instruction,Zuordnung zum Curriculum/Curriculum,Lehrform/SWS/Contact hours,Arbeitsaufwand/Workload,ECTS/Credits,Voraussetzungen nach Prüfungsordnung/Required prerequisites as per the study and examination regulations,Empfohlene Vorkenntnisse/Recommended skills,Verwendbarkeit in weiteren Studiengängen/Applicability for other courses,Angestrebte Lernergebnisse/Learning outcomes,Inhalt/Course content,Studien-/Prüfungsleistungen/Assessment,Medienformen/Media used,Literatur/Reading list,Faculty
5600,Effiziente Algorithmen,455366,Unregelmäßig Irregular,1 Semester,"Rutter, Sudholt","Rutter, Sudholt",Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,3 V + 2Ü,60 Std. Präsenz + 45 Std. Übungen + 105 Std. Nachberei- Workload tung der Vorlesung und Prüfungsvorbereitung 60 contact hours + 45 hrs exercises + 105 hrs independent study and exam preparation,ECTS/Credits: 7,Keine None,"Algorithmen und Datenstrukturen, Theoretische Informatik I Algorithms and Data Structures, Theoretical Computer Science I","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden erwerben systematisches Verständnis algo-rithmischer Entwurfs- und Analysetechniken. Sie kennen weiterführende Algorithmen und Datenstrukturen und deren Ei  genschaften. —The students acquire a systematic understanding of algorithmic design and analysis principles. They know advanced algo rithms and data structures and their properties. Fähigkeiten / Abilities Die Studierenden besitzen die Fähigkeit, algorithmische Pro bleme in verschiedenen Anwendungsgebieten zu identifizierenundzuformalisieren. Die Studierendenkönnenunbekannte Al gorithmen eigenständig verstehen, sie anwenden, ihre Laufzeitbestimmen, sie beurteilen und auf verwandte Problemstellun gen übertragen. — The students have the ability to identify algorithmic problems in different application areas and to formalize them. They can understandandapplynewalgorithmsontheirown. Moreover, they can analyze their running time, evaluate them and adapt them to related problems. Kompetenzen / Competencies Die Studierenden besitzen die Kompetenz für gegebene Pro blemstellungen geeignete Entwurfs- und Analysetechnikenauszuwählenundsiezunutzenumeigene Algorithmenzuentwerfen, diese zu analysieren und ihre Eigenschaften nachzu weisen. —The students have the competence to select appropriate de sign and analysis techniques for given problems. They can further apply them to develop and analyze new algorithms.","Dieses Modulvertieftdie Grundlagender Algorithmik. Eswer- den fortgeschrittenen Analyse- und Entwurfstechniken für Al- gorithmen und Datenstrukturen vorgestellt, (z. B. amortisierte Analyse, dynamische Programmierung, Greedy, Divide&Conquer, Modellierungmit LPs)undderen Anwendungankonkreten Problemstellungen illustriert (z. B. Union-Find, Flussmethoden, Schnitte in Graphen, Spannbäume, Matchings). Dar überhinauswerden Technikenzum Umgangmit NP-schweren Problemen vermittelt. —This module deepens the fundamentals of Algorithms. Advanced design and analysis techniques for algorithms are presen ted (e. g. , amortized analysis, dynamics programming, greedy, divide & conquer, Modeling with L Ps) and their application is demonstrated for concrete examples (e. g. , union-find, cuts  and flows in graphs, spanning trees, matchings). Additionally, techniques for handling N P-hard problems are presented.","Zwei Teilleistungen: Teilleistung 1 (80%):Mündliche Prüfung(ca. 25 Minuten)oder Klausur(ca. 90 Mi nuten); die genaue Prüfungsart wird zu Beginn des Semestersdurch Aushang und auf den Internetseiten der Fakultät be kannt gegeben. Teilleistung 2 (20%):Ausarbeitung (bis zu 10 Seiten) über ein Thema der Algorith mik Zum Bestehen des Moduls müssen beide Teilleistungen be standen werden. — Examination in two parts: Part 1 (80%): Oral exam (about 25 minuts) or written exam (90 minutes); the precise mode of assessment will be announced at the start of the semester. Part 2 (20%): Written work (up to 10 pages) on an Algorithms subject. To pass the examination, both parts have to be passed.","Präsentation mit Tafel und Beamer Presentation with a projector, blackboard","Cormen, Leiserson, Rivest, Stein: Introduction to Algorithms Korte, Vygen: Combinatorial Optimization: Theory and Algo- rithms",MSc AI Engineering and MSc Informatik/ Computer Science
5670,Logik für Informatiker,455357,Mindestens jedes 2. Sommersemester At least every other summer semester,1 Semester,Kreuzer,Kreuzer,Englisch English,Modulgruppe „A EM M“ Focus area „A EM M“,3 V + 2Ü,75 Std. Präsenz + 65 Std. Übungen + 70 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 75 contact hours + 65 hrs exercises + 70 hrs independent study and exam preparation,ECTS/Credits: 7,Keine None,Lineare Algebra I Linear Algebra I,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden kennen den Aufbau und die Anwendung lo- gischer Systeme. Sie sind mit wichtigen logischen Systemen und den zugehörigen Kalkülen vertraut. Weiterhin kennen sie wichtige Beweismethoden für logische Fragestellungen.  — Students know the structure and the application of logical systems. They are familiar with important logical systems and the associated calculi. Furthermore, they know the important methods of proof for logical issues. Fähigkeiten / Abilities Die Studierendensindinder Lage, logische Fragestellungenim Rahmen eines geeigneten logischen Systems zu modellieren. Sie können die erzeugten logischen Formeln mit Hilfe geeig neter Kalküle auf Erfüllbarkeit testen. Sie sind ebenfalls fähig, einfache Beweise zu Fragestellungen der mathematischen Lo gik selbstständig zu führen. — The students are able to model logical issues in the context of a suitable logical system. You can test the generated logical formulas using appropriate calculations to satisfiability. You are also able to perform simple proofs independently on issues of mathematical logic. Kompetenzen / Competencies Die Studierenden erwerben evaluative Kompetenzen in Bezug auf die Verknüpfung der theoretischen Inhalte ihres Studiumsmit praxisnahen Problemstellungen, organisatorische Kompe tenzen in Bezug auf ihr Zeit- und Arbeitsmanagement, sowieselbst-reflexiveund Entwicklungskompetenzeniminterdiszipli nären Bereich zwischen der Mathematik und der Informatik. —Students acquire evaluative skills in relation to the link between the theoretical contents their studies with practical pro blems, organizational skills in relation to their time and work management, and self-reflexive and development expertise in the interdisciplinary area between mathematics and Computer Science.","Basierend auf einer grundlegenden Einführung der struktur- logischen Systeme, insbesondere der Diskussion der Bedeu-tungen der Begriffe Syntax, Semantik und Kalkül (oder Beweissystem), werden wichtige klassische und moderne logische Systeme besprochen, z. B. Aussagenlogik, Prädikaten logik, Modallogik und Temporallogik. Neben der Diskussion der Syntax und Semantik dieser logischen Systeme werdenauch wichtige Kalküle wie das Resolventenkalkül, der Markie rungsalgorithmus oder das Tableaukalkül besprochen. Fernerwird der Bezug dieser Algorithmen zu konkreten Implemen tierungen und Logik-Compilern wie P RO LO G hergestellt. Inden Übungen wird großer Wert darauf gelegt, dass die Stu dierenden lernen konkrete, anwendungsbezogene Probleme in  geeigneten logischen Systemen zu modellieren. Ferner werdendie besprochenen Beweissysteme an konkreten Beispielen ein geübt. —Based on a basic introduction to the structure of logical sys tems, inparticularthediscussionofthemeaningsoftheterms syntax, semantics and calculus (or proof system), important classical and modern logical systems are discussed, such aspropositional logic, predicate logic, modal logic and tempo ral logic. Besides the discussion of the syntax and semantics of these logical systems calculi, also important themes suchas the Resolventenkalkül, the Marking algorithm or the tableau calculus are discussed. Furthermore, the relation of the se algorithms is made to concrete implementations and logic compilerssuchas PR OL OG. Intheexercises, greatemphasisisplacedonensuringthatstudentsaretaughthowtomodelspe cific application-related problems in suitable logical systems. Furthermore, the evidence discussed systems are practiced on concrete examples.",90 minütige Klausur 90-minute written exam,"Präsentation und Beamer, Tafel Presentation and projector, blackboard","z. B. M. Kreuzerund S. Kühling, Logikfür Informatiker, Pear- son, München 2006",MSc AI Engineering and MSc Informatik/ Computer Science
5713,Parametrisierte Algorithmen,455413,In der Regel jedes 2. Semester Usually every other semester,1 Semester,Rutter,Rutter,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Algorithmen und Datenstrukturen, Effiziente Algorithmen Algorithms and Data Structures, Efficient Algorithms","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierendenkennengrundlegende Begriffederparametri- sierten Algorithmenundderzugehörigen Komplexitätstheorie. Sie kennen zudem verschiedene Entwurfstechniken zur Kon struktion parametrisierter Algorithmen.  — The students know the fundamental notions of parameterized algorithms and complexity. They know several techniques for the design of parameterized algorithms. Fähigkeiten / Abilities Die Studierenden können die in der Vorlesung vorgestellten Verfahren exemplarisch ausführen, deren Funktionsweise er läutern und sie analysieren. — Thestudentscanapplythealgorithmspresentedinthelecture on examples, can explain the way they work and are able to analyze them. Kompetenzen / Competencies Die Studierendenbesitzendie Kompetenz, dieinder Vorlesungvorgestellten Technikeneinzusetzen, umparametrisierte Algo rithmen zu entwerfen. Sie sind in der Lage, diese zu bewerten und unter mehreren Alternativen die passendste Technik und Parametrisierung für ein gegebenes Problem auszuwählen. —The students have the competence to use the techniques pre sented in the lecture to construct parameterized algorithms. They are able to choose and evaluate the most fitting techni ques and parametrization for a given problem.","Grundlagen parametrisierter Komplexitätstheorie, Entwurfs- techniken für parametrisierte Algorithmen, z. B. Kernbildung, beschränkte Suchbäume, iterative Kompression, Baumweite und andere Graphparameter sowie untere Schranken. —Foundations of parameterized complexity, algorithmic techniques for parameterized algorithms, e. g. , kernelization, boun ded search trees, iterative compression, treewidth and other graph parameter, and lower bounds.",Mündliche Prüfung (ca. 25 Minuten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben Oralexam(about25minutes); Theexactmodeofassessment will be indicated at the beginning of the semester,"Präsentation mit Tafel und Beamer Presentation with a projector, blackboard","M. Cygan, F. V. Fomin, L. Kowalik, D. Lokshtanov, D. Marx, M. Pilipczuk, M. Pilipczuk, S. Saurabh, Parameterized Algo- rithms, Springer, 2015",MSc AI Engineering and MSc Informatik/ Computer Science
5721,Foundations of Energy Systems,455361,Jedes Wintersemester Every winter semester,1 Semester,De Meer,De Meer,Englisch English,Modulgruppe „A IA“ Focus „A IA“,2 V + 2Ü,60 Std. Präsenz + 50 Std. Übungen + 70 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 50 hrs exercises + 70 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Rechnernetze Computer Networks,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierendenlernenaktuelleundzukünftige Konzepteder Kommunikation zwischen Rechnern und anderen Elementen kennen. Sie erhalten Kenntnisse über den Aufbau und den praktischen Einsatzvon Sensornetzwerken, Virtualisierungundden Smart Grid, sowie der praktischen Bedeutung und Umset  zung von Energieeffizienz. — The students will learn about current and future concepts of communication between computers and other elements. They will gain knowledge of the structure and practical application of sensor networks, virtualization, and the Smart Grid as wellas the practical importance and implementation of energy ef ficiency. Fähigkeiten / Abilities Die Studierenden entwickeln Fertigkeiten im Design und im Entwurf der Architektur und Analysemethoden bei oben ge nannten Formen der Netzwerke. Sie erhalten die Fähigkeitdie Veränderungen und Weiterentwicklungen, die mit dem In ternet geschehen zu verstehen und auf Sensornetze und den Smart Grid etc. anzuwenden. Insbesondere wird die Fähigkeit zur Bestimmung erforderlicher Parameter erlangt. — Studentswilldevelopskillsdesigningarchitectureandanalysis methods in the above types of networks. They will gain theability to understand the changes and developments under gone by the Internet and apply these to sensor networks and the Smart Grid, among other things. In particular, they will be able to determine the required parameters. Kompetenzen / Competencies Die Studierenden sind in der Lage, an Hand der Anforderun gen selbstständig den Aufbau von aktuellen und zukünftigenheterogenen Netzwerken nachzuvollziehen und neue Netzwer ke zu konzipieren. Im Rahmen von Studienprojekten wird die Kompetenz zur praktischen und theoretischen Forschungsar beit erlangt sowie zu dieser eigene wissenschaftliche Beiträge zu verfassen. — The students will be able to independently understand – with reference to the given requirements – the structure of current and future heterogeneous networks, and design new networks. As part of study projects, practical and theoretical research expertise will be acquired and used in scientific papers.","Diese Vorlesung schließt an „Rechnernetze“ an und vertieft das Wissen über die Vernetzung von Rechnern und dem Um- gang mit einem Netz von heterogenen Netzen, sowie dessen Beherrschung. Es wird in die Themen Energieeffizienz, Sen sornetzwerke, Virtualisierung und Smart Grid eingeführt. — This course builds on “Computer Networks“ and consolidates students’ knowledge of computer networks and heterogeneous  network maintenance and control. Students are introduced tothe concepts of energy efficiency, sensor networks, virtualiza tion, and Smart Grid.","Je nach Teilnehmerzahl mündliche Prüfung (ca. 20 Minuten) oder Klausur (90 Minuten). Die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 90-minute written or oral exam of about 20 minutes, depending on the number of participants. The precise mode of as sessment will be announced at the start of the semester.","Präsentation und Beamer, Tafel Presentation and projector, blackboard","Math H. J. Bollen, Fainan Hassan, Integration of Distributed Generation in the Power System, Wirely, 2011 Ali Keyhani, Design of Smart Power Grid Renewable Energy Systems, Wiley, 2011 Holger Karl, Andreas Willig, Protocols and Architectures for Wireless Sensor Networks, Wiley, 2005 A. Berl, A. Fischer, and H. de Meer. Using System Virtualization to Create Virtualized Networks. Workshops der Wissenschaftlichen Konferenz Kommunikation in Verteilten Sys temen (Wow Ki VS2009), Kassel, Germany, March 2-6, 2009. vol. 17, E AS ST, 2009.",MSc AI Engineering and MSc Informatik/ Computer Science
5727,Energy Informatics II,455416,Unregelmäßig Irregular,1 Semester,de Meer,de Meer,Englisch English,Modulgruppe „A IA“ Focus „A IA“,2 V + 2Ü,60 Std. Präsenz + 50 Std. Übungen + 70 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 50 hrs exercises + 70 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Energy Informatics I, Foundations of Energy Systems, Infor- mation and Communication Systems, Network Security, Com- puter Networking",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Understanding of the fundamental methodologies, concepts, protocols and architectures that are used in the context of smart grids: • Studying and modelling of smart grid aspects and the  interaction of individual components• Knowledge of concepts and methods for grid monito ring, smart grid operation, microgrid management and smart grid (co-)simulation Fähigkeiten / Abilities Selecting and applying appropriate methods for modellingsmart grid use cases. Application of grid monitoring, distri buted smart grid control, and grid management with relevantsoftware tools. Studying and mastering co-simulation for eva luation of smart grid applications. Kompetenzen / Competencies Self-awareness of the suitability of measures, techniques andmethods for smart grid control, monitoring and manage ment.","In this lecture, the focus is upon smart grid control. This in- cludes distributed control schemas, as well as global optimi- zation methods. Several state-of-the-art techniques for smart grid use cases such as optimal power flow approximation and relaxation are discussed. In this lecture, we discuss the following main parts: First, methods in traditional power grid control, including feedback controller and the formulation of grid optimizationproblems are explored and discussed in the context of rene wable energy systems. Next, tools for smart grid monitoring, such as digital twins, non-intrusive load monitoring and S CA D A systems, emphasize the need of I CT in power grids. (Co-) simulation is introduced as evaluation concept for smart gridapplications. Finally, an outlook is given on future grid con trolapproachesinformofsector-coupledmicrogrids(=energy cells) and their I CT-based management.","90 minutes written or 20 minutes oral exam (in English) or portfolio. The students will be informed about the exact type of exam by the beginning of the semester. A portfolio examination may contain: • Written or oral partial examination • Documented and executable source code for tasks with tools • Live demonstration of task solutions • Summary of relevant research papers with topics of the module • Technical report • Ongoing technical sub-reports for a final summary into a complete document • Presentation of created material with use of suitable  presentation techniques, e. g. Power Point, Live-Coding, Whiteboard, Flipchart The work on the portfolio will be carried out parallel to the lectureandthefinalsubmissionoftheportfoliowilltakeplace no later than 4 weeks after the end of the lecture period. The lecturer will announce the exact requirements for the portfolio at the beginning of the course.","Präsentation mit Beamer, Tafel Presentation on projector, blackboard","Momoh, James. Smart grid: fundamentals of design and ana- lysis. Vol. 63. John Wiley & Sons, 2012. Addidtionalliteraturewillbereferencedinthelecturematerial",MSc AI Engineering and MSc Informatik/ Computer Science
5730,Optimierung,471765,Unregelmäßig Irregular,1 Semester,Harks,Harks,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,"60 + 30 Std. Präsenz, 90 + 90 Std. Eigenarbeitszeit Workload 60 + 30 contact hours, 90 + 90 hrs independent study",ECTS/Credits: 9,Keine None,"Analysis I + I I, Lineare Algebra I + I I","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen die grundlegenden Fragestellun- gen und Methoden der Optimierung sowie die theoretischen Grundlagen der Algorithmen. — The students get to know the basic challenges and methods of optimization and their theoretical foundations. Fähigkeiten / Abilities  Die Studierenden können Optimierungsprobleme modellierenund geeignete Lösungsverfahren auswählen oder selbst implementieren. Weiterhin haben sie sich grundlegende theoretische Einsichten zur Klassifizierung eines gegebenen Optimierungsproblems hinsichtlich einer Charakterisierung und Sensitivitätsanalyse von Optimallösungen angeeignet. Darüber hin aus sind die Studierenden in der Lage, numerische Verfahren für nichtlineare Problem zu implementieren und anzuwenden. — Students are able to model optimization problems, classifythem and subsequently know how to choose what kind of op timization solver or algorithm. They have gained a thorough theoretical understanding of the basic properties of optimal solutions in terms of characterizations and sensitivity results. Moreover, they are able to implement and apply numerical methods for nonlinear problems. Kompetenzen / Competencies Die Studierenden haben die Kompetenz, Optimierungsprobleme zu modellieren, zu bewerten und mit Rechnerunterstüt zung zu lösen, insbesondere sind sie in der Lage Verfahren für nichtlineare Problem zu implementieren und anzuwenden. —The students are able to model practical problems as optimi zation problems and to select the right solution Methodology including algorithms for nonlinear optimization problems.","Modellierung von Optimierungsproblemen, Lineare Optimie- rung, Simplex-Verfahren, Nichtlineare Optimierung, K KT Theoreme, Dualität, Numerische Verfahren für nichtlineare Optimierungsprobleme —Modelling of optimization problems, linear optimization, sim plex method, nonlinear optimization, K KT theorems, duality, numerical methods for nonlinear problems","2 Teilleistungen: Teilleistung 1 (80%): 120 minütige Klausur über die Gebie-te oder mündliche Prüfung (ca. 30 Minuten); Lineare Opti mierung, Simplex-Verfahren, Nichtlineare Optimierung, K KT Theoreme, Dualität. Teilleistung 2 (20%): 30 minütige Klausur oder mündliche Prüfung (ca. 15 Minuten); Numerische Verfahren für nicht lineare Probleme. Zum Bestehen des Moduls müssen beide Teilleistungen be standen werden. Examination in two parts: Part1(80%):Exam(120minutes)ororalexam(ca. 30minu tes); Linearandnonlinearoptimization, simplexmethod, K KT theorems, duality. Part 2 (20%): Exam (30 minutes) or oral exam (ca. 15 minu tes); Numerical algorithms for nonlinear problems. For passing the modul, both parts need to be passed.","Tafelanschrieb Blackboard, videos in case of virtual lecture",Skriptum,MSc AI Engineering and MSc Informatik/ Computer Science
5734,Mathematical Foundations of Machine Learning,455394,Unregelmäßig Irregular,1 Semester,Sauer,Sauer,Englisch English,Modulgruppe „A IM“ Focus „A IM“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Analysis I I, Numerik, Stochastik Analysis I I, Numerics, Stochastics","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden sollten die grundlegenden Fragestellungen und Methoden der Lerntheorie kennen und verstehen. —The students know and understand basic problems and me thods of learning theory.  Fähigkeiten / Abilities Die Studierenden können Verfahren der Lerntheorie bewerten, selbständig evaluieren, auf praktische Fragestellungen anwen den und einfache Erweiterungen der Verfahren entwickeln. —The students will be able to assess methods of learning theo ry, to evaluate the methods for themselves and to use the methods in practical problems. Furthermore, they are able to develop simple extensions of the methods. Kompetenzen / Competencies Die Teilnehmerkönnenalgorithmische Konzepteder Lerntheorie auf ihre Effizienz und Wirksamkeit beurteilen und eigen ständig implementieren. —The students are able to assess algorithmic concepts of lear ning theory with respect to performance and efficacy and to implement the concepts independently.",Grundlegende Fragestellungen: • Entscheidungsprobleme • Klassifizierungsproblem Verfahren: • Neuronale Netzwerke • Support Vector Machines Grundlagen: • Grundlagen der nichtlinearen Optimierung • Numerische Fragestellungen • Approximationstheoretische Methoden • Bezüge zur Statistik • Reproduzierende Kerne — Basic problems: • Decision problems • Classification problems Methods: • (Artificial) neural networks • Support Vector Machines Basics: • Introduction to nonlinear optimization • Numerical problems • Methods from approximation theory • Connections with statistics • Reproducing Kernels,90minütige Abschlussklausur oder ca. 30 Minuten mündliche Prüfung (wird am Anfang der Veranstaltung mitgeteilt)  90-minute written examination or 30-minute oral examination (the mode of assessment will be announced at the start of the semester),"Präsentation und Beamer, Folien, Tafel, Skript Presentation projector, slides, blackboard, lecture notes","C. M. Bishop, Pattern Recognition and Machine Learning B. Schöllkopf, A. Smola, Learning with Kernels T. Hastie, R. Tibshirami, J. Friedman, The Elements of Sta tistical Learning F. Cucker, D. X. Zhou, Learning Theory Skriptum zur Vorlesung vollständig ausgearbeitet und ge druckt / Lecture Notes",MSc AI Engineering and MSc Informatik/ Computer Science
5756,Funktionalanalysis,451404,Unregelmäßig Irregular,1 Semester,Prochno,Prochno,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Analysis I + I I, Lineare Algebra I + I I oder Grundlagen der Mathematik 1, 2 Analysis I + I I, Linear Algebra I + I I or the foundations of mathematics 1 and 2","Verwendbarkeit in weiteren Bachelor Mathematik, Master Informatik Studiengängen Bachelor Mathematics, Master Computer Science","Kenntnisse / Skills/Knowledge Die Studierenden kennen die grundlegenden theoretischen Techniken, um lineare Funktionale und Operatoren in topo logischen Vektorräumen, insbesondere Banach- und Hilbert Räumen, zu analysieren. —Students know the basic theoretical techniques to analyze li near functionals and operators in topological vector spaces, in particular Banach and Hilbert spaces. Fähigkeiten / Abilities Die Studierenden sind in der Lage, die Methoden der Funktionalanalysisbeikonkreten Fragestellungenzuaktuellen Themen der Mathematik und der Naturwissenschaften anzuwen den. — Students are able to apply the methods of functional analysis to specific, topical problems in mathematics and the natural sciences.","Folgende Themen werden behandelt: • Topologische Vektorräume • Normierte Räume und Vollständigkeit • Lineare Operatoren zwischen normierten Räumen• Satz von der offenen Abbildung, Satz vom abgeschlos senen Graphen und Satz von Baire • Hahn-Banach Sätze und Konsequenzen • Satz von Banach-Steinhaus — The following topics are covered: • Topological vector spaces • Normed spaces and completeness • Linear operators between normed spaces • Open mapping theorem, closed graph theorem and Baire’s theorem • Hahn-Banach theorems and consequences • Theorem of Banach-Steinhaus",90-minütige Klausur oder mündliche Prüfung (ca. 25 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 25-minute individual oral examination or 90-minute writtenexamination. The precise mode of assessment will be announ ced at the start of the semester.,"Tafel, Beamer, Übungsblätter Board, projector, exercise sheets","W. Rudin, Functional Analysis, Mc Graw Hill, 1991. M. Reed/B. Simon, Functional Analysis, Academic Press, 1972.  D. Werner: Funktionalanalysis, Springer, 2007. F. Hirzebruch, W. Scharlau: Einführung in die Funktionalana lysis, B I-Hochschulbücher, 1991.",MSc AI Engineering and MSc Informatik/ Computer Science
5771,Multimedia-Datenbanken,405031,Jedes Sommersemester Every summer semester,1 Semester,Kosch,Kosch,Englisch English,Modulgruppe „A IA“ Focus „A IA“,3 V + 2Ü,75 Std. Präsenz + 50 Std. Übungen + 85 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 75 contact hours + 50 hrs exercises + 85 hrs independent study and exam preparation,ECTS/Credits: 7,Keine None,Keine None,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics, Mas Studiengängen ter Wirtschaftsinformatik Master Computer Science, Master Computational Mathema- tics, Master Information Systems","Kenntnisse / Skills/Knowledge Die Studierenden erwerben Kenntnisse über Techniken der Multimediaverarbeitung und der Extraktion von beschrei benden Multimediaeigenschaften sowie Ähnlichkeitsvergleich von multimedialen Medien und den Aufbau von Multimedia Datenbankmanagementsystemen und der Programmierung von Multimedia-Datenbanken. —Students will acquire knowledge of techniques for multimedia processing and extraction of descriptive multimedia featu resandthedevelopmentofmultimediadatabasemanagement systems and programming of multimedia databases. Fähigkeiten / Abilities Die Studierenden haben die Fähigkeit zur praktischen Spezifi kation von Multimediaanfragen, Umsetzung und Optimierungvon Multimediaanfragen und zum Einsatz von Multimedia standards. —Studentswillacquiretheabilitytoperformpracticalspecifica tion of multimedia requests, implementation and optimization of multimedia queries and the use of multimedia standards. Kompetenzen / Competencies Die Studierenden besitzen die Kompetenz zur Übertragungder Datenbankkenntnisse auf Multimediadaten, Erweiterungen von S QL und Beherrschung von objekt-relationalen Kon strukten am Beispiel Multimedia, technischer Umgang mit Medien, Management von Multimediadaten im Allgemeinen. — Studentswillacquirethecompetencetotransferthedatabaseknowledge on multimedia data, extensions of S QL and mas tery of object-relational constructs for multimedia, technical dealing with the media, management of multimedia data in general.","liche Gliederung: Content-Based Indexing und Retrieval (visuelle Medien): Farbtheorie und Darstellung, kurzer Überblick über weitere Beschreibungsmerkmale wie Textur, Kanten, Extraktion von Merkmalen Retrievalsystemeund Demos Multimediadatenmo dellierung (in X ML: M PE G-7) Multimedia D BM S: Multimedia Zugriffsstrukturen, hier vor allem die Familie der R-Trees, S S-Trees und S R-Trees Multimedia Anfrageverarbeitung und Optimierung Programmierung von Multimedia-D BM SÜberblick über gängige M MD B-Produkte und Forschungspro totypen — New media standards (here especially M PE G - M PE G-4 A VCor derived from M PE G Div X, mp3) and better recording de vices in the media processing industry have been developed in recentyears. Newmethodsandtoolsaredeveloped, whichcan managethemassofrecordedandtransmitteddata. Thevalue of information largely depends on how easily the data can besearched and managed according to their content. These mul timediadatabasesareusedexclusively. Themultimediasearch here differs substantially from textual search. We distinguish content-based search, which for example is to enable color, contour, and texture based distributions for visual media andimage-to- image comparisons. More accurate methods are ba sed on a region -based search, which tries to identify parts ofanimageorvideo. Thesemanticsearchallowsyoutofindme dia based on the fellow in the media persons, or places/events portrayed. A multimedia database system provides here the necessary functions for media manipulation and at the same time enables the content-based and semantic search and that too in large amounts of data, which is made possible due to intelligent index structures. Content structure: Content -Based Indexing and Retrieval (visual media): colortheory and presentation, brief overview of description of fea tures such as texture, edges, extraction of features, retrieval  systems and demos of multimedia data modeling (in X ML: M PE G -7) Multimedia D BM S: Multimedia access structures, especially the family of R-trees, S S-trees and S R- Trees Multimedia Anfrageverarbeitung and optimization Programming of multimedia D BM SOverview of common M MD B products and research prototy pes",90 minütige schriftliche Klausur 90-minute written examination,"Folien-orientierte Vorlesung, Tafelbenützung bei Beispielen, zusätzlichen Erläuterungenundzuerklärenden Sachverhalten:WöchentlicheÜbungeninkleinen Gruppen. Dabeiwerden Präsenzaufgaben sowie die Musterlösungen zu den Übungsaufga ben vorgerechnet Erwartete Aktivitäten der Studierenden: Mitarbeit bei Präsenzübungen, Übungsaufgaben, selbständiges Studiumvonse kundärer Literatur Folienskript ist vorhanden und über Stud. I P zugänglich. — Slides-oriented lecture, panel use with examples, additional explanations and explanatory facts: Weekly tutorials in smallgroups. The presence tasks and the sample solutions are pre calculated to the exercises Expected activities of students: Participation in compulsoryand voluntary tutorials, independent study of secondary lite rature Slide script is accessible and available through Stud. I P","Harald Kosch: “Distributed Multimedia Database Technolo- gies supported by M PE G-7 and M PE G-21”, C RC Press, No- vember 2003, I SB N 0-8493-1854-8 Klaus Meyer-W egener: „Multimediale Datenbanken- Einsatz von Datenbanktechnik in Multimedia-Systemen“, 2. Auflage 2004, Teubner Verlag, I SB N 3-519-12419-X.",MSc AI Engineering and MSc Informatik/ Computer Science
5777,Technologien zur Wahrung der Privatsphäre in,472215,Unregelmäßig Irregular,1 Semester,Kosch,Gerl,Englisch English,Modulgruppe „C CC“ Focus „C CC“,2 V + 1Ü,"30 + 15 Std. Präsenz, 105 Std. Übungen, Nachbereiten des Workload Vorlesungsstoffs und Prüfungsvorbereitung 30 + 15 contact hours, 105 hours of exercises, independent study and exam preparation",ECTS/Credits: 5,Keine None,Keine None,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden kennen die grundlegenden Konzepte der Technologien zur Wahrung der Privatsphäre in Informationssystemen. Siekennenauchdierechtlichen Grundlagendes Da tenschutzes in Europa (G DP R), welche den technischen Mög lichkeiten gegenübergestellt werden. Die Studierenden kennendie Unterschiede zwischen Privatsphäreund Anonymität, kennen Prinzipien für Angriffe auf die Privatsphäre und die Anonymität und Methoden zur Wahrung dieser. Die Studieren denkennendiebesonderen Rahmenbedingungeninrelevanten Anwendungsfällenfür Informationssysteme, wiez. B. medizini sche Informationssysteme oder Data Warehouses. — The students know the core concepts of technologies used for theprotectionofprivacyininformationsystems. Thestudentsalso know the legal basis of data protection in Europe (G D P R), which is contrasted to the technical possibilities. Thestudents know the differences between privacy and anonymi ty, know principles for attacks on privacy and anonymity andmethods to protect them. The students know the special re quirementsinrelevantusecasesforinformationsystems, such as medical information systems or data warehouses. Fähigkeiten / Abilities Die Studierenden der Lehrveranstaltung beherrschen die Aus wahl und Anwendung von geeigneten Methoden zum Schutz der Privatsphäre und Anonymität in Informationssystemenunter Berücksichtigung der spezifischen Rahmenbedingungen und rechtlichen Rahmenbedingungen. Sie sind befähigt Datenschutz-Risiken in Informationssystemen festzustel len und zu bewerten. —The students of the course master the selection and appli cation of suitable methods for the protection of privacy and anonymity in information systems, taking into account the specifics of the information system and legal requirements. The students are able to determine and evaluate data protec tion risks in information systems. Kompetenzen / Competencies Die Teilnehmer verstehen die Grundlagen des technischen Datenschutzes, insbesondere Methoden zur Anonymisierung, Pseudonymisierung und Privacy Modelle. Auch verstehen die Teilnehmer die rechtlichen Grundlagen in Europa für Daten schutz - die General Data Protection Regulation (G DP R). Die Teilnehmer können geeignete Methoden für unterschiedliche Informationssystemeauswählenundunter Beachtungderspe zifischen Rahmenbedingungen anwenden. —The participants understand the basics of technical data protection, in particular methods of anonymization, pseudonymi  zation and privacy models. The participants also understandthe legal basis for data protection in Europe - the General Da ta Protection Regulation(G DP R). Theparticipantscanselect suitable methods for different information systems and apply them taking intoaccount the specific frameworkconditions.","Die Wahrung der Privatsphäre und Anonymität ist ein The- menbereich, welcher sowohl durch technische als auch durchrechtliche Rahmenbedingungen beeinflusst wird. Die Vorlesungbehandeltdiese Rahmenbedingungenim Kontextvon In formationssystemen. Im ersten Teil der Vorlesung werden diegrundlegenden Konzepte und Methoden vermittelt. Im zweiten Teil der Vorlesung werden unterschiedliche Anwendungsfälle in Informations-systemen mit spezifischen Anonymitäts und Privatsphäre-Rahmenbedingungen erläutert. 1. Grundlagen von Privacy-Preservation • Rechtliche Grundlagen in Europa (G DP R) • Anonymität und Privatheit • Grundlagen der Datenhaltung in Informationssystemen • Privacy-Preserving Methoden(Anonymisierung, Privacy Modelle) • Tradeoff zwischen Privacy und Utility 2. Anwendungsfälle • Medizinische Forschungsdaten– Hippocratic Datenbanken und Purpose-based Ac cess Control – Pseudonymisierung • Data Warehouse – Anonymisierungsstrategien – Anfrage-basierte Anonymisierung • Soziale Netzwerke – Datenschutzanforderungen an Soziale Netzwerke – Privacy-Preservation für Graph-Daten —Preserving privacy and anonymity is a topic area that is in fluenced by both technical and legal conditions. The lecturediscusses these conditions in the context of information sys tems. In the first part of the lecture the basic concepts andmethods are conveyed. In the second part of the lecture, diffe rent use cases in information systems with specific anonymity and privacy frameworks are detailed. 1. Basics of privacy preservation • Legal basis in Europe (G DP R) • Anonymity and privacy • Basics of data management in information systems • Privacy-preserving methods (anonymization, privacy  models) • Tradeoff between privacy and utility 2. Use Cases • Medical research data – Hippocratic databases and purpose-based access control – Pseudonymization • Data warehouse – Anonymization strategies – Query-based anonymization • Social networks – Data protection requirements for social networks – Privacy preservation for graph data",90-minütige Klausur oder mündliche Prüfung (20 Minuten); diegenaue Prüfungsartwirdzu Beginndes Semestersbekannt gegeben. 90-minute written or 20-minutes oral examination; the preci se mode of assessment will be announced at the start of the semester.,Präsentation mit Projektor Presentation with projector,Die Literatur wird vom Dozenten zu Beginn der Vorlesung be- kanntgegeben. The literature will be announced by the lecturer at the begin ning of the lecture.,MSc AI Engineering and MSc Informatik/ Computer Science
5807,Programming Applications for Mobile Interaction,405026,Jedes Sommersemester Every summer semester,1 Semester,Kranz,Kranz,Deutsch oder Englisch German or English,Modulgruppe „A IS E“ Focus „A IS E“,"3 V + 2Ü Für die Vorlesung und die Übung im Rahmen der Lehr- veranstaltung besteht Anwesenheitspflicht. In der Vorlesung findet eine wissenschaftlich-technische Ein führung zu den Themen der Lehrveranstaltung statt, diesewerdenindenanschließendenÜbungendirektmitderÜbungs leitung praktisch umgesetzt. Begründung: In der Lehrveranstaltung arbeiten die Teams von Studierenden an einem größeren Projekt über das ganze Semester hindurch. Es zu jedem Arbeitspaket bzw. Themengebiet ein Kolloquium statt, in denen über die Fortschritte berichtet, aufgetretene Probleme ausgetauscht und ihre Lösungen diskutiert werden; am Ende findet ein Abschlusskolloqui um statt. Wird keine umfassende Anwesenheit bei den Kolloquien gefordert, wird die Kompetenz nicht geübt, vor anderen Studie renden zu präsentieren und auf ihre Fragen und Anmerkungen(undnichtnurdiedes Dozenten)einzugehenunddiesezudiskutieren. Die Kompetenz, die präsentierten Inhalte zu analy sieren, bewertenundkritischzudiskutierenisteinewesentliche Anwendung der Lehrveranstaltungsinhalte die nur bei Präsenz eingeübt werden kann. Die vereinzelte Abwesenheit aus nichtvom Studierenden zu vertretenden und nachgewiesenen Grün den ist möglich. Darüber hinaus kann die spezifische Aufgabenstellung besondere Ausstattung erfordern, die nur in den Laboren und Räu men der Universität in geeigneter Weise zur Verfügung steht. Ferner ist ggf. eine direkte Betreuung und Unterweisung an speziellen Geräten notwendig. Daher ist bei spezifischen Auf gabenstellungen eine Bearbeitung außerhalb dieses Kontextesnicht möglich und die Anwesenheit dann zwingende Voraus setzung für die erfolgreiche Bearbeitung. Andernfalls ist die erfolgreiche Teilnahme an der Lehrveranstaltung gefährdet.","75 Std. Präsenz + 135 Std. Übungsaufgaben, Nachbearbei- Workload tung und Prüfungsvorbereitung75 contact hours + 135 hours exercises and independent stu dy and exam preparation",ECTS/Credits: 7,Keine None,"Programmierungin Java, Mensch-Maschine-Interaktion, M ES Praktikum oder S EP, zusätzlich ggf. Verteilte Systeme Programming in Java, Human-Computer-Interaction, M ES or S EP Practical, optionally Distributed Systems",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden lernen die Realisierung von umfangreichen Engineering-Projekten aus dem Kontext Mobiler Anwendun gen und Systeme und die dazu notwendigen Vorgehensweisen, Methoden und Werkzeuge kennen. Theoretische Kenntnissevom Entwurf verteilter Systeme, der Entwicklung mobiler An wendungen und Rechnernetze werden praktisch angewendetund durch die Systementwicklung eines komplexeren Gesamt systems vertieft. Fähigkeiten / Abilities Die Studierenden beherrschen die praktischen Fragestellungen der Entwicklung und Umsetzung von Systemen beste hend aus mobilen Endgeräten und zentralen bzw. dezentralen Infrastrukturen sowie den maßgeblichen Einfluss der Mensch Maschine-Interaktion mit dem Gesamtsystem. Die Studierenden können in einem kleinen Team effektive Lösungen erarbeiten und durchführen und erfolgreich ein vorlesungsbeglei tendes Projekt im Team realisieren.  Kompetenzen / Competencies Die Teilnehmer erlernen soziale Kompetenz durch die Team arbeit und die notwendigen organisatorischen und fachlichen Kompetenzen zur Durchführung von Projekten aus dem Kontext der mobilen Anwendungsentwicklung erfolgreich zu be arbeiten. Teil des Lernziels besteht in der Abschätzung und Kontrolle des Arbeitsaufwandes, sowie der Entwicklung von Strategien zum erfolgreichen Projektmanagement. Dazu wer den Stundenzettel geführt.","umfasst das Systemmodell als Über-sicht, die geeignete Beschreibung der Systemumgebung mittelsgeeigneter Werkzeuge, sowiedie Erfassungund Dokumen tation funktionaler und nicht-funktionaler Anforderungen. 2. ) Für die Mobile Anwendung sind, zusätzlich zu den ge nannten Aufgaben, Prototyping-Methoden einzusetzen (z. B. Wizard-of-Oz)bzw. Studienzur Identifikationder Nutzergrup pen (z. B. Interviews) durchzuführen. 2. Entwurf  1. ) Hauptbestandteil ist ein systematischer Grobentwurf eines Systems, das die in der Analyse ermittelten Anforderungenbestmöglich erfüllt. Auf dieser Basis wird ein detaillierter Entwurf ausgearbeitet, der mit der Problemstellung angemesse nen, domänenspezifischen Werkzeugen und Vorgehensweisen das umzusetzende System spezifiziert und dokumentiert. 2. ) Die mobile Anwendung ist, im Gegensatz zum Hauptsystem, mittels Prototyping-Methoden agil und iterativ zu entwerfenundzuvalidieren. Dazusindz. B. Methodenzur Erstellunghorizontalerbzw. vertikaler High-Level/Low-Level Prototypen aus dem Bereich der Mensch-Maschine-Interaktion ein zusetzen. 3. Umsetzung1. ) Im Rahmen der Umsetzung erfolgt die tatsächliche Reali sierung des entworfenen Systems. Das System besteht in der Regel aus Software- und Hardware-Komponenten. Zur Rea lisierung sind bestehende, konfigurierbare Softwarebausteine mit eigener Software zu ergänzen und zu einem lauffähigen Gesamtsystem zu integrieren. Hierzu werden Methoden aus dem Bereich der verteilten Systeme, z. B. Architekturentwurf, oder der vernetzten Systeme, z. B. Socket-Programmierung, verwendet. 2. ) Die Umsetzung der Mobilen Anwendung wird durch spe zielle Frameworks und Entwicklungssysteme aus dem Bereich mobiler Anwendungen unterstützt. 4. Validierung 1. ) Validierung und Verifikation der Ergebnisse von Entwurf und Umsetzung auf Grundlage der durch Analyse bestimmten Anforderungen. 2. ) Die mobile Anwendung ist durch geeignete Methoden aus dem Bereich der Mensch-Maschine-Interaktion zu evaluieren und die Ergebnisse sind kritisch zu diskutieren. Hierzu könnenz. B. Beobachtung, Fragebögen, Effizienz- und Fehlermessun gen bei der Interaktion eingesetzt werden. Jedes Arbeitspaket kann eine oder mehrere dieser Aktivitä ten umfassen und jede Aktivität kann Gegenstand eines oder mehrerer Arbeitspakete sein. Dabei müssen alle Aktivitätendurch Arbeitspakete adäquat abgedeckt sein. In den einzelnen Arbeitspaketen kommen projekt- und domänenspezifi sche Werkzeuge und Methoden zum Einsatz z. B. zum Testvon Client/Server-Systemen, Schnittstellenbeschreibungsspra chen, Service Description Languages. Zu allen Arbeitspaketen werden Arbeitseinheiten definiert, de ren Aufwand abgeschätzt und deren Realisierung z. B. anhandeines Gantt-Charts organisiert und durchgeführt. Das Ergeb nis jedes Arbeitspakets wird durch einen kurzen Bericht doku mentiert, ggf. begleitet von Software. Aus dem Bericht sindauch Aufwandsabweichungen und Korrekturen vorangegange ner Arbeitspakete ersichtlich. Jedes Arbeitspaket schließt mit einem Kurzvortrag in dernächsten Einheit ab. Die Teams werden durch ein festes wö chentliches Treffen mit dem Betreuer unterstützt. Die Lehrveranstaltung schließt mit einem Abschlusskolloqui um ab, in dem das fertig entwickelte System präsentiert und abgenommen wird.","Schriftliche Dokumentation in Form eines technischen Be- richts, mündliche Präsentationen zu den Arbeitspaketen, die durch geeignete Medien (z. B. Folien) unterstützt werden Dokumentierter und funktionsfähiger Quelltext inkl. aller zur Demonstration notwendigen Informationen, sowie einer Sys temdemonstration im Rahmen des Abschlusskolloquiums.","Präsentation mit Projektor, Gruppenarbeit, Wiki Projector presentation, group work, wiki",wird in Abhängigkeit der konkreten Aufgaben- stellung ausgewählt und bekanntgegeben.,MSc AI Engineering and MSc Informatik/ Computer Science
5812,Stochastische Simulation,451017,Unregelmäßig Irregular,1 Semester,Müller-Gronbach,"Müller-Gronbach, Yaroslavtseva",Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,3 V + 1Ü,60 Std. Präsenz + 60 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 7,Keine None,"Analysis I, Lineare Algebra I, Programmierung I, Einführung in die Stochastik Analysis 1, Linear Algebra 1, Programming 1, Introduction to Stochastics",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Kenntnisgrundlegender Algorithmenderstochastischen Simu- lation, ihrer Eigenschaften und typischer Anwendungen.  — Knowledge of basic algorithms of stochastic simulation, their properties and typical applications Fähigkeiten / Abilities Fähigkeit zur effizienten Implementierung dieser Verfahrenund zur Darstellung und Interpretation von Simulationsergeb nissen im Rahmen der Stochastik und Statistik. Fähigkeit zur eigenständigen Erarbeitung und Präsentation eines Themas aus der stochastischen Simulation. — Ability to efficiently implement these methods and to present and interpret simulation results in the context of stochastics and statistics. Ability to independently develop and present a topic in stochastic simulation.","Das Verfahrenderdirekten Simulation, Simulationvon Vertei- lungen, Methodender Varianzreduktion, Markov Chain Monte Carlo-Methode, Numerische Integration —Direct Simulation, Simulation of Distributions, Variance re duction, Markov Chain Monte Carlo, Numerical integration",Zwei Teilleistungen: Teilleistung 1 (80%):90-minütige Klausur oder mündliche Prüfung (ca. 30 Minu ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. Teilleistung 2 (20%): Vortrag (ca 15 Minuten) über ein Thema der Stochastischen Simulation. Zum Bestehen des Moduls müssen beide Teilleistungen be standen werden. Examination in two parts Part 1 (80%):90-minute written or oral exam of about 30 minutes. The pre cise mode of assessment will be announced at the start of the semester. Part 2 (20%):Oral presentation of about 15 minutes on a subject from Sto chastic Simulation To pass the examination both parts have to be passed.,"Overhead, Beamer, Tafel Slides, projector, blackboard","Müller-Gronbach, Novak, Ritter: Monte Carlo-Algorithmen, Springer, 2012  Weiteres nach Empfehlung des Dozenten / Further reading announced during the lecture",MSc AI Engineering and MSc Informatik/ Computer Science
5820,IT-Sicherheit,405390,Jedes Wintersemester Every winter semester,1 Semester,Posegga,Posegga,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,3 V + 1Ü,60 Std. Präsenz + 40 Std. Übungen + 80 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 40 hrs exercises + 80 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Keine None,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Grundlegendes Wissen über die wichtigsten Konzepte für den Betrieb sicherer und (meist) verteilter Rechnersysteme, dazugehören u. a. Teilkomponenten aus den Bereichen Betriebssysteme, Kommunikations- und I T-Sicherheit, insb. kryptografi sche Grundlagen inkl. P KI, Grundlagen der Netzwerksicherheit, Grundlagen der Sicherheit von Betriebssystemen, grundlegende Sicherheitsprotokolleund-standards, Sicherheitsarchi tekturen, A AA in verteilten Systemen. —Basicknowledgeofthekeyconceptsfortheoperationofsecu re and (mostly) distributed computing systems. These includesub-components in the areas of operating systems, communications and I T security, especially cryptographic basics inclu ding PK I, principlesofnetworksecurity, principlesofoperatingsystem security, basic security protocols and standards, secu rity architectures, A AA in distributed systems. Fähigkeiten / Abilities Der Student ist in der Lage Konzepte anhand von selbst zu lösenden und zu diskutierenden Aufgaben aus ausgewählten Teilbereichen verstehen und Betriebssysteme und Netzwerke bezüglichder Sicherheitanalysierenkönnen. Der Studentkannpassende Verschlüsselungsverfahren für verschiedene Anwen dungsfelder auswählen und Kommunikationsmechanismen inunterschiedlichen Szenarien anwenden. Der Student ist befä higt Verschlüsselungsverfahren anzuwenden. —Students have a firm grasp of concepts from selected sub areas, based on exercises solved by the students themselves. Furthermore, theyareabletoanalysethesecurityofoperatingsystems and networks. Students are able to select appropria te encryption methods for various applications and implement communication mechanisms in different scenarios. Students have the ability to correctly implement encryption methods. Kompetenzen / Competencies Der Student ist befähigt Konzepte und Architekturalternativen für Kommunikationsmechanismen (Dienste und Protokol le) kennen, bewerten und auswählen zu können. Der Studenthat die Kompetenz des Einsatzes von P KI-Technologie in verschiedenen Anwendungsfeldernunddie Sicherheitvonsymmetrischen und asymmetrischen Verschlüsselungsverfahren beur teilen zu können. Der Student versteht Sicherheitsprotokolleund -standards einstufen und Sicherheitsarchitekturen bewer ten zu können. Der Student erlernt die Kooperations- und Teamfähigkeit in den Präsenz- und praktischen Rechnerübun gen. Der Studentsteigertdie Problemlösungskompetenzdurch selbstständiges Erarbeiten von Lösungen in den Übungen. Der Student kann die Komplexität systematisch beherrschen undkritische Bewertung von Lösungsansätzen und ihrer algorith mischen Umsetzung durchführen.  — Studentsareabletoidentify, evaluateandselectconceptsandarchitecturalalternativesforcommunicationmechanisms(ser vices and protocols). Students are expected to be competent intheuseof PK Itechnologyinvariousscenariosandtobeableto assess the security of symmetric and asymmetric encrypti onmethods. Studentsarewell-versedinsecurityprotocolsandstandards and are able to classify and assess security architec tures. Students have learnt cooperation and teamwork in theclassroom and practical computer tutorials. Students have al so honed their problem-solving skills by working through the exercises in the tutorials, autonomously arriving at a solution. Studentsareabletosystematicallyaddressthecomplexityand perform critical assessment of approaches and its algorithmic implementation.","In dem Modul werden folgende Inhalte behandelt: Einfüh- rung in die I T-Sicherheit; kryptographische Grundlagen; Ver-traulichkeit, Integrität, Verfügbarkeit; Authentication & Authorization; Sicherheitsmodule; O TPs, Token; Sicherheitsprotokolle; Grundlagen; S SL; I PS EC; Benutzerverwaltung; Zugriffsschutz; Sicherheit von T CP/I P Diensten; Grundlegende Sicherheitsprotokolle und –standards; Symmetrische Verschlüsselung (D ES, A ES, etc. ); Asymmetrische Verschlüsse lung (R SA, P GP); A AA in verteilten Systemen; Kerberos; X. 509 Authentifikation; Netzwerk- und Internetsicherheit; I PSec; T LS/S SL; Einführung in P KI; Zertifikate; Schlüsselgene rierung; Certificate authorities; Certificate revocation und C A Hierarchie. — In the module, the following topics are treated: Introductionto I T Security, Cryptographic Basics, Confidentiality, Integrity, Availability, Authentication & Authorization, security modules; O TPs, tokens, security protocols, foundations, S SL, I P S EC, usermanagement, accessprotection, securityof TC P/I P services, Basic security protocols and standards; Symmetric encryption (D ES, A ES, etc. ); Asymmetric encryption (R SA, P GP), A AA in distributed systems, Kerberos, X. 509 authentication, network and Internet security, I PSec, T LS/S SL, introduction to P KI, certificates, key generation, certificate au thorities, certificate revocation and C A hierarchy","90 min Klausur oder ca. 15 min mündliche Prüfung, jeweils in englischer oder deutscher Sprache und je nach Anzahl der Hörer. Die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben  90-minutewrittenexaminationor15-minuteoralexamination, depending on the number of listeners, in English or German. The exact mode of assessment will be indicated at the begin ning of the semester","Präsentation und Beamer, Tafel Presentation and projector, blackboard","H. -P. Gumm, M. Sommer: „Einführung in die Informatik“, 5. Auflage Oldenbourg-Verlag, München, 2002 Dieter Gollmann: Computer Security, John Wiley, 1999 W. Stallings: Cryptography and Network Security, Pearson, 2003 Niemi and Nyberg: U MT S Security, John Wiley, 2003",MSc AI Engineering and MSc Informatik/ Computer Science
5838,Information Theory,455440,Unregelmäßig Irregular,1 Semester,Zumbrägel,Zumbrägel,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Lineare Algebra, Wahrscheinlichkeitstheorie Linear Algebra, Probability Theory","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics",The students learn the mathematical foundations of informa- teion theory and acquire probabilistic and constructive proof methods. They are able to apply these concepts to addresssource coding and channel coding problems and can recogni ze information theoretic concepts in related areas.,"Information theory deals with two fundamental questions in communication theory, namely the limits of data compression and the ultimate transmission rate of communication. In this course, the mathematical notions to address these problems are being developed. The following topics are planned: Entropy, Mutual Informati on and Data Compression, Channel Capacity and Shannon’s Noisy Coding Theorem, Time permitting, an introduction to Universal Source Coding, Kolmogorov Complexity and Net work Information Theory.",Klausur(120 Min. )odermündliche Prüfung(ca. 30 Min. ). Die Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 120 minutes written exam or 30 minutes oral exam. The pre cise mode of assessment will be announced at the start of the semester.,Tafel Blackboard,"Thomas M. Cover and Joy A. Thomas, Elements for Informa- tion Theory, John Wiley & Sons (2006)",MSc AI Engineering and MSc Informatik/ Computer Science
5843,Software-Analyse,455368,Jedes Sommersemester Every summer semester,1 Semester,Fraser,Fraser,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,2 V + 2Ü,"60 Std. Präsenz + 120 Std. Übungsaufgaben, Nachbearbei- Workload tung des Vorlesungsstoffs und Prüfungsvorbereitung 60 contact hours + 120 hours exercises, independent study and exam preparation",ECTS/Credits: 6,Keine None,"Software Engineering, Programmierung I + I I, S EP Software Engineering, Programming I + I I, S EP",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden erlernen Basiskonzepte der Analyse von Software und fortgeschrittene Methoden zur Fehlerfin dung. Die Konzepte umfassen statische Methoden der Sourcecode-Analyse, dynamische Methoden der Laufzeitana lyse, Bytecodeinstrumentierung, Testmethoden, automatisierte Debugging-und Testmethoden, Fehlervorhersage, sowieau tomatisierte Korrektheitsbeweise. — Students learn about the basic concepts of software analysis and advanced methods of identifying software defects. The conceptsincludestaticsourcecodeanalysis, dynamicprogramanalysis, bytecode instrumentation, testing methods, automa ted debugging and fault localisation, defect prediction, as well as formal verification. Fähigkeiten / Abilities Die Teilnehmer lernen die wichtigsten Methoden zum Analy sieren von Softwaresystemen kennen. Insbesondere sind sie inder Lage, Analysemethoden programmiertechnisch umzuset zen. Die dazu benötigten grundlegenden Algorithmen könnendie Studierenden erklären und ggf. mit alternativen Algorith men vergleichen. — Theparticipantsarefamiliarwiththemostimportantmethodsfor analysing software systems and are able to implement these. They can explain the basic algorithms used in their imple mentation and compare them with alternative ones. Kompetenzen / Competencies Die Teilnehmer erlernen theoretische und praktische Kompe tenzen in der Konzeption, Umsetzung und Evaluierung von Softwareanalysen. Weiterhin sind die Studierenden befähigt, einzelne Analysen auch auf andere Problemstellungen und Analyseziele anzupassen. — The participants gain theoretical and practical competencies concerning the conception, implementation and evaluation of softwareanalyses. Inaddition, theyareabletoadaptindividual analyses to different problems and purposes.",The course covers the following topics: • Control- and Dataflow Analysis • Code Clone Detection • Slicing • Fault localisation • Fuzzing • Defect prediction • Abstract Interpretation • Symbolic Execution • Software model checking • Program repair • Reverse engineering,"90-minütige Klausur oder Porfolio-Prüfung. Mögliche Port- foliobestandteile sind technische Berichte, dokumentierterund funktionsfähiger Quelltext für Softwareanalysen, Live Systemdemonstration, Teilpräsentationenzu Einzelleistungen, laufende, fortzuschreibende technische Teilberichte zur Zusammenfassungzueinem Gesamtdokument, Abschlusspräsen tation. Die genauen Anforderungen werden vom Dozierenden zu Beginn der Veranstaltung bekanntgegeben. 90-minute exam or portfolio-exam. The exact mode of assess ment will be announced at the start of the semester.","Präsentation, Beamer, Übungsblätter Presentation, projector, exercises",wird in Abhängigkeit von der konkreten Aufgaben- stellung ausgewählt und bekanntgegeben. Will be announced in the lectures. Further reading will be an nounced for the individual assignments.,MSc AI Engineering and MSc Informatik/ Computer Science
5844,Advanced Software Product Development,455376,Unregelmäßig Irregular,1 Semester,Fraser,Fraser,Deutsch German,Modulgruppe „A IS E“ Focus „A IS E“,2Ü+4 P,60 Std. Präsenz + 180 Std. Vor- und Nachbearbeitung des Workload Praktikums 60 contact hours + 180 hours independent study,ECTS/Credits: 8,Keine None,"Programmierung I + I I, S EP, Software Engineering Programming I + I I, S EP, Software Engineering",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden erlernen Methoden und Techniken zur Ent- wicklung eines Software Systems aus einer holistischen Sicht, von der Ideenfindung, über die Konzeption und Analyse der Anforderungen, bis hin zum fertigen Produkt und dessen Ver marktung. — The students learn holistic methods and techniques for deve lopingsoftwaresystemsfromideationovertheconceptionandrequirements analysis to the finished product and its marke ting. Fähigkeiten / Abilities Die Teilnehmer erwerben die Fähigkeit, Methoden, Praktiken und Tools der agilen Softwareentwicklung zur Entwicklung umfangreicher Softwaresysteme zielgerichtet einzusetzen und auf neue Probleme bis hin zur Produktreife zu übertragen. — The participants gain the ability to apply methods, practices and tools of agile software development to produce extensive software systems and transfer them to new problems as far as production readiness. Kompetenzen / Competencies Die Teilnehmer erwerben Kompetenzen auf technischer, me thodischer und auf organisatorischer Ebene. Sie sind in der Lage, für ein gegebenes Problem Anforderungen zu erfassen, ein Design sowohl auf technischer als auch auf Benutzerebene zu erstellen, und dieses effizient umzusetzen. —The participants gain technical, methodical and organizatio nal knowledge. They are able to determine the requirements for a given problem, to create a design at a technical and user level, and to implement it efficiently.","Studierende bearbeiten eine Problemstellung, die als grober thematischer Rahmen vorgegeben wird. Aus diesem Rahmen heraus entwickeln die Studierenden konkrete Lösungsideen, welche schrittweise verfeinert und zu einem Produkt entwickelt werden. Ausgangspunkte für die Problemstellungen bil den technische oder gesellschaftliche Fragestellungen, welche zu Beginn der Veranstaltung ausgewählt werden. Zentral sind hierbei auch die Problemstellungen, welche aktuelle Themendes Software Engineeringformen, etwa Data Scienceoder Machine Learning. Dabeiwerdeninder Veranstaltungimmermin destens die folgenden Grundthemen behandelt: • Anforderungsanalyse mit User Stories • Agile Entwicklung mit Scrum/Kanban/Scrumban • Test Driven Development • U X Design • Marketing • Rechtliche Aspekte (Copyright, Lizenzen, etc. ) • Gründung/Start Up Übergeordnetesunderwünschtes Ergebnisder Arbeitenistein potenziellvermarktbares Produkt, d. h. eine Software, dieallen wesentlichen Qualitätsanforderungen an eine produktiv ein setzbare Software entspricht und einen für ein erfolgreiches Produkt ausreichend großen Nutzerkreis erreichen kann. Studierende erhalten theoretische Grundlagen in Vorträgen, und erarbeiten in kleinen Teams eine Lösung für das Problem. Dabei folgen die Studierenden einem agilen Vorgehensmodell in Iterationen mit rotierenden Rollen, inklusive regelmäßiger Review- und Planungstreffen; beginnend bei eigener Anforde rungsanalyse, bis hin zur Endabnahme und Vermarktung. — Givenatechnicalorsocialissueannouncedatthebeginningof the course, students develop their own solutions to the topic, which they refine step by step. For this, current issues in soft ware engineering such as data science and machine learning play a central role. The course covers at least the following topics: • Requirements analysis with user stories • Agile development with Scrum/Kanban/Scrumban • Test driven development • U X design • Marketing • Legal aspects (copyright, license, etc. ) • Start Up The desired result is a marketable product meeting all central qualityrequirementsadeployablesoftwareshouldmeetaswell as a broad spectrum of potential users. Students gain knowledge about the theoretical foundations through presentations. Participants work in small teams to come up with a solution using an agile process model withrotating roles including regular meetings for review and plan ning.","Portfolio-Prüfung. Mögliche Portfoliobestandteile sind: Dokumentierter und funktionsfähiger Quelltext für einzel- ne Module, Live-Systemdemonstration, technischer Bericht, Burndown-Charts und Prozessdokumentation, Teilpräsentationen zu Einzelleistungen, Abschlusspräsentation der erstellten Software und der verwendeten Methodiken mit anschlie ßenden mündlichen Prüfungsfragen Die genauen Anforderungen werden vom Dozierenden zu Be ginn der Veranstaltung bekanntgegeben. — Portfolio-exam. Possible components of the portfolio include:Documented, compilable source code of all software components, Live demonstrations, Technical report, Burndowncharts and documentation of development process, Presenta  tions of individual components and steps, Final presentation ofthesoftwareproductandthemethodologyappliedwithoral examination. The exact mode of assessment will be announced at the start of the semester.","Präsentation, Beamer, Übungsblätter Presentation, projector, exercises",wirdin Abhängigkeitderkonkreten Aufgabenstellung ausgewählt und bekanntgegeben. Will be announced in the lectures. Further reading will be announced for the individual assignments.,MSc AI Engineering and MSc Informatik/ Computer Science
5845,Search-Based Software Engineering,455378,Jedes Wintersemester Every winter semester,1 Semester,Fraser,Fraser,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,2 V + 2Ü,"60 Std. Präsenz + 120 Std. Übungsaufgaben, Nachbearbei- Workload tung des Vorlesungsstoffs und Prüfungsvorbereitung 60 contact hours + 120 hours exercises, independent study and exam preparation",ECTS/Credits: 6,Keine None,"Software Engineering, Programmierung I + I I, S EP Software Engineering, Programming I + I I, S EP",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Search-based Software Engineering (S BS E) beschreibt die Anwendung meta-heuristischer Suchverfahren wie genetische Algorithmen, Simulated Annealing, oder Tabu Search, auf Software Engineering Probleme. Die Vorlesung deckt theoretische Grundlagen meta-heuristischer Suchverfahren ab (lo  kale Suchverfahren und Populations-basierte Verfahren wie Genetische Algorithmen oder Particle Swarm Optimisation) und deren Anwendung auf Softwareentwicklungsprobleme desgesamten Softwareentwicklungsprozesses (Requirements, Design, Planung, Testing, Wartung, etc). Die Studierendenerlernen theoretische Grundlagen meta-heuristischer Suchverfahren und die wichtigsten Algorithmen lokaler und populationsbasierter Suchalgorithmen sowie Basiskonzepte der Optimie rungsprobleme in der Softwareentwicklung. —Search-based software engineering (S BS E) applies metaheuri stic search techniques such as genetic algorithms, simulated annealing and tabu search to software engineering problems. Thiscoursecoversthetheoryofmajorclassesofmetaheuristic optimisation algorithms, including local search algorithms and populationbasedoptimisation(suchasgeneticalgorithmsandparticle swarm optimisation) and their application to software engineering problems across the software development li fecycle (requirements, design, planning, testing, maintenance, etc). Participants will learn the fundamental basics of meta heuristicsearch, aswellasessentiallocalandpopulation-basedsearch algorithms and their application areas in software en gineering. Fähigkeiten / Abilities Die Teilnehmer kennen die wichtigsten meta-heurstischen Suchalgorithmen und deren Anwendungsgebiete in der Soft wareentwicklung. Sie sind in der Lage, Optimierungsansätzeprogrammiertechnisch umzusetzen. Dazu benötigte grundle gende Algorithmen können sie erklären und vergleichen. — Participants know the most important meta-heuristic search algorithms and their application areas in software engineering. They will be able to implement, explain and compare relevant algorithms. Kompetenzen / Competencies Die Teilnehmer erlernen theoretische und praktische Kompe tenzen in der Konzeption, Umsetzung und Evaluierung von Suchverfahren in der Anwendung auf Softwareentwicklungs Probleme. Die Studierendens sind befähigt, einzelne Optimie rungsansätze auch auf andere Problemstellungen anzupassen. — Participants learn theoretical and practical competencies forthe conception, implementation, and evaluation of search algorithms and their application to problems in software engi neering. In particular, participants will be able to implement  these algorithms and apply them to new problems.",• Local Search • Evolutionary Algorithms • Multi-Objective Optimisation • Memetic Algorithms • Novelty Search • Parallel Search • Search-based Testing • Genetic Programming • Genetic Improvement • Program Repair,"90-minütige Klausur oder Porfolio-Prüfung. Mögliche Port- foliobestandteile sind technische Berichte, dokumentierterund funktionsfähiger Quelltext für Softwareanalysen, Live Systemdemonstration, Teilpräsentationenzu Einzelleistungen, laufende, fortzuschreibende technische Teilberichte zur Zusammenfassungzueinem Gesamtdokument, Abschlusspräsen tation. Die genauen Anforderungen werden vom Dozierenden zu Beginn der Veranstaltung bekanntgegeben. 90-minute exam or portfolio-exam. The exact mode of assess ment will be announced at the start of the semester.","Präsentation, Beamer, Übungsblätter Presentation, projector, exercises",wird in Abhängigkeit von der konkreten Aufgaben- stellung ausgewählt und bekanntgegeben. Will be announced in the lectures. Further reading will be an nounced for the individual assignments.,MSc AI Engineering and MSc Informatik/ Computer Science
5874,IT-Sicherheitsrecht,222431,Jedes Wintersemester Every winter semesters,1 Semester,"Schröder, Lewinski (Juristische Fakultät / Faculty of Law)",Hartl (Juristische Fakultät / Faculty of Law),Deutsch German,Modulgruppe „C CC“ Focus „C CC“,2 V,30 Std. Präsenz + 120 Std. Nachbereitung und Prüfungsvor- Workload bereitung 30 contact hours + 120 hours self study,ECTS/Credits: 5,Keine None,Keine None,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden erwerben Kenntnisse der Rechtsgrundla-gen des I T-Sicherheitsrechts (verfassungsrechtliche Grundla gen und öffentlich sowie zivilrechtliche Bezüge einschließlichdes Datenschutzrechts und weiterer spezialgesetzlicher Regelungen) sowie des Themenkomplexes I T-Sicherheitsrecht ins gesamt aus politischer, wirtschaftlicher und technischer Perspektive; diesschließtdie Kenntnisderwichtigstenhöchstrichterlichen Rechtsprechung mit ein. Zudem erlangen die Studierenden Kenntnis von Fallkonstellationen, in denen technische Systeme und ihr Einsatz in der Praxis typischerweise I T sicherheitsrechtliche Fragen aufwerfen. Fähigkeiten / Abilities Die Studierenden beherrschen die Erfassung juristischer Pro bleme technischer Sachverhalte auf Basis der relevantenrechtlichen Grundlagen im I T-Sicherheitsrecht. Die Studie renden beherrschen die Erarbeitung von Lösungsvorschlägenfür die jeweiligen rechtlichen Probleme im Themenbereich I T Sicherheit. Kompetenzen / Competencies Die Studierenden besitzen die Kompetenz zur Anwendungspezifisch juristischer Methoden der Fallbearbeitung undlösung sowie Transferkompetenz zur Anwendung des erworbenen Wissens und der erworbenen Fähigkeiten auf die ty pischerweise sehr schnell auftretenden neuen Probleme des I T-Sicherheitsrechts. Sie beherrschen die Interaktion zwischen technischundjuristischausgebildeten Personenimberuflichen Umfeld (gegenseitige Wissensvermittlung, gemeinsame Pro blemlösungsstrategien).","Zunächst erfolgt eine grundlegende Einführung in die Thema- tikdes IT-Sicherheitsrechts. Dabeiwerden Grundfragenanden Schnittstellen von Technik und Recht sowie rechtliche Grund prinzipien vorgestellt und ergänzend die relevanten Normenund die Arbeit mit zentralen rechtlichen Konzepten (allgemeine Grundlagendes Zivilrechtsundöffentlichen Rechtswie Haftung, Anspruchsgrundlagen, Verschulden und Verschuldens typen, auslegungsbedürftige Tatbestandmerkmale, Ermessen oder Formen des Verwaltungshandeln) eingeführt. Es folgen themenspezifische Blöcke immer unter Rückgriffauf eingeführten Grundlagen. Dabei werden – unter Be rücksichtigung aktueller Entwicklungen und Schwerpunkte –Grundrechte und staatliches Eingriffshandeln sowie Schutz pflichten, Grundlagen des Datenschutzrechts, des technischen Datenschutzes, I T-Sicherheit im arbeitsrechtlichen Kontext, Haftungs- und Produkthaftungsfragen (einschließlich Vertragsgrundlagen und Providerhaftung), strafrechtliche Flan kierung sowie Frage nach der rechtskonformen Modellierungder Organisation der I T-Sicherheit im Unternehmen behandelt. Schließlich sind öffentlich-rechtliche Regularien und Vor gabenanden Schutz(kritischer)technischer Infrastruktur Teil der Veranstaltung.  Schwerpunkt der Veranstaltung sind insgesamt, vor dem Hintergrund der genannten Themen, die mehrdimensionalen rechtlichen Anforderungen an Akteure unter dem Aspekt der IT-Sicherheit, dabei vor allem die Vermeidung rechtlicher Ri siken und der Umfang rechtlicher Verantwortung auf privater Ebenesowie Auftretenund(mögliche)Regulieransätzederöf fentlichen Hand.","90 Minuten Klausur oder ca. 20 Minuten mündliche Prüfung, jenach Anzahlder Hörer. Diegenaue Prüfungsartwirdzu Be- ginn des Semesters bekannt gegeben. Written exam (90 minutes) or oral exam (about 20 minutes); the precise mode of assessment will be announced at the start of the semester.",Präsentation und Beamer Presentation and projector,"Köhler/Fetzer - Recht des Internet (Start ins Rechtsgebiet), 2016 Voigt, I T-Sicherheitsrecht, 2018 Kühling/Klar, Datenschutzrecht (Start ins Rechtsgebiet), 2018 Hornung/Schallbruch (Hrsg. ), I T-Sicherheitsrecht, 2020 Weitere Hinweise in der Vorlesung",MSc AI Engineering and MSc Informatik/ Computer Science
5942,Network Science,482601,Unregelmäßig Irregular,1 Semester,Granitzer,Granitzer,Englisch English,Modulgruppe „A IA“ Focus „A IA“,2 V + 1Ü,"45 Std. Präsenz + 105 Std. Übungsaufgaben/Referate, Vor- Workload arbeit und Nacharbeit 45 contact hours + 105 hours exercises, preparation and follow-up",ECTS/Credits: 5,Data Science,Keine None,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge The students gain insights into Modeling and analysing com-plexreal-worldnetworkswithaspecialemphasisonsocialnet works. In particular knowledge on the following topics will be gained: • Basic Graph Theory (Undirected/Directed/Bipartite  Graphs, Connectivity, Graph Traversal) • Properties of Social Networks (Strong and Weak ties, Structural Balance, Context in Social Netzworks, Small World Networks) • Properties of Information Networks (Structure of the Web, Decentralized Search, Navigability oft he Net works) • Network Dynamics and Evolution Fähigkeiten / Abilities The students will be able to analyse complex real-world net works and draw conclusions on their structural properties anddynamics. They will be able to develop and apply different algorithmsforanalysingnetworks, likeforexampleclusteringal gorithms for detecting sub-structures and traversal algorithms for estimating statistical properties (e. g. centrality, clustering coefficient). Furthermore, students will be able to interpret the outcome of the algorithms in terms of underlying socialtheories, like for example Triadic Closure or Structural Balan ce Theory. Kompetenzen / Competencies Students aquire the competencies to analyse network dataespecially in web-based information systems and use this ana lysis to understand and refine those information systems.","In particular, the following topics are covered: • Basic Network Theory (Graph Types, Connectivity, Graph Traversal) • Networks (Small World Phenomenon, Strong and Weak Ties, Information Flow, Community Detection) • Analysing the context of social networks (Homophily and Segregation) • Positive and Negative Relationships in Networks• Information Networks (Structure oft he Web, Link Ana lysis and Web Search) • Network Dynamics (Population Models, Information Cascades, Rich-get-richer, Cascading Behavior in Net works, Network Epidemics)",90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 90-minute written or 20-minute oral examination. The mode of assessment will be announced at the start of the semester.,"Beamer, Tafel Blackboard, projector","Networks, Crowds, and Markets: Reasoning About a Highly Connected World von David Easley und Jon Kleinberg von Cambridge University Press Barabási, Albert-László. Network science. Cambridge Univer sity Press, 2016. Mark Newman, Networks: An Introduction. Oxford University Press, 2010",MSc AI Engineering and MSc Informatik/ Computer Science
5943,Data Science Lab,482604,Unregelmäßig Irregular,1 Semester,Granitzer,Granitzer,Englisch English,Modulgruppe „A IM“ Focus „A IM“,4Ü,60 Std. Präsenz + 120 Std. Vor- und Nachbearbeitung des Workload Praktikums 60 contact hours + 120 h self-study and implementation,ECTS/Credits: 6,Keine None,"Visual Analytics oder Network Science oder Advanced Topics in Data Science, Kenntnisse in Python Visual Analytics or Network Science or Advanced Topics in Data Science, Python Programming Language","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Students will acquire knowledge of current data analysis tech-nologies and corresponding python libraries to analyze web baseddatasetssuchas Webpages, socialnetworks, userdata, etc. They will obtain methodological knowledge.  Fähigkeiten / Abilities Students acquire the ability to apply data science technologyon web data and to extract interesting patterns from very lar ge data sets. They will develop the ability to use appropriate software libraries and tools to do so. Kompetenzen / Competencies Studentsacquiretheskillstoanalyzemassive, web-baseddata sets and extract interesting patterns.","Students will work in groups on selected data science specific problems, like for example extracting communities from soci- al networks, clustering web pages, analyzing trends in social media or identifying mobility patterns. Students will be given a small research projects in the formof an analysis goal, a data set and a target metric. The re search project will be conducted in four phases, supervised by the lecture. In every phase, one team member takes the responsibility. The following phases are foreseen: • Design Phase: Students will conduct a state of the art analysis on currently best performing methods on thedomain and corresponding libraries. Based on this ana lysis, students will design their experiment in terms ofanalysismethods, datapreprocessingandevaluationap proach. The experimental design will be reported in the form of a presentation. • Data Preprocessing:Studentswill applydatapreproces sing methods in order to convert raw data into a usableformat for subsequent data analysis. Results are repor ted in the form of a presentation. • Data Analysis: Students will implement the chosen data analysis methods using selected libraries and apply the implementation to the preprocessed data. Results are reported in the form of a presentation. • Evaluation: Students will evaluate different parameter settingsandalgorithmiccombinationsorderivepatterns from the given data set and interpret those. Finally, the results will be reported in a technical report.",Portfolio exam consisting of a written technical report on the outcome of the project and 4 presentations (one per phase / per team member).,"Tafel, Beamer, Rechner Blackboard, projector, calculator",Own Lecture Notes and selected publications. Literature will be announced depending on the concrete topics.,MSc AI Engineering and MSc Informatik/ Computer Science
5944,Machine Learning Lab,455382,Unregelmäßig Irregular,1 Semester,Granitzer,Granitzer,Englisch English,Modulgruppe „A IM“ Focus „A IM“,4Ü,60 Std. Präsenz + 120 Std. Vor- und Nachbearbeitung des Workload Praktikums60 contact hours + 120 h independent study and implemen tation,ECTS/Credits: 6,Keine None,"Advanced Topics in Data Science oder Visual Analytics, Kenntnisse in Python Advanced Topics in Data Science or Visual Analytics, Python Programming Language","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Students will acquire knowledge on implementation details ofmachinelearningandoptimizationalgorithmsandhowtorealize them using numerical libraries in Python. Covered algo  rithms include supervised, unsupervised and semi-supervisedalgorithms like decision trees, support vector machines, Baye sian classifiers, hierarchical agglomerative clustering, Geneticalgorithms etc. as well as optimization methods (e. g. stocha stic gradient descent, Ada Grad). Fähigkeiten / Abilities Students acquire the ability to implement machine learning algorithms from scratch using only numerical libraries. Theywill be able to evaluate their implementation and identify po tential implementation errors. Kompetenzen / Competencies Students acquire the skill to convert machine learning algo rithmsprovidedinamathematicalformulationorpseudo-codeinto concrete implementations. These skills include the imple mentation of performance metrics and the evaluation of theimplemented algorithms without the help of third-party libra ries.","During the semester, Students will be presented 6-10 diffe- rent machine learning algorithms covering supervised, unsu- pervised, and semi-supervised learning paradigms as well as different optimization methods. Examples are Decision Trees, Random Forests, Feedforward Neural Networks, Naive Bayes, Hierarchical Agglomerative Clustering, D BScan, Support Vec tor Machine, Support Vector Regression, Stochastic Gradient Descent, Ada Grad etc. During the lab sessions, students will have to implement tho se algorithms independently of each other using high-level programming languages, particularly Python, but without thehelp of any high-level library. Students will also have to de velop corresponding evaluation metrics, like precision, recall, accuracy, average precision etc. and evaluate the algorithms based on standardized test data sets.","Portfolio exam consisting in the submission of the implemen- tation code for selected machine learning algorithms plus do- cumentation and the evaluation on a provided test-datasets. Students present their solution and results. (see § 5 Abs. 1 Nr. 4, Point 3 F Stu Po Master Computer Science)","Tafel, Beamer, Rechner Blackboard, projector, calculator",Own Lecture Notes and selected publications. Literature will be announced depending on the concrete topics.,MSc AI Engineering and MSc Informatik/ Computer Science
5945,Advanced Topics in Data Science,482603,Unregelmäßig Irregular,1 Semester,Granitzer,Granitzer,Englisch English,Modulgruppe „A IM“ Focus „A IM“,2 V + 1Ü,"45 Std Präsenz + 105 Std. Übungsaufgaben/Referate, Vor- Workload und Nachbereitung45 contact hours + 105 hrs exercises, preparation and follow up",ECTS/Credits: 5,Keine None,Data Science,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge The students will engage advanced topics and recent deve- lopments in the field of data science. Special emphasize willbe placed on natural computing techniques, like genetic algo rithms and deep neural networks, as well as on reinforcement learning. The students will obtain in-depth knowledge on the particular algorithms and application areas (with focus web based information systems). Fähigkeiten / Abilities The students will be able to implement data analytical algo rithms, in particular deep neural network and reinforcementlearning approaches. They will be able to run advanced expe riments on large data sets. Kompetenzen / Competencies Thestudentswillobtainthecompetenciestoutilizerecentda ta analytical methods, like deep learning, for analysing largedatasetsfromweb-basedinformationsystems(e. g. socialme dia). Students will be enabled to setup experiments, conduct and evaluate them properly.","The following topics will be covered: • Natural Computing • Deep Neural Networks• Representational Learning with Deep Networks inclu ding Autoencoder Networks (Denoising, Variational, Sparse), Hopfield Networks, Boltzmann Machines • (Deep) Convolutional Neural Networks • Recurrent Neural Networks • Deep Residual Networks • Deep Reinforcement Learning • Selected Application Areas",90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben 90-minute examination or 20-minute oral examination. The precise mode of assessment will be announced at the start of the semester,"Tafel, Beamer Blackboard, projector",Own Lecture Notes and selected publications. Literature will be announced depending on the concrete topics.,MSc AI Engineering and MSc Informatik/ Computer Science
5951,Theory of Evolutionary Computation,455399,Unregelmäßig Irregular,1 Semester,Sudholt,Sudholt,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,3 V + 2Ü,75 Std. Präsenz + 60 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 75 contact hours + 60 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 7,Keine None,"Algorithmen und Datenstrukturen, Enführung in die Stochas- tik Algorithms and Data Structures, Introduction to Stochastics","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Am Ende der Lehrveranstaltung werden Studierende in der Lage sein, • die Effizienzevolutionärer Algorithmenmitentsprechen den Analysemethoden zu analysieren, • die Funktionsweise evolutionärer Algorithmen zu verste  hen und ihre Stärken und Schwächen zu kennen, • den Effekt algorithmischer Design-Entscheidungen und Parameterwahlen auf die Performanz evolutionärer Al gorithmen zu verstehen, • fundierte Design-Entscheidungen bei der Anwendung evolutionärer Algorithmen zu treffen und• die Effizienz evolutionärer Algorithmen auf anschauli chen Problemen zu beschreiben. — At the end of the course students will be able to • analyse the efficiency of evolutionary algorithms using appropriate analytical methods• understand the working principles of evolutionary algo rithms along with their strengths and weaknesses, • appreciate the effect of design choices and parameters on the performance of evolutionary algorithms, • make informed design choices when using evolutionary algorithms, and• describe the efficiency of evolutionary algorithms on il lustrative problems.",Motivation für die Theorie evolutionärer Algorithmen Methoden zur Analyse evolutionärer Algorithmen Laufzeitanalysen für einfache evolutionäre Algorithmen Der Nutzen von Kreuzungen in evolutionären Algorithmen Analyse evolutionärer Algorithmen auf Problemen der kombi natorischen Optimierung und auf multikriteriellen Problemen Verteilte evolutionäre Algorithmen Adaptive Parameter Black-Box-Komplexität — Motivation for a theory of evolutionary algorithms Tools for the analysis of evolutionary algorithms Runtime analyses for simple evolutionary algorithms The usefulness of crossover in evolutionary algorithms Analyses of evolutionary algorithms on problems from combi natorial optimisation and multi-objective problems Parallel evolutionary algorithms Parameter control Black-box complexity,90min Klausuroderca. 25minmündliche Prüfung; diegenaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 90-minuteexaminationor25-minuteoralexamination; theex act mode of assessment will be indicated at the beginning of the semester.,"Präsentation mit Tafel und Beamer Presentation with a projector, blackboard","Lectures will be based on books, research papers, surveys and tutorials. Related books include:Frank Neumann, Carsten Witt (2010): Bioinspired Com putation in Combinatorial Optimization – Algorithmsand Their Computational Complexity. Natural Compu ting Series, Springer, I SB N 978-3-642-16543-6. (http:// bioinspiredcomputation. com/)Thomas Jansen (2013): Analyzing Evolutionary Algorithms The Computer Science Perspective, Natural Computing Se ries, Springer, I SB N 978-3-642-17339-4. Benjamin Doerrand Frank Neumann(Eds. ):Theoryof Evolutionary Computation - Recent Developments in Discrete Optimization, Natural Computing Series, Springer, I SB N 978-3 030-29413-7. A. Auger, B. Doerr (Eds. ): Theory of Randomized Search Heuristics - Foundations and Recent Developments, Series on Theoretical Computer Science 1, I SB N: 978-981-4282-66-6, World Scientific.",MSc AI Engineering and MSc Informatik/ Computer Science
5952,Randomisierte Algorithmen,455388,Unregelmäßig Irregular,1 Semester,Sudholt,Sudholt,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,3 V + 2Ü,75 Std. Präsenz + 60 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 75 contact hours + 60 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 7,Keine None,"Algorithmen und Datenstrukturen, Enführung in die Stochas- tik Algorithms and Data Structures, Introduction to Stochastics","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Am Ende der Lehrveranstaltung werden Studierende in der Lage sein, • die Effizienz randomisierter Algorithmen zu analysieren, • Randomisierung als Werkzeug beim Design effizienter  Algorithmen einzusetzen, • die Vor-und Nachteilevon Randomisierungzubeschrei ben, • grundlegende randomisierte Algorithmen für wichtige Probleme zu beschreiben, und• ein Themaim Bereichrandomisierte Algorithmeneigen ständig darzustellen. — At the end of the course students will be able to • analyse the efficiency of randomised algorithms, • use randomness as a tool in the design of efficient algo rithms, • describe the pros and cons of randomised algorithms, • describefundamentalrandomisedalgorithmsforimport ant problems, and • work independently on describing a topic from the area of randomised algorithms.","Motivation und Klassifikation randomisierter Algorithmen Paradigmenfürden Entwurfrandomisierter Algorithmen(z. B. Methodeder Fingerabdrücke, Wahrscheinlichkeitsverstärkung, randomisiertes Runden)Methoden zur Analyse randomisierter Algorithmen (z. B. pro babilistische Rekurrenzen, Markoffketten, Random Walks, Markoff- und Chernoff-Schranken)Randomisierte Algorithmen für grundlegende Optimierungs probleme (z. B. Schnittprobleme, Max Sat) —Motivationforrandomisedalgorithmsandclassificationofran domised algorithms Paradigms for the design of randomised algorithms (e. g. fin gerprinting, probability amplification, randomised rounding)Methods for the analysis of randomised algorithms (e. g. pro babilisticrecurrences, Markovchains, randomwalks, Markov’s inequality and Chernoff bounds)Randomised algorithms for fundamental optimisation pro blems (e. g. cut problems, Max Sat)","Zwei Teilleistungen: Teilleistung 1 (80%): Klausurodermündliche Prüfung; diegenaue Prüfungsartwird zu Beginn des Semesters bekannt gegeben. Teilleistung 2 (20%):Schriftliche Ausarbeitung (bis zu 10 Seiten) über ein zusätzli ches Thema aus dem Gebiet randomisierte Algorithmen. Zum Bestehen des Moduls müssen beide Teilleistungen be  standen werden. — Two assessment components: component 1 (80%): Written or oral exam; the exact mode of assessment will be indicated at the beginning of the semester. component 2 (20%): Written work (up to 10 pages) on a subject from randomised algorithms. To pass the examination, both assessment components have to be passed.","Präsentation mit Tafel und Beamer Presentation with a projector, blackboard","Juraj Hromkoviˆc, Randomisierte Algorithmen. Teubner, 2004 Rajeev Motwani, Prabhakar Raghavan, Randomized Algo- rithms. Cambridge University Press, 1995. Michael Mitzenmacher, Eli Upfal, Probabilityand Computing, 2nd edition, Cambridge University Press, 2017",MSc AI Engineering and MSc Informatik/ Computer Science
5960,Partielle Differentialgleichungen,405167,Unregelmäßig Irregular,1 Semester,Wirth,"Mironchenko, Wirth",Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,3 V + 2Ü,45 Std. Präsenz + 30 Std. Übungen + 75+75 Std. Nachbe- Workload reitung der Vorlesung und Prüfungsvorbereitung 45contacthours+30hrsexercises+75+75hrsindependent study and exam preparation,ECTS/Credits: 7,Keine None,"Analysis I+I I, Lineare Algebra I+I I, Gewöhnliche Differential- gleichungen Analysis I+I I, Linear Algebra I+I I, Ordinary Differential Equa tions","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Nach Beendigung dieser Lehrveranstaltung sind Studierende in der Lage, • Fragestellungen der Naturwissenschaften mithilfe von partiellen Differentialgleichungen (P DGl) zu modellie ren. • Techniken für die analytische Lösung von Anfangsrand wertaufgaben für P DGl anzuwenden. • die Wohlgestelltheit von Anfangsrandwertaufgaben für P DGl zu untersuchen. • dasasymptotische Verhaltender Lösungenvon PD Glzu analysieren. — The students will be able to • Model the questions of the natural sciences using the partial differential equations (P DEs). • Apply the techniques for the analytic solution of the initial boundary value problems for P DEs. • Analyze the well-posedness of the initial boundary value problems for P DEs. • Analyze the asymptotic behavior of the solution of P DEs.","Folgende Themen werden behandelt: • Modellierung durch partielle Differentialgleichungen • Partielle Differentialgleichungen erster Ordnung. • Sobolevräume • Anfangsrandwertaufgaben für elliptische, parabolische, und hyperbolische Gleichungen. • Darstellungsformeln für die Lösungen von linearen P DGl. • Asymptotik partieller Differentialgleichungen — The following topics will be studied: • Modeling via partial differential equations. • P DEs of the first order • Sobolev spaces • initialboundaryvalueproblemsforelliptic, parabolicand hyperbolic P DEs • Representation formulas for linear P DEs • Asymptotics of P DEs",Zwei Teilleistungen: Teilleistung 1 (80%): 90 min Klausur oder ca. 30 min mündliche Prüfung. Diegenaue Prüfungsartwirdzu Beginndes Semestersbekannt gegeben. Teilleistung 2 (20%): Ausarbeitung (bis zu 10 Seiten) über ein vertiefendes Thema der P DGl. Zum Bestehen des Moduls müssen beide Teilleistungen be standen werden. Examination in two parts: Part 1 (80%): 90-minute examination or 30-minute oral examination. Theprecisemodeofassessmentwillbeannouncedatthestart of the semester. Part 2 (20%): Written paper (up to 10 pages) on an advanced subject from P DEs. To pass the examination both parts have to be passed.,"Tafelanschrieb, Online Lehre via Zoom Blackboard, online teaching via Zoom","L. Evans. Partial Differential Equations, A MS, 2010 W. A. Strauss. Partielle Differentialgleichungen, Vieweg, 1995 C. Cryer. Numerik Partieller Differentialgleichungen (Vorle sungsskript)",MSc AI Engineering and MSc Informatik/ Computer Science
5962,Symbolische Dynamik und Kodierung,405212,Unregelmäßig Irregular,1 Semester,Wirth,Epperlein,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,"60+30 Std. Präsenz, 90+90 Std. Eigenarbeitszeit Workload 60+30 contact hours, 90+90 hours independent study",ECTS/Credits: 9,Keine None,"Analysis I+I I, Lineare Algebra I+I I Analysis I+I I, Linear Algebra I+I I","Verwendbarkeit in weiteren Lehramt Mathematik, Bachelor Mathematik, Master Informa Studiengängen tik Teacher training programme for secondary education in Ma-thematics(Gymnasium), Bachelor Mathematics, Master Com puter Science","Kenntnisse / Skills/Knowledge Die Studierenden kennen nach dieser Vorlesung symbolische dynamische Systemeundwissen, wiesichallgemeine Konzepteder Theorie dynamischer Systeme für deren Analyse anwen den lassen. Ferner kennen sie grundlegende Zusammenhänge zwischensymbolischen Systemen, Graphentheorieundder Ko dierung und Dekodierung von Daten. —After completion of this course the students know about sym bolic dynamical systems and how to apply general concepts from the theory of dynamical systems to the study of shift spaces. Furthermore, theyknowthebasicconnectionsbetween symbolic systems, graph theory and (de-) coding of data. Kompetenzen / Competencies Die Studierenden können Werkzeuge aus verschiedenen Bereichen der Mathematik und theoretischen Informatik kombinieren und zur Analyse symbolischer Systeme anwenden. Ins besondere können sie symbolische Systeme mit topologischen Methoden untersuchen. Sie können Algorithmen zur Bestim mung von Codes mit vorgegebenen Eigenschaften anwenden. — The student are able to combine tools from diverse areas ofmathematics and theoretical computer science and to app ly them to the analysis of symbolic system. In particular they areabletostudysymbolicsystemsusingtopologicalmethods. Theycanapplyalgorithmstodeterminecodeswithprescribed properties.","Folgende Themen werden behandelt: Shift-Räume, Gra- phen, Codes, Entropie, Perron-Frobenius-Theorie, topologi- sche Markov-Ketten, zelluläre Automaten, Klassifikations-und Entscheidbarkeitsprobleme für Eigenschaften dieser Systeme — The following topics will be covered: shift spaces, graphs, codes, entropy, Perron-Frobenius theory, topological Markovchains, cellular automata, classifcication and decision pro blems for properties of these systems",120-minütige Klausur oder mündliche Prüfung (ca. 30 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 120-minute written exam or oral exam of about 30 minutes. Theprecisemodeofassessmentwillbeannouncedatthestart of the semester.,"Beamer-Präsentation, Tafel, Vorlesungsskript, Übungsblätter Presentation with projector, blackboard, lecture notes, exerci- se sheets","D. Lind, B. Marcus: An Introduction to Symbolic Dynamics and Coding. Cambridge University Press, 1995",MSc AI Engineering and MSc Informatik/ Computer Science
5970,Scaling Database Systems,451016,Jedes Wintersemester Every winter semester,1 Semester,Scherzinger,Scherzinger,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,2 V + 2Ü,60 Std. Präsenz + 45 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 45 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Programmierkenntnisse, Grundlagen Datenbanken- und Infor- mationssysteme (D BI S I + I I)Programming skills, fundamentals of databases and informa tion systems (D BI S I + I I)","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden verstehen die Bedeutung von Skalierbarkeitbei der Verarbeitung von großen Datenmengen. Sie verste hen die Stärken und Grenzen von No SQ L Datenbanksystemen  sowie den Zusammenhang zwischen der Architektur und der Leistungsfähigkeit eines Datenbankmanagementsystems. — The students understand the importance of scalability when managing large amounts of data. They understand aboutstrengths and limitations of No SQ L data stores and how da tabase systems architecture enables performance. Fähigkeiten / Abilities Die Studierenden besitzen die Fähigkeit, für ein konkretes Datenverarbeitungsproblem ein geeignetes No SQ L Datenbank managementsystem auszuwählen. — The students are able to map a specific data management problem to a suitable No SQ L database management system. Kompetenzen / Competencies Die Studierenden können eigene Optimierungen für Datenma nagementsysteme entwickeln und auch implementieren. —Thestudentshavethecompetencetodesigntheirownoptimi zations for data management systems and implement them.",• Speicherung von großen Datenmengen in Big Table- basierten Systemen wie Hadoop File System (H DF S). • Verarbeitung von großen Datenmengen in Map Reduce basierten Systemen wie Hadoop. • Optimierung der Ausführung von S QL Anfragen auf großen Datenmengen (analog zu Hive und Spark). —• Managing large amounts of data in Big Table-based sys tems such as Hadoop File System (H DF S). • Processing large amounts of data in Map Reduce-based systems such as Hadoop. • Optimized evaluation of S QL queries on large volumes of data (as done in Hive and Spark).,"Teil1:Individuelles Programmierprojekt„mini Hive“in Python Teil 2: 60 min. schriftliche Klausur Die Punkte für die Gesamtnote errechnet sich 30% aus Teil 1, und zu 70% aus Teil 2. Part 1: Individual Programming project “mini Hive” in Python Part 2: 60-minute written examination The points for the final grade are computed as follows: 30% from part 1, 70% from part 2.","Flipped Classroom (Videos im Selbststudium, Vertiefung des Stoffes anhand von Übungsaufgaben im Präsenzstudium), be-  gleitendes Programmierprojekt (Python) Flipped classroom (videos for self-study, in-class exercises), programming project (Python)","Peter Bailis, Joseph M. Hellerstein, Michael Stonebraker, (edi- tors), Readings in Database Systems, 5 th edition. Anand Rajaraman, Jeffrey Ullman: Mining of Massive Data sets, Cambridge University Press, 2020. Martin Kleppmann: Designing Data-Intensive Applications, O’Reilly, 2017. Stefanie Scherzinger, Build your own S QL-on-Hadoop Query Engine: A Report on a Term Project in a Master-level Data base Course, S IG MO D Record, June 2019.",MSc AI Engineering and MSc Informatik/ Computer Science
5972,Reproducibility Engineering,455420,Unregelmäßig Irregular,1 Semester,Scherzinger,Scherzinger,Englisch English,Modulgruppe „C CC“ Focus „C CC“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Grundlegende Programmierkenntnisse, z. B. Python, Erstellen von Dokumenten mit La Te X, Arbeiten mit der Linux Shell Basic programming skills, e. g. , Python, writing documents with La Te X, working with the Linux shell",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Studierende verstehen den Unterschied zwischen den Termi-ni Repeatability, Reproducibility und Replicability in Daten analysen. Die Studierenden erkennen typische Schwächen und Nachteile von Datenanalyse-Pipelines. Sie wissen, wie Forschungsartefakte strukturiert und dokumentiert werden müssen, um autarkes Verständnis der beinhalteten Daten sicherzustellen. Die Studierenden verstehen, wie ein Reproduktions paket Artefakte organisiert. —Students understand the difference between repeatability, re producibility, andreplicabilityofdataanalyses. Theyrecognize common weaknesses in data analysis pipelines. The students know how to structure and document research artefacts and how a reproduction package organizes research artifacts. Fähigkeiten / Abilities Die Studierenden können bestehende Forschungsanstrengun gen reproduzieren, wenn ein Reproduktionspaket vorhandenist. Sie erkennen typische Schwächen in bestehenden Reproduktionspaketen und sind in der Lage, eigene Reproduktions pakete von Grund auf zu entwerfen und zu veröffentlichen. — The students are able to reproduce research results, given a reproduction package. They recognize obvious weaknesses ingiven reproduction packages and are able to design and pu blish a reproduction package of their own. Kompetenzen / Competencies Die Studierenden sind in der Lage, die erlernten Kompetenzen in ihrer eigenen Forschung anzuwenden (z. B. im Rahmen der Masterarbeit). Sie sind in der Lage, die erlernten Kompeten zen in ihrer künftigen Erwerbstätigkeit (sowohl in Forschung als auch in Industrie) anzuwenden. — The students are able to apply the skills acquired to their own research (e. g. , preparing their Masters thesis). They are able to transfer the skills acquired in their future careers (both in academia and industry).","• The replication crisis • Repetition, replication, and reproduction• Structured presentation of results and literate program ming techniques • Different types of reproducibility • Deterministic builds • Ascertaining long-term availability • Producing consistent, readable histories • Electronic notebooks • Packaging research artefacts • Describing execution environments • Traps and Pitfalls  • D OI safety • Dealing with proprietary artefacts • Dealing with hardware • End-to-end reproduction• Lab Session(continuous):Guidedhands-onanalysispro jects based on real-world scientific data","Portfolio-exam with three deliverables: (1) a 2-page written report, (2) a fully automated reproduction package for an in-dividual data analysis project, and (3) a 15-minute presenta tion. The individual project is chosen in agreement with the lecturer, e. g. , reproduction of published research; designing re production approaches for projects in the students’ field of study; presentation of experiments or deep-dives into selected aspects of reproducibility.","On-site lectures, enhanced with course videos. On-site lab exercises.","Hadley Wickham, Garret Grolemund: R for Data Science: Im- port, Tidy, Transform, Visualize, and Model Data, O’Reilly (2017) Victoria Stodden, Friedrich Leisch, and Roger D. Peng (eds): Implementing Reproducible Research, C RC Press (2014)Justin Kitzes and Daniel Turek and Fatma Deniz: The practi ce of reproducible research: case studies and lessons from the data-intensive sciences, University of California Press (2017)",MSc AI Engineering and MSc Informatik/ Computer Science
5973,SQL for Data Science,472790,Unregelmäßig Irregular,1 Semester,Scherzinger,Scherzinger,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Programmierkenntnisse, Grundlagen Datenbanken- und Infor- mationssysteme (D BI S I + I I)Programming skills, fundamentals of databases and informa tion systems (D BI S I + I I)","Verwendbarkeit in weiteren Master Informatik, Master Wirtschaftsinformatik, Master Studiengängen Business Administration Master Computer Science, Master Information Systems, Mas- ter Business Administration","Kenntnisse / Skills/Knowledge S QL proficiency within the context of data science; Under- standing of the data life cycle; Handling non-traditional data formats like X ML and text; Integration of S QL with program ming languages Fähigkeiten / Abilities Perform data analysis tasks using S QL; Write efficient S QL queries, avoid S QL anit-patterns; Understand and navigate the data life cycle; Handle diverse data formats for analysis; Utilize S QL in conjunction with R and Python for enhanced data analysis capabilities Kompetenzen / Competencies Proficiency in S QL for data science applications; Competence in data loading, cleaning, and pre-processing; Ability to apply SQ L queries for data exploration, cleaning, and transformati on; Capability to integrate S QL with programming languages for enhanced data analysis workflows","This advanced database class offers a comprehensive under- standing of the data life cycle and the potential of S QL in various data analysis tasks. Students explore topics rangingfrom data loading and cleaning to pre-processing, while mas tering relational databases and handling non-traditional data formats such as X ML and text. Integration with programminglanguages like R and Python further enriches students’ abilities, enabling seamless interaction with databases and enhan cing data analysis workflows. Practical exercises and hands-onexperience with My SQ L and Postgres databases solidify stu dents’ competencies, equipping them with the essential skills to excel in data science and database management roles.",60-minütige Klausur 60-minute written examination,"Präsentation und Beamer, Arbeitsblätter Presentation and projector, worksheets","Antonio Badia:S QLfor Data Science-Data Cleaning, Wrang- ling and Analytics with Relational Databases. Springer 2020 Bill Karwin:S QL Antipatterns. Pragmatic Programmers, L LC, 2017 Raghu Ramakrishnan, Johannes Gehrke: Database Manage ment Systems. Mc Graw-Hill, 3rd edition, 2020",MSc AI Engineering and MSc Informatik/ Computer Science
5980,Text Mining,405024,In der Regel jedes Sommersemester Usually every summer semester,1 Semester,Granitzer,Mitrovic,Englisch English,Modulgruppe „A IA“ Focus „A IA“,3 V + 2Ü,75 Std. Präsenz + 50 Std. Übungen + 85 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 75 contact hours + 50 hrs exercises + 85 hrs independent study and exam preparation,ECTS/Credits: 7,Keine None,"Lineare Algebra, Wahrscheinlichkeitsrechnung, Programmier- kenntnisse in Java oder Python Linear Algebra, probability theory, programming in java or py thon","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden sollen die Grundlagen des Text-Mining ver-stehen. Sie erwerben Kenntnisse über textorientierte Algorithmenmitderen Hilfe Kerninformationenderverarbeiteten Tex  te schnell erkannt werden. — The students have an understanding of the basic concepts oftext mining. They know text-orientated algorithms for iden tifying core information of processed texts quickly. Kompetenzen / Competencies Die Studierenden erwerben die Kompetenzen, einen Textkor pus zu analysieren und interessante Muster zu extrahieren. — The students acquire the skills to analyse a text corpus and extract interesting patterns.",e werden geboten: • Text Processing und Edit Distance • Language Modeling • Text Classification und Sentiment Analysis • Maxent Model und Named Entity Recognition • P OS Tagging / Parsing • Lexical Semantics • Informationsextraktion • Trend und Topic Detection,90 min Klausur oder ca. 15 min mündliche Prüfung. Die ge- naue Prüfungsart wird zu Beginn des Semesters bekannt ge- geben. 90-minute examination or 15-minute oral examination. The precise mode of assessment will be announced at the start of the semester.,"Tafel, Projektor, Rechner Blackboard, projector, computer","Christopher Manning und Hinrich Schütze. Foundations of Statistical Natural Language Processing Christopher D. Manning, Prabhakar Raghavan and Hinrich Schütze, Introduction to Information Retrieval Eigenes Skriptum / Lecture notes",MSc AI Engineering and MSc Informatik/ Computer Science
5994,Numerik der Polynom- und rationalen Approximation,485383,Unregelmäßig Irregular,1 Semester,Forster-Heinlein,Forster-Heinlein,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,2 V + 1Ü,30+15 Std. Präsenz + 50+55 Std. Eigenarbeitszeit Workload 30+15 contact hours + 50+55 hours lecture and tutorials follow-up and exam preparation,ECTS/Credits: 5,Keine None,"Lineare Algebra I + I I, Analysis I + I I, Vorlesung zur Numerik Linear Algebra I + I I, Analysis I + I I, lecture on numerics","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen nach dieser Vorlesung die Konzepteder Polynomapproximation und der rationalen Approximati on. Sie verstehen die Tchebycheff-Approximation und deren numerische Anwendung. Insbesondere kennen und verstehensie die unterschiedlichen Konvergenzeigenschaften für Funkti onsklassen mit unterschiedlicher Regularität.  Fähigkeiten / Abilities Die Studierenden können Approximationsverfahren implementieren, modifizieren und in gewissem Rahmen auch neu entwi ckeln. Insbesondere können sie Polynom-Approximation und rationale Approximation mit anderen Verfahren vergleichen und bewerten. Die Studierenden haben die Kompetenz, mitpolynomialen und rationalen Approximationsverfahren theore tisch und praktisch umzugehen.","Tchebycheff-Polynome zur Interpolation und Approximati- on, Baryzentrische Interpolation, Gibbs Phänomene, Alia-sing, Kriterien zur Konvergenzgeschwindigkeit der Appro ximation, Runges Phänomen, Polynomiale und Rationale Best- und Near-Best-Approximation, Orthogonalpolynome, Carathéodory-Féjer-Approximation",60 min Klausur oder ca. 20 min mündliche Prüfung. Die ge- naue Prüfungsart wird zu Beginn des Semesters bekannt ge- geben. 60-minute written examination or 20-minute oral examinati on. The precise mode of assessment will be announced at the beginning of the semester,"Präsentation, Beamer, Übungsblätter Presentation, projector, exercise sheets","Lloyd N. Trefethen:Approximation Theoryand Approximation Practice. S IA M, 2013",MSc AI Engineering and MSc Informatik/ Computer Science
5995,Advanced Imaging,454020,Unregelmäßig Irregular,1 Semester,Sauer,Sauer,Englisch English,Modulgruppe „A IM“ Focus „A IM“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Analysis I/I I, Lineare Algebra I/I I, Bildverarbeitung Analysis I, I I, Linear Algebra I, I I, Basics of image and signal processing","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierendenkennenfortgeschrittene, moderne Methoden der Bildverarbeitung. —Students know advanced modern methods of image proces  sing. Fähigkeiten / Abilities Die Studierenden können die Herleitung der Methoden nach vollziehen und darauf basierend neue Methoden entwickeln und adaptieren. — Students are able to understand the derivation of methodsand are able to use this ability to develop and adopt new me thods. Kompetenzen / Competencies Die Studierendenhabendie Kompetenz, fortgeschrittene Konzepte und Methoden der Bildverarbeitung für konkrete Pro bleme einzusetzen und zu evaluieren. — Students have the competences to use and evaluate advanced concepts and methods of image processing.","Diffusionsmethodenfür Entrauschenund Komprimierung, ma- schinelles Lernen, Impainting, Sparsity/Compressive Sensing —Diffusion methods for noise reduction and compression, ma chine learning, impainting, sparsity/compressive sensing",Schriftliche Prüfung (90 Minuten) oder mündliche Prüfung (ca. 20 Minuten)Written exam (90 minutes) or oral examination (about 20 mi nutes),Präsentation und Beamer Presentation and projector,"Stockhausen, Methoden der Digitalen Signalverarbeitung Mallat, A Wavelet Tour to Signal Processing Originalarbeiten",MSc AI Engineering and MSc Informatik/ Computer Science
6020,Mathematische Logik,455362,Unregelmäßig Irregular,1 Semester,Kaiser,Kaiser,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,"60 + 30 Std. Präsenz, 120 + 60 Std. Eigenarbeitszeit und Workload Prüfungsvorbereitung 60 + 30 contact hours, 120 + 60 hours independent study and exam preparation",ECTS/Credits: 9,Keine None,Algebra Algebra,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Nach Beendigung dieser Lehrveranstaltung sind Studierende in der Lage, • das Konzept einer formalen Sprache und der Logik 1. Stufe zu verstehen, • zwischen Syntax und Semantik zu unterscheiden, • die Interaktion von Axiomensystemen und Modellbil dung nachzuvollziehen • und diese auf algebraische Theorien anzuwenden, • den Gödelschen Unvollständigkeitssatz wiederzugeben• sowie ein Thema der Mathematischen Logik eigenstän dig darzustellen.",Folgende Themen werden behandelt: • Formale Sprachen und Logik 1. Stufe • Gödelscher Vollständigkeitssatz • Einführung in die Modelltheorie • Modeltheorie einiger algebraischer Strukturen • Entscheidbarkeit • Gödelscher Unvollständigkeitssatz,Zwei Teilleistungen: Teilleistung 1 (80%):120-minütige Klausur oder mündliche Prüfung (ca. 30 Minu ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. Teilleistung 2 (20%): Ausarbeitung (bis zu 10 Seiten) über ein zusätzliches Thema der mathematischen Logik. Zum Bestehen des Moduls müssen beide Teilleistungen be standen werden. Examination in two parts: Part 1 (80%): 120-minute written or oral exam of about 30 minutes. The precise mode of assessment will be announced at the start of the semester. Part 2 (20%):Written work (up to 10 pages) on a subject from Mathemati cal Logic. To pass the examination both parts have to be passed.,"Tafelanschrieb, Overhead, Beamer slides, projector, blackboard",H. Hermes: Einführung in die mathematische Logik. Teubner 1976 W. Hodges: A Shorter Model Theory. Cambridge University Press 2002 Yu. I. Manin: A Course in Mathematical Logic. Springer 1977 Prestel: Einführung in die Mathematische Logik und Modell theorie. Vieweg 1992 P. Rothmaler:Einführungindie Modelltheorie. Spektrum Aka demischer Verlag 1995,MSc AI Engineering and MSc Informatik/ Computer Science
6047,Digital Healthcare,455409,Jedes Jahr Every year,1 Semester,Kranz,Kranz,Deutsch oder Englisch German or English,Modulgruppe „A IS E“ Focus „A IS E“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Erfolgreiche Absolvierung der Module „Mobile Human- Computer Interaction“ oder “Grundlagen der Mensch- Maschine Interaktion”, Kenntnisse in Python",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden lernen die grundlegenden Vorgehensweisen, Methoden und Werkzeuge kennen, um Daten im Bereich Di gital Healthzuerfassen, zuverarbeitenundzubewertenunter Berücksichtigungderbesonderen Anforderungenan Sicherheit und Vertraulichkeit die an personen- und gesundheitsbezogenen sensiblen Daten gestellt werden. Die Studierenden kennen den grundlegend Entwicklungsstand im Bereich Digitali sierung im Gesundheitswesen. An Hand von Beispielbereichen wie Rettungsdienst und persönlichen Gesundheit wird dieser exemplarisch vermittelt und vertieft. Die StudierendenerhalteneinenÜberblicküberdie Strukturenund Formate, indenen Gesundheitsdatenvorliegenkönnen, so wie die zugehörigen rechtlichen Rahmenbedingungen. Kompetenzen / Competencies Die Studierendenkönnenbestehende Lösungenim Bereich Di gital Healthcare grundlegend bewerten und analysieren. Sie können Prototypen für mögliche Anwendungen und Systeme entwerfen und beschreiben und grundlegend mit Hilfe vongeeigneten Prototyping-Werkzeugen beschreiben. Die hierfür notwendigen Vorgehensweisen, Methoden und Werkzeu ge, zum Beispiel zur Entwicklung von „Gesundheits-Apps“, werden beherrscht und können von den Studierenden einge setzt werden. Die Studierenden besitzen die Kompetenzen zur Konzipierung, Durchführung und Evaluationvon Studien, und können bestehende Studienergebnisse grundlegend bewerten. Grundlegende sicherheitstechnische, rechtliche und ethische Aspektebeider Umsetzungvon Projektenim Bereichdes Digi tal Healthcaresindden Studierendenbekanntundim Rahmen von Entwicklungstätigkeiten beachtet und die verschiedenen Phasen integriert.",einden Präsenzübungenundsowie selbständige Vertiefung durch Bearbeitung der Übungs aufgaben,90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten) oder Portfolio-Prüfung; die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. Written exam (60 minutes) or oral exam (about 20 minutes)or portfolio exam; the precise mode of assessment will be an nounced at the start of the semester.,"Präsentation mit Projektor, Tafelanschrieb, Gruppenarbeit Presentation with a projector, blackboard, working in a group",Wird vom Dozent / von der Dozentin bekannt gegeben,MSc AI Engineering and MSc Informatik/ Computer Science
6061,Introduction to Deep Learning,471616,"Unregelmäßig Hinweis: Das Modul ersetzt das alte Modul Deep Learning - keine Doppelanrechung möglich! Irregular Notice: Replacing Deep Learning, cannot be credited twice.",1 Semester,Lemmerich,Lemmerich,Englisch English,Modulgruppe „A IM“ Focus „A IM“,2 V + 2Ü,60 Std. Präsenz + 120 Std. Vor- und Nachbearbeitung des Workload Praktikums60 contact hours + 120 hrs independent study and implemen tation,ECTS/Credits: 6,Keine None,"Advanced Topics in Data Science oder Introduction to A I En- gineering, Grundkenntnisse in Python Advanced Topics in Data Science or Introduction to A I Engi neering, Python Programming Language","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge  Students will get to know about fundamentals of artificial neural networks, gain an overview on standard algorithms inthefieldaswellasexamplesofrecentlyproposedstate-of-the art techniques. Furthermore, students will get to know some standard tools to develop and apply deep learning techniques to machine learning problems. Fähigkeiten / Abilities The students will be able to implement deep learning approa ches to practical machine learning problems. They obtain theabilitytochooseandimproveneuralnetworkarchitecturessui table for specific machine learning tasks. Kompetenzen / Competencies Students will strengthen their competence to analyze and as sess algorithms for machine learning. Participants will learn todevelopproblem-orientedsolutionswithdeeplearningapproa ches independently.","The course will give an overview on the fundamentals and current approaches for deep learning and its main applications fields. In particular, it will cover: • Basics of Representation Learning • Perceptron Learning • Feedforward Neural Networks • Gradient Descent and Backpropagation • Regularization in Deep Learning • Convolutional Neural Networks • Recurrent Neural Networks • Autoencoders • Adversarial Training • Graph Neural Networks • Applications of Deep Learning for Text, Sequences, and Images • Explainability and Deep Learning",90 minutes written or 20 minutes oral exam depending on the number of participants. The students will be informed about the exact type of exam by the beginning of the semester,"Präsentation mit Beamer, Whiteboard Presentation with beamer, whiteboard","Goodfellow, Ian, Yoshua Bengio, and Aaron Courville: Deep learning. M IT press, 2016 Aggarwal, Charu C. :Neuralnetworksanddeeplearning. Sprin ger 10 (2018): 978-3 Additionalliteraturewillbeannouncedatthebeginningofthe  semester.",MSc AI Engineering and MSc Informatik/ Computer Science
6063,Applied Artificial Intelligence Lab,471615,Unregelmäßig Irregular,1 Semester,Lemmerich,Lemmerich,Englisch English,Modulgruppe „A IA“ Focus „A IA“,4Ü,60 Std. Präsenz + 120 Std. Vor- und Nachbearbeitung des Workload Praktikums60 contact hours + 120 hrs independent study and implemen tation,ECTS/Credits: 6,Keine None,Python Programming Language Advanced Topics in Data Science or Introduction to A I Engi- neering,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Students will learn about standard tools and techniques to engineer solutions to realistic problem settings in the field of artificial intelligence, in particular machine learning. Studentswill also learn about state-of-the-art approaches for their par  ticular topic. Fähigkeiten / Abilities Students will obtain the ability to systematically assess and analyze a problem setting, identify relevant approaches from literature, developandimplementsolutionswithsuitabletoolsand frameworks, and engineer and/or combine different ap proaches to obtain the best possible results. Kompetenzen / Competencies Studentswillstrengthentheircompetenceinanalyzingandas sessingalgorithmsformachinelearning. Participantswilllearn to plan projects, implement solutions, meet milestones, and communicate results.","Artificial Intelligence, in particular machine learning, is mo- re and more applied in a wide range of real-world settings. In this application-focused course, students will work in small teams to engineer A I solutions to given practical scenarios. Each team will be provided a specific problem setting, e. g. from scientific challenges like the K DD Cup or a Kaggle competition. Typically, such a setting consists of a dataset, a spe cific task (e. g. , a prediction or recommendation task), and an evaluation measure for obtained results. Under guidance, each team will then perform the necessary steps to develop and optimize their solution, generally including: • Data understanding and exploration • Data Preprocessing • Feature selection and engineering • Model validation • Hyperparameter optimization • Ensembling Results of the individual teams will be presented in the courseby each team to the other course participants in small presen tations and summarized in a project report.","Portfolio exam based on the suitability, implementation and refinement of the chosen methods, the achieved results, and communication/presentation of the project. Given minimumrequirements, presentational aspects should influence the gra de by no more than 30%. Potential elements of the portfolio are: Code with documen tation, a written report on the outcome of the project (max. 8 pages), presentations given over the course of the semester and a final examination conversation (max. 10 minutes) with each individual participant. Within the team presentations, each participant showcases her/his own personal contribution to the project. Additionally, participants declare in written form their individual contribu tions to the project design, code and report. Details on the assessment including count and length of thepresentations will be announced at the beginning of the cour se.","Präsentation mit Projektor, Whiteboard Presentation with projector, whiteboard",Specific literature for each topic will be announced at the beginning of the semester.,MSc AI Engineering and MSc Informatik/ Computer Science
6064,Responsible Machine Learning,471617,Jedes Sommersemester Every summer semester,1 Semester,Lemmerich,Lemmerich,Englisch English,Modulgruppe „A IM“ Focus „A IM“,2 V + 2Ü,60 Std. Präsenz + 120 Std. Vor- und Nachbearbeitung Workload 60 contact hours + 120 h independent study and implemen tation,ECTS/Credits: 6,Keine None,"Advanced Topicsin Data Scienceund/oder Introductionto AI Engineering, Programmierkenntnisse in Python Advanced Topics in Data Science and/or Introduction to A I Engineering, Python Programming Language","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Students will get to know about the main aspects of app- lying machine learning responsibly in sensitive settings, e. g. , when working with behavioral data. This covers the problemsettings, challenges, and main algorithmic approaches for ex  plainable, fair, privacy-aware, and reliable machine learning. Fähigkeiten / Abilities The students will be able to identify potential issues of ma chine learning and artificial intelligence applications and apply appropriate measures to address them. Students will improvetheir ability to assess, select and implement solutions for ma chine learning tasks, specifically when working with data from or about human behavior. Kompetenzen / Competencies Students will strengthen their awareness with respect to algo rithmictransparency, fairness, privacy, andreliability. Theywillimprove their competence to critically assess artificial intelli genceapproacheswithsensitivedata. Participantswilllearntodevelop problem-oriented machine learning solutions for sen sitive data independently.","The course will give an overview on the main challenges and currentapproachesforresponsiblemachinelearning. Thismo- dule will focus on explainable and interpretable approachesto machine learning, specifically for classification. It will discuss the relevancy of interpretability and will introduce white boxlearningalgorithms(e. g. ,decisiontreelearning, rule-based classification and simple regression models) and methods toexplain black-box solutions (e. g. , L IM E, counterfactual expla nations). Thecoursewillalsocoverthechallengesofbiasesandfairnessin machine learning, and will cover how these can be measu red at an individual or at a group level. Students will also get to know about algorithms to counteract such biases with pre-, in-, or post-processing methods. In addition, the course will also provide an overview and introduce key approaches of privacy-aware machine learning, and reproducibility issues in machine learning.",90-minütige Abschlussklausur oder ca. 20 Minuten mündliche Prüfung abhängig von der Anzahl der Teilnehmer. Die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 90-minute written or 20-minute oral examination depending on the number of participants. The students will be informedabout the exact type of exam by the beginning of the semes ter.,"Präsentation und Beamer, Tafel Presentation projector, whiteboard","Molnar, Christoph: Interpretable machine learning, 2nd edi- tion, 2020. Online book available at https://christophm.  github. io/interpretable-ml-book/. Solon Barocas, Moritz Hardt, Arvind Narayanan: Fairness and Machine learning - Limitations and Opportunities, 2017. Online book available at https://fairmlbook. org/pdf/ fairmlbook. pdf Additionalliteraturecanbeannouncedatthebeginningofthe semester.",MSc AI Engineering and MSc Informatik/ Computer Science
6070,Markov Chain Monte Carlo,455450,Unregelmäßig Irregular,1 Semester,Rudolf,Rudolf,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Funktionalanalysis, Wahrscheinlichkeitstheorie, Einführung in die Stochastik, Maß- und Integrationstheorie Functional Analysis, Probability Theory, Introduction to Sto chastics, Measure and Integration Theory","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Die Studierenden erwerben vertiefende Kenntnisse bzgl. der Theorie von Markovketten auf allgemeinen Zustandsräumen. Sie kennen und verstehen verschiedene Algorithmen zum approximativen Simulieren von Verteilungen basierend auf Mar kovketten (z. B. Slice Sampling Metropolis-Hastings, Hit-and run). Darüber hinaus erlangen die Studierenden vertiefendes Wissenüber Beweistechnikenzum Verifizierender Konvergenzvon Markovketten und sind in der Lage diese Methoden an zuwenden. —The students acquire a systematic understanding of the theo ry of Markov chains on general state spaces. They know and understand advanced algorithms for approxi mate sampling based on Markov chains (e. g. slice sampling, Metropolis-Hastings, Hit-and-run). Beyond that the studentsobtain deep knowledge about proof techniques to verify con vergence results for Markov chains and are able to apply this methodology.","• Motivation zum approximativen Sampling • Theorie von Markovketten • Verschiedene algorithmische Verfahren (z. B. Slice Sampling, Metropolis-Hastings, Hit-and-run) • Wasserstein-Abstand • Ergodensätze — • Motivation of approximate sampling • Theory of Markov chains • Different algorthmic approaches (e. g. Slice Sampling, Metropolis-Hastings, Hit-and-Run) • Wasserstein distance • Ergodic theorems",Entweder 90-minütige Klausur oder mündliche Prüfung (ca. 30 Minuten); die genaue Prüfungsart wird zu Beginn des Se- mesters bekannt gegeben. Either written exam (90 minutes) or oral exam (about 30 mi nutes); the precise mode of assessment will be announced at the start of the semester.,Präsentation mit Tafel und/oder Beamer Presentation with a projector or blackboard,"R. Douc, E. Moulines, P. Priouret, P. Soulier, Markov Chains, Springer, 2018 A. Klenke, Probabilitytheory:A Comprehensive Course, Sprin ger, 2014",MSc AI Engineering and MSc Informatik/ Computer Science
6072,Foundations of Statistical Data Science,482522,Unregelmäßig Irregular,1 Semester,Rudolf,Rudolf,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Wahrscheinlichkeitstheorie, Einführung in die Stochastik, Maß- und Integrationstheorie, Lineare Algebra I+I I, Analysis I+I I Probability theory, Introduction to stochastics, Measure and integration theory, Linear Algebra I+I I, Analysis I+I I","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Die Studierenden erwerben Kenntnisse bzgl. der mathema- tischen Modellierung von Daten und deren statistischer Be- handlung. Sie kennen und verstehen verschiedene Methoden  zur Datenanalyse(z. B. Schätzmethoden, Regression, grafische Methoden). Darüberhinauserlangendie Studierendenvertieftes Wissen über Beweistechniken in der Mathematischen Sta tistik, z. B. zum Verifizieren von Aussagen über die Güte von Schätzern und deren asymptotischen Eigenschaften. — Thestudentsacquireasystematicunderstandingofthetheory of modeling data and their statistical treatment. They knowand understand different methodology for the analysis of da ta (e. g. estimation methods, regression, graphical methods). Beyond that the students obtain deep knowledge about prooftechniques in mathematical statistics, e. g. , to verify state ments about the quality of estimators and their asymptotic properties.","Grundkonzepte der statistischen Datenanalyse u. a. : • Elementare statistische Modelle • Statistische Grundlagen • Grafische Methoden • Deskriptive Größen • Schätzmethoden• E M-Algorithmen und/oder stochastisches Gradienten verfahren • Regression • Hidden Markov Modelle • Bayessche Inferenz — Basic concepts of statistical data analysis, inter alia: • Elementary statistical models • Statistical objects • Graphical methods • Descriptive quantities • Estimation methods • E M algorithm and/or Stochastic gradient descent • Hidden Markov models • Bayesian inference",Entweder 90-minütige Klausur oder mündliche Prüfung (ca. 30 Minuten); die genaue Prüfungsart wird zu Beginn des Se- mesters bekannt gegeben. Either written exam (90 minutes) or oral exam (about 30 mi nutes); the precise mode of assessment will be announced at the start of the semester.,Präsentationmit Tafelund/oder Beamerund/oderanderevir- tuelle Formate  Presentation with a projector or blackboard or other virtual formats,"J. Berger, Statistical Decision Theory and Bayesian Analysis, Springer, 1993. P. Billingsley, Convergence of probability measures, Wiley Se ries in probability and Mathematical Statistics, 1999. R. van Handel, Hidden Markov models, Unpublished lecture notes (2008). A. Klenke, Probabilitytheory:A Comprehensive Course, Sprin ger, 2014. V. Panaretos, Statistics for mathematicians, Springer, 2016. S. Shalev-Shwartzand S. Ben-David, Shai, Understandingma chine learning, Cambridge University Press, 2014.",MSc AI Engineering and MSc Informatik/ Computer Science
6080,Computational Linguistics,455396,Jedes Sommersemester Every summer semester,1 Semester,Hautli-Janisz,Hautli-Janisz,Englisch English,Modulgruppe „A IA“ Focus „A IA“,2 V + 2Ü,60 Std. Präsenz + 45 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 45 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Information Retrieval and Natural Language Processing, Data Science oder Data Mining and Machine Learning","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Students gain an overview of the main concepts, research questions and methodological frameworks in computationallinguistics. The course covers the areas of phonetics, mor phology, syntax, semantics and pragmatics and presents thecore methods and challenges for language processing in the  se subfields of C L. Students also gain insights into a number of current topics in applied computational linguistics, such as Machine Translation, Question Answering, Chatbots & Dia logue Systems and Search. Fähigkeiten / Abilities Successful candidates understand the general challenges thatlanguageposesforautomaticprocessing. Basedontheirknow ledgeacrosssubfieldsof CL, theycandiscussthewaysinwhichlinguistic information can be encoded for computational mo deling and they can also identify those methods that are mostappropriate for processing it. For those areas of applied com putational linguistics that are covered in the course, studentsunderstand the standard approaches, challenges and limitati ons of the state of the art. Kompetenzen / Competencies Successful candidates can transfer their knowledge in com putational linguistic modeling to different settings, languages and research questions. They are able to reflect on everyday computationallinguisticapplicationslikevirtualassistantsandmachine translation systems. They can also provide a preli minary judgement as to what extent particular applications require more in-depth computational linguistic modeling.","Computational linguistics (C L) is the scientific and en- gineering discipline concerned with understanding writ-ten and spoken language from a computational perspective, and building systems that usefully process and pro duce language (https://plato. stanford. edu/entries/ computational-linguistics/). It is one of the centralcomponents of everyday technology, from web search to machine translation. In this course we will cover the main con cepts, research questions and methodological frameworks in the area. Topics include: • Phonetics and Speech Signal Processing • Syntactic Parsing • Computational Semantics • Computational Lexical Semantics • Computational Pragmatics • Corpora and Annotation • Lexical Resources • Classification and Clustering • Statistical Tests and Evaluation • Machine Translation • Question Answering • Chatbots & Dialogue Systems",90min Klausur 90min written exam,Präsentation mit Beamer Presentation with projector,"Speechand Language Processing. 2022. Dan Jurafskyand Ja- mes Martin, 3rd ed. draft online (https://web. stanford. edu/~jurafsky/slp3/)The Handbookof Computational Linguisticsand Natural Lan guage Processing. 2010. Alexander Clark et al. (editors). Blackwell Publishing Ltd(https://onlinelibrary. wiley. com/doi/book/10. 1002/9781444324044) Foundationsof Statistical Natural Language Processing. 1999. Chris Manning and Hinrich Schütze. M IT Press (https: //nlp. stanford. edu/fsnlp/) For more advanced literature, see lecture slides.",MSc AI Engineering and MSc Informatik/ Computer Science
6090,Sicherheit von Rechnern und eingebetteten Systemen,455385,Jedes Wintersemester Every winter semester,1 Semester,Kavun,Kavun,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,2 V + 1Ü,45 Std. Präsenz + 50 Std. Übungen + 55 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 45 contact hours + 50 hrs exercises + 55 hrs independent study and exam preparation,ECTS/Credits: 5,Keine None,Keine None,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden lernen • die Komplexität der Sicherheitslandschaft, • die potenziellen Schwachstellen, die damit verbunden sind, z. B Authentifizierung, Datenintegrität, • die Vor- und Nachteile verschiedener Prinzipien der In formationssicherheit • die Risiken von Sicherheitslücken zu verstehen. — Students get to know • the complexity of the security landscape, • thepotentialvulnerabilitiesassociated, e. g. ,authentica tion, data integrity, • the advantages and disadvantages different information security principles, • understand the risks of security vulnerabilities. Fähigkeiten / Abilities Die Studierenden üben ein detailliertes Verständnis industri ellrelevanter Fragenim Zusammenhangmit Rechnersicherheitundeingebetteter Sicherheitsowiedie Fähigkeit, Materialpräzise und dennoch umfassend zu präsentieren und dieses Ma terial angemessen auf das betreffende Publikum auszurichten. —Students practice a detailed understanding of industrially relevant issues relating to computer security and embedded se curity as well as the ability to present material in a concise yetcomprehensive manner and to target that material appropria tely to the audience in question. Kompetenzen / Competencies Die Studierenden lernen die verschiedenen Arten von Rech nerangriffen und deren Auswirkungen auf die Sicherheit und Datenschutz, die Grundprinzipien der Informationssicherheitsowie einige praktische Kenntnisse darüber, wie diese Prin zipien und Implementierungstechnologien verwendet werdenkönnen, um eine bessere Daten- und Systemsicherheit zu ge währleisten. —The students gain awareness on the different types of compu ter attacks and their effect on data security and privacy, get an understanding of the fundamental principles of informationsecurity and get some practical knowledge of how these prin ciples and implementing technologies can be used to ensure better data and system security.","Dieses Modul bietet eine Einführung in die Rechnersicherheit und die eingebettete Sicherheit. Dieses Modul konzentriertsich insbesondere auf Ansätze und Techniken zum Aufbau si cherer Systeme und zum sicheren Betrieb von Systemen. Das Modulerfordertein Verständnisdermathematischen Konzepte (z. B. Modulo-Arithmetik, komplexe Zahlen, Gruppen theorie) und Logik (Mengenlehre, Prädikatenlogik, natürliche Deduktion). Darüberhinauserfordertdas Modulein Verständnis einer Programmiersprache (z. B. Python, C) und grundle gende Kenntnisseinder Softwareentwicklung. EinigeÜbungen erfordern Linux und Shell Grundlagen. Das Modul beinhaltet die Themen: • Grundlagen der Rechnersicherheit • Zugangskontrolle • Eingebettete Systeme • Sicherheitsbedürfnis in eingebetteten Systemen • Kryptografische Grundlagen • Krypto-Angriffe • Public Key-Infrastrukturen (P KIs) • Digitale Signaturen • Sicherheitsprotokolle • Formale Analyse von Sicherheitsprotokollen • Sicherer Software-Entwicklungslebenszyklus (S SD L) • Bedrohungsmodellierung • Common Vulnerability Scoring System (C VS S) • Sicherheitslücken in der Software • Sichere Programmierung • Sicherheitstests:Grundlagen, Fuzzing, statische Analyse • Sicherheit von Komponenten von Drittanbietern • R FI D-Sicherheit • Sicherheit von integrierten Schaltungen — This module provides an introduction into computer security and embedded security. In particular, this module focuses on approachesandtechniquesforbuildingsecuresystemsandfor the secure operation of systems. The module requires an understanding of mathematical concepts(e. g. ,modulo-arithmetic, complexnumbers, grouptheo ry) and logic (set theory, predicate logic, natural deduction). Moreover, themodulerequiresanunderstandingofaprogramming language (e. g. , Python, C) and basic software enginee ring knowledge. Some exercises require a basic command of Linux in general and the command line (shell) in particular. The module includes the topics: • Computer Security Fundamentals • Access Control • Embedded Systems • Need for Security in Embedded Systems • Cryptographic Foundations • Attacking Crypto • Public Key Infrastructures (P KIs) • Digital Signatures  • Security Protocols • Formal Analysis of Security Protocols • Secure Software Development Lifecycle (S SD L) • Threat Modelling • Common Vulnerability Scoring System (C VS S) • Software Vulnerabilities • Secure Programming • Security Testing: Basics, Fuzzing, Static Analysis • Security of Third-Party Components • R FI D Security • Hardware Fingerprinting & I C Security",90 Minuten schriftliche Klausur oder ca. 20 Minuten münd- liche Prüfung in englischer Sprache und je nach Anzahl der Hörer; die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. Written exam (90 minutes) or oral exam in English accordingto the number of participants (about 20 minutes); the preci se mode of assessment will be announced at the start of the semester.,"Präsentation und Beamer, Tafel Presentation and projector, blackboard",angesagt. Online resources will be provided and specific readings will be announced during the lectures and exercise sessions.,MSc AI Engineering and MSc Informatik/ Computer Science
6092,Digitales Design mit Verilog-HDL auf FPGA,455408,Jedes Semester Every semester,1 Semester,Kavun,Kavun,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,3Ü,45 Std. Präsenz + 50 Std. Übungen + 55 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 45 contact hours + 50 hrs exercises + 55 hrs independent study and exam preparation,ECTS/Credits: 5,Keine None,Keine None,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden können • die Bedeutungkanonischer Formenbeider Minimierung oder sonstigen Optimierung von booleschen Formeln in allgemeinen und digitalen Schaltungen erkennen, • Funktionen mit Hilfe beliebiger Minimierungsalgorithmen (Boolesche Algebra oder Karnaugh Map) minimie ren, • Analyse der Entwurfsverfahren für kombinatorische und sequentielle Schaltungen, • das Problem zu definieren (Eingänge und Ausgänge), seine Funktionen zu schreiben, • den endlichen Automaten mit Hilfe von algorithmischen Zustandsdiagrammen entwerfen und einfache Projekte mit einigen Flip-Flops durchführen, • Entwurf digitaler Schaltungen unter Verwendung der Hardware-Beschreibungssprache (Verilog), • Implementierung von Funktionen mit digitalen Schaltungen (kombinatorisch oder sequentiell) auf einer re konfigurierbaren Plattform (F PG A-Board), • Verwendung von Industriestandard Software-Entwurfssoftware und programmierbaren Geräten wie F PG As zur Implementierung digitaler Schal tungen, • komplexe Algorithmen wie kryptografische Primitiveentwerfen, um verschiedene Entwurfsspezifika zu beob achten. — Students can• identify the importance of canonical forms in the mini mization or other optimization of Boolean formulas in general and digital circuits, • minimize functions using any type of minimizing algo rithms (Boolean algebra or Karnaugh map), • analyze the design procedures of combinational and se quential circuits, • define the problem (inputs and outputs), write its func tions, • design the finite state machine using algorithmic state machine charts and perform simple projects with a few flip-flops, • design digital circuits using Hardware Description Lan guage (Verilog), • implementfunctionsusingdigitalcircuit(combinational orsequential)onreconfigurableplatform(F PG Aboard), • use industry standard software design suite and pro grammable devices such as F PG As to implement digital circuits, • design complex algorithms like cryptographic primitives to observe different design specifics.  Fähigkeiten / Abilities Die Studierenden erwerben die Fähigkeit• komplexe technische Probleme zu erkennen, zu formulieren und zu lösen, indem sie ingenieurwissenschaftliche, naturwissenschaftliche und mathematische Prinzi pien anwenden, • wenden Digitales Design Optimierung Methodenan, um Lösungen zu entwickeln, die bestimmte Anforderungen unter Berücksichtigung verschiedener Faktoren erfüllen, • im Rahmen eines Modulprojekts Aufgaben zu stellen und Ziele zu erreichen. — Students gain an ability to• identify, formulate, and solve complex engineering pro blemsbyapplyingprinciplesofengineering, science, and mathematics, • apply digital design optimization techniques to produce solutions that meet specified needs with consideration of different factors, • establish goals and meet objectives in a module project. Kompetenzen / Competencies Die Studierenden • erwerben Kenntnisse in der Analyse und dem Entwurfvon Verfahren für kombinierte und sequentielle Schal tungen, • lernen, wie man Hardware-Simulationssoftware zum Testen der entworfenen Schaltung verwendet, • lernen, wieman eineneffektiventechnischen Berichtfür die Bewertung schreibt, • gewinnen Erfahrung in der Nutzung von Online Ressourcen zur Beschaffung aktueller Literatur zu di gitalen Designkomponenten. — The students • gain knowledge in analyzing and designing procedures of combinational and sequential circuits, • learnhowtousehardwaresimulationsoftwarefortesting the designed circuit, • learn how to write an effective technical report for the assessment, • gain experience on using online resources to obtain cur rent literature on engineering components.","Diese Übung behandelt die Konzepte, Prinzipien und Tech- niken des Entwurfs und der Implementierung digitaler Sys-teme. Der Kurs lehrt die Grundlagen digitaler Systeme un ter Anwendung der Logikentwurfs- und Entwicklungstechniken. Praktische Laborexperimente mit einem rekonfigurierba ren Board dienen der Vertiefung der theoretischen Konzepte. Die Laborexperimente beinhalten den Entwurf und die Imple mentierung von digitalen Schaltungen. Der Schwerpunkt des Kurses liegt auf der Verwendung von C AD-Tools (Computer Aided Design)fürden Entwurf, die Simulationunddas Testenvon digitalen Schaltungen anhand konkreter Beispiele, insbe sondere bei Sicherheit- und Kryptographieanwendungen. Ziel des Moduls ist es, den Studenten die Themen kombi natorische und sequentielle Schaltungsanalyse und -entwurf, Optimierungsmethoden für den Entwurf digitaler Schaltun genunter Verwendungvon Multiplexern, Decodern, Registern, Zählern und programmierbaren Logikarrays anhand eines re konfigurierbaren F PG A-Evaluierungsboards zu vermitteln. Das Modul beinhaltet die Themen • Grundlagen der Elektronik • Zahlendarstellung und Binärcodes • Boolesche Algebra und Funktionen, kanonische Formen • Kombinatorische Entwurfstechniken: K-Maps• Kombinatorische Logikschaltungen: Addierer/ Subtrak tor, Codewandler, Komparatoren, Multiplexer/Demultiplexer und Decoder/Encoder• Programmierbare Logikschaltungen, feldprogrammier bare Gate-Arrays (F PG A) • Sequentielle Logikschaltungen • Latches und Flip-Flops• Zustandsverhalten von synchronen sequentiellen Schal tungen: Zustandstabellen • Implementierung von kryptographischen Algorithmen und anderen Beispielschaltungen auf F PG A — This exercise course addresses the concepts, principles and techniques of digital systems design and implementation. The course teaches the fundamentals of digital systems applyingthe logic design and development techniques. Practical labo ratory experiments using a reconfigurable board are used to reinforcethetheoreticalconcepts. Thelabexperimentsinvolvethe design and implementation of digital circuits. The cour se emphasis is on the use of computer-aided design (C AD) tools in the design, simulation, and testing of digital circuitsthrough specific examples, especially in security and crypto graphy applications. The aim of the course is to introduce to the students thetopics that include combinational and sequential circuit ana  lysis and design, digital circuit design optimization methods using random logic gates, multiplexers, decoders, registers, counters, and programmable logic arrays through a reconfigu rable F PG A evaluation board. The module includes the topics • Basics of electronics • Number representation and binary codes • Boolean algebra and functions, canonical forms • Combinational design techniques: K-maps • Combinational logic circuits: adders/subtractors, code converters, comparators, multiplexors/demultiplexors, and decoders/encoders • Programmable logic circuits, field programmable gate arrays (F PG A) • Sequential logic circuits • Latches and flip-flops • State behavior of synchronous sequential circuits: State tables • Implementation of cryptographic algorithms as well as other example circuits on F PG A",Portfolio-Prüfung in englischer Sprache. Ein Abschlussprojekt und der entsprechende Bericht sollten eingereicht werden. Portfolio Exam in English language. A final project and its corresponding report should be submitted.,"Präsentation und Beamer, Tafel, Boolean Board F PG A Presentationandprojector, blackboard, Boolean Board FP GA",angesagt. Online resources will be provided and specific readings will be announced during the exercise sessions.,MSc AI Engineering and MSc Informatik/ Computer Science
6100,Computational Game Theory,472690,Unregelmäßig Irregular,1 Semester,Harks,Harks,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,"60+30 Std. Präsenz, 90+90 Std. Eigenarbeitszeit Workload 60+30 contact hours, 90+90 hours independent study and exam preparation",ECTS/Credits: 9,Keine None,"Analysis I+I I, Lineare Algebra I+I I Analysis I+I I, Linear Algebra I+I I","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen die grundlegenden Fragestellungen und Methoden der algorithmischen Spieltheorie. —The students learn the foundations of algorithmic game theo ry. Fähigkeiten / Abilities  Die Studierenden können verteilte Systeme mit strategischer Interaktion modellieren und analysieren. Insbesondere algorithmische Zugängezur Berechnungvon Gleichgewichtslösun gen werden vermittelt. —The students are able to model distributed systems with stra tegically interacting agents. They are able to algorithmicallysolve such systems by means of computing equilibrium soluti ons. Kompetenzen / Competencies Die Studierendenhabendie Kompetenz, verteilte Systememit strategischer Interaktion zu modellieren, zu bewerten und mit Rechnerunterstützung zu lösen. —The students have the competence to model and algorithmi cally solve distributed systems with strategically interacting agents.","Nash-Equilibrium, Lemke-Howson, P PA D, P LS, Congestion Games, Pricing, Cooperative Game Theory, Core, Auctions, Mechanism Design","120-minütige Klausur (oder 30 Minuten mündliche Prüfung) über die Themen: Nash-Equilibrium, Lemke-Howson, P PA D, P LS, Congestion Games, Pricing, Cooperative Game Theory, Core, Auctions, Mechanism Design. Exam (120 minutes) or oral exam (30 minutes) covering thetopics: Nash-Equilibrium, Lemke-Howson, P PA D, P LS, Congestion Games, Pricing, Cooperative Game Theory, Core, Auc tions, Mechanism Design.",Tafelanschrieb Blackboard,Skriptum,MSc AI Engineering and MSc Informatik/ Computer Science
6101,Komplexe Dynamische Netzwerke,471515,Wird vermutlich nicht mehr angeboten Probably not offered anymore,1 Semester,Schönlein,Schönlein,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,2 V + 1Ü,45 Std. Präsenz + 50 Std. Übungen + 55 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 45 contact hours + 50 hrs exercises + 55 hrs independent study and exam preparation,ECTS/Credits: 5,Keine None,"Analysis I+I I, Lineare Algebra I+I I, Gewöhnliche Differential- gleichungen Analysis I+I I, Linear Algebra I+I I, Ordinary Differential Equa tions","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen die Grundlagen der mathematischen Modellierung komplexer Systeme wie kausale Loop Diagram  me. Sie verstehen den Einfluss von Rückkopplungen unter den Komponenten komplexer dynamischer Netzwerke. Die Studie renden sind in der Lage komplexe Netzwerke zu visualisierenund zu simulieren. Sie kennen verschiede Maße für die Struk turanalyse komplexer Netzwerke. —The participants are familiar with the fundamentals of mode ling complex systems, such as causal loop diagrams. They command methods for creating mathematical models inscience and engineering. They are aware of feedback interac tions among the components of complex dynamic networks. The students are able to visualize and simulate complex net works and know measures and metrics capturing features of network structures. Fähigkeiten / Abilities Die Studierenden sind in der Lage mathematische Modelle fürreale Systeme zu erstellen. Sie können komplexe Systeme un tersuchen indem sie Simulationen erstellen und verschiedene Struktureigenschaften analysieren. —The students are able to create mathematical models for real world systems. They are able to draw conclusions based on visualizations, simulations and structural analysis.","Folgende Themen werden behandelt: Modellierung komplexer Systeme (Kausale Loop Diagram-me), Darstellung komplexer Systeme, Strukturanalyse komplexer Systeme (Zentralitätsmaße, Page Rank, Gruppenbildung), Synchronisation gekoppelter Systeme, Populations und Epidemie-Modelle — The following topics will be covered:modelingcomplexsystems(causalloopdiagrams), visualizati on and simulation of complex systems, analysis of topologicalproperties (centrality measures, Page Rank, clustering), popu lation and epidemic models",90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semestersdurch Aushang und auf den Internetseiten der Fakultät be kannt gegeben. 90-minute examination or 20-minute oral examination. Theprecise mode of assessment will be announced on the noti ceboard and on the faculty website at the beginning of the semester.,"Tafelanschrieb, Online Lehre via Zoom Blackboard, online teaching via Zoom","H. Sayama. Introduction to the Modeling and Analysis of Complex Systems. Open S UN Y Textbooks, 2015 J. Sterman. Business Dynamics: Systems Thinking and Mo deling for a Complex World. Mc Graw-Hill Higher Education, 2000 S. Meyn. Control Techniques for Complex Networks. Cam bridge University Press, 2008 M. Newman. Networks. 2nd Ed. Oxford University Press, 2018",MSc AI Engineering and MSc Informatik/ Computer Science
6103,Distributed Algorithms,422150,Unregelmäßig Irregular,1 Semester,Harks,"Ghodselahi, Harks",Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,2 V + 2Ü,"60 Std. Präsenz, 60 Std. Übung, 60 Std. Nachbereitung der Workload Vorlesung und Prüfungsvorbereitung60 contact hours, 60 hours independent study, 60 hours lec ture and exam preparation",ECTS/Credits: 6,Keine None,Interesse an Algorithmik Interest in algorithmic problems,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen die grundlegenden Fragestellungenund Methoden des verteilten Rechnens. Insbesondere werden Theme wie „communication, locality, parallelism, selforganization, symmetry breaking, synchronization, and uncer tainty” behandelt.  —Understanding of the fundamental principles and issues un derlying the design of distributed systems and networks Familiarity with essential algorithmic ideas and lower bound techniques in distributed computing Ability to analyze and design distributed algorithms for areas suchascommunication, locality, parallelism, self-organization, symmetry breaking, synchronization, and uncertainty Fähigkeiten / Abilities Die Studierenden sind in der Lage verteilte Algorithmen zu entwerfen und für Anwendungen im Bereich Kommunikation, Parallelisierbarkeit und Selbstorganisation anzuwenden. — Analyze and design distributed algorithms for areas such ascommunication, locality, parallelism, self-organization, sym metry breaking, synchronization, and uncertainty Understand the fundamental principles and issues underlying the design of distributed systems and networks Develop a strong foundation for further study or work in the field of distributed computing Kompetenzen / Competencies Die Studierendenhabendie Kompetenz, verteilte Algorithmen zuentwerfenundfür Anwendungenmit Rechnerunterstützung Lösungen zu berechnen. — The ability to analyze and design distributed algorithms for a variety of fundamental issues in distributed computing The ability to apply knowledge of distributed computing to real-world distributed systems and networks Astrongunderstandingofthefundamentalprinciplesandissu esunderlyingthedesignofdistributedsystemsandnetworks","Introduction, Vertex Coloring, Tree Algorithms, Distributed Sorting, Maximal Independent Set, Shared Objects, Locality- Based Lower Bounds, Synchronizers, Dynamic Networks","120-minütige Klausur (oder 30 Minuten mündliche Prüfung) über: Vertex Coloring, Tree Algorithms, Distributed Sorting, Maximal Independent Set, Shared Objects, Locality-Based Lower Bounds, Synchronizers, Dynamic Networks Exam (120 minutes) or oral exam (30 minutes) covering the topics: Vertex Coloring, Tree Algorithms, Distributed Sorting, Maximal Independent Set, Shared Objects, Locality-Based Lower Bounds, Synchronizers, Dynamic Networks","Tafelanschrieb Blackboard, (videos in case of virtual lecture)","Distributed Computing: A Locality-Sensitive Approach D. Peleg Societyfor Industrialand Applied Mathematics(S IA M), 2000. Distributed Computing: Fundamentals, Simulations and Ad vanced Topics H. Attiya, J. Welch Mc Graw-Hill Publishing, 1998. Dissemination of Information in Communication Networks J. Hromkovic, R. Klasing, A. Pelc, P. Ruzicka, W. Unger Springer-Verlag, 2005. Introduction to Parallel Algorithms and Architectures: Arrays, Trees, Hypercubes F. T. Leighton Morgan Kaufmann Publishers Inc. , 1991. Introduction to Algorithms (3rd edition) T. Cormen, C. Leiserson, R. Rivest, C. Stein The M IT Press, 2009.",MSc AI Engineering and MSc Informatik/ Computer Science
6105,Dynamic Network Flows,422160,Unregelmäßig Irregular,1 Semester,Harks,"Graf, Harks",Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,2 V + 2Ü,"30+30 Std. Präsenz, 60+60 Std. Eigenarbeitszeit Workload 30+30 contact hours, 60+60 hours independent study and exam preparation",ECTS/Credits: 6,Keine None,"Lineare Algebra I, Analysis I+I I Linear Algebra I, Analysis I+I I","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen die grundlegenden Modelle und Me- thoden, um dynamische Netzwerkflüsse zu berechnen und zu charakterisieren. Des Weiterenwerden Modellemitstrategisch agierenden Flusspartikeln betrachtet. — The students learn the foundations of dynamic network flows from a computational perspective. They also understand mo dels with strategic acting agents. Fähigkeiten / Abilities Die Studierenden können dynamische Netzwerkflüsse modellieren und charakterisieren. Des Weiteren können sie Model le mit strategischer Interaktion von Flusspartikeln modellierenundanalysieren. Insbesonderealgorithmische Zugängezur Be rechnung von Gleichgewichtslösungen werden vermittelt. — The students are able to model dynamic network flows with and without strategically interacting agents. They are able to algorithmically solve such models by means of computing equilibrium solutions. Kompetenzen / Competencies Die Studierenden haben die Kompetenz, dynamische Netz werkflüsse sowohl ohne wie auch mit strategischer Interaktionvon Flusspartikeln zu modellieren, zu bewerten und mit Rech nerunterstützung zu lösen. —The students have the competence to model and algorithmically solve dynamic network flows with and without strategi cally interacting agents.","Dynamic capacitated flows, earliest arrival flows, Ford- Fulkerson Algorithm, Vickrey model, dynamic equilibrium flows, thin flows, instantaneous dynamic equilibrium flows, path-delay operator model","120-minütige Klausur (oder 30 Minuten mündliche Prüfung) über die Themen: Dynamic capacitated flows, earliest arri- val flows, Ford-Fulkerson Algorithm, Vickrey model, dynamicequilibrium flows, thin flows, instantaneous dynamic equilibri um flows, path-delay operator model. Exam (120 minutes) or oral exam (30 minutes) covering the topics: Dynamic capacitated flows, earliest arrival flows, Ford-Fulkerson Algorithm, Vickrey model, dynamic equilibri umflows, thinflows, instantaneousdynamicequilibriumflows, path-delay operator model.","Tafelanschrieb Blackboard, (videos in case of virtual lecture)",Skriptum,MSc AI Engineering and MSc Informatik/ Computer Science
6106,Computational Geometry,405125,Unregelmäßig Hinweis: Das Modul ersetzt das alte Modul „Algorithmische Geometrie“ - keine Doppelanrechung möglich! Irregular Notice:ThemodulereplacestheoldmoduleÄlgorithmic Geo metry cannot be credited twice.,1 Semester,Harks,Desai,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Euklidische Geometrie, Algorithmen und Datenstrukturen, Li- neare Algebra, Analysis Euclidean Geometry, Algorithms and Data Structures, Linear Algebra, Analysis","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen Techniken, die man für den Entwurfund die Analyse geometrischer Algorithmen und Datenstruk turen benötigt. — The students know techniques that can be used to design and analyze geometric algorithms and data structures. Fähigkeiten / Abilities Die Studierenden können die in der Vorlesung vorgestellten Verfahren und Datenstrukturen exemplarisch ausführen, de ren Funktionsweise erläutern und sie analysieren. — The students can apply the algorithms and data structures presented in the lecture on examples, can explain the way they work and are able to analyze them. Kompetenzen / Competencies Die Studierenden können entscheiden, welche Algorithmenoder Datenstrukturen geeignet sind, um ein gegebenes geo metrisches Problem zu lösen. Die Studierenden sind in der Lage, neue Probleme zu analysieren und sich auf Basis der inder Vorlesung erlernten Konzepte und Techniken eigene effi ziente Lösungen zu überlegen. — Thestudentshavethecompetencetodecidewhichalgorithms or data structures are useful to solve a geometric problem. They are able to analyze new problems and think of efficient solutions based on the concepts and techniques learned in the lecture.","Diese Vorlesung beschäftigt sich mit den algorithmischen Aspektengeometrischer Problemstellungen:Wirwerden Tech- niken erlernen, die man für den Entwurf und die Analyse von geometrischen Algorithmen und Datenstrukturen benötigt. Insbesondere werden Themen wie “Convex hull in 2d, Rangesearch, intersections, Polygon triangulation, Art Gallery theorem, Duality and line arrangements, Voronoi diagram and Delaunay triangulations, Epsilon-nets and V C-dimension, Cluste ring point sets” vorgestellt. — Thislecturedealswithalgorithmicaspectsofgeometrictasks:we will learn techniques that can be used to design and ana lyze geometric algorithms and data structures. Inparticular, wewillcovertopicslike Convexhullin2d, Rangesearch, intersections, Polygon triangulation, Art Gallery theorem, Duality and line arrangements, Voronoi diagram and De launay triangulations, Epsilon-nets and V C-dimension, Cluste ring point sets.",120-minütige Klausur oder mündliche Prüfung (ca. 30 Minu- ten) über die Themen der Vorlesung. Die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. Written exam (120 minutes) or oral exam (approx. 30 minu tes) covering the content of the course. The precise mode of assessment will be announced at the start of the semester.,"Tafelanschrieb Blackboard, (videos in case of virtual lecture)","Markde Berg, Otfried Cheong, Marcvan Kreveld, Mark Over- mars: Computational Geometry: Algorithms and Applications. Springer-Verlag, 3rd edition, 2008. Rolf Klein:Algorithmische Geometrie:Grundlagen, Methoden, Anwendungen. Springer-Verlag, 2nd edition, 2005.",MSc AI Engineering and MSc Informatik/ Computer Science
6111,Klassische Grenzwertsätze & große Abweichungen,451019,Unregelmäßig Irregular,1 Semester,Prochno,Prochno,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Einführung in die Stochastik, Wahrscheinlichkeitstheorie Introduction to Stochastics, Probability Theory","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden bekommen ein vertieftes Verständnis klassi-scher Grenzwertsätze der Wahrscheinlichkeitstheorie und ler nen die grundlegenden Konzepte sowie Techniken der Theorie der großen Abweichungen kennen.  —Studentsobtainadeeperunderstandingofclassicallimittheo rems in probability and learn the fundamental concepts and methods of large deviations theory. Fähigkeiten / Abilities Die Studierenden üben den Umgang sowie die Kombinati on der Methoden der Wahrscheinlichkeitstheorie, speziell der Theorie der großen Abweichungen, an ausgewählten Proble men, die sich auf verschiedene Bereiche der Mathematik, wie etwa Funktionalanalysis, Wahrscheinlichkeitstheorie, (konvexeund diskrete) Geometrie sowie theoretische Informatik, stüt zen. — Studentspracticehandlingthemethodsdevelopedandusedin probability theory, in particular large deviations theory, whichare intimately related to functional analysis, probability theo ry, (discrete and convex) geometry, and computer science. Kompetenzen / Competencies Die Studierenden sind in der Lage, die Konzepte und Metho den der Wahrscheinlichkeitstheorie, speziell der Theorie dergroßen Abweichungen, bei konkreten Fragestellungen anzu wenden. — The students are able to approach problems in mathematicsand related fields by means of methods and ideas from proba bility theory, in particular large deviations theory.","Ausgehend von den klassischen Grenzwertsätzen der Wahr- scheinlichkeitstheorie, die das typische Verhalten etwa von Summen u. i. v Zufallsgrößen beschreiben, führen wir in die Theorie der großen Abweichungen ein, d. h. die zentralen Be griffe, Konzepte und fundamentale Sätze werden behandelt. Die Theorie beschäftigt sich mit untypischen/ seltenen Ereignissen und deren asymptotische Quantifizierung mittels Ra tenfunktionen. Sie steht historisch in enger Verbindung zur statistischen Physik und hat moderne Anwendungen/Bezüge etwa zu geometrischer Funktionalanalysis, Konvexgeometrie oder theoretischer Informatik. Das Modul beinhaltet Elemente aus: • Kolmogorovs L1-Version des S GG Z • Lindebergs Zentraler Grenzwertsatz • Lindeberg Methode • Legendre Transformation • Kumulantenerzeugende Funktion • Satz von Cramér • Satz von Cramér (heavy tails Version)  • Prinzipien großer Abweichungen • Kontraktionsprinzip • Varadhans Variationslemma • Satz von Sanov• Anwendungenin Funktionalanalysis, theoretischer Infor matik — Startingwiththeclassicallimit theoremsinprobabilitytheory, whichdescribe, forinstance, thetypicalbehaviorofsumsofiid random variables, we introduce the theory of large deviationswith its key notions and concepts as well as some of the fun damental results. The theory deals with atypical/ rare eventsand their asymptotic quantification using rate functions. His torically, the area is closely linked to statistical physics and has modern applications in/ is related to geometric functional analysis, convex geometry or theoretical computer science. The module covers elements from: • Kolmogorov’s L1 version of the S LL N • Lindeberg’s central limit theorem • Lindeberg’s method • Legendre transformation • Cumulant generating function • Cramér’s theorem • Cramér’s theorem (heavy tails version) • Large deviation principles • Contraction principle • Varadhan’s variational lemma • Sanov’s theorem • Applicationsinfunctionalanalysis, theoreticalcomputer science",Klausur (90 Minuten) oder mündliche Prüfung (ca. 30 Mi- nuten) in deutscher oder englischer Sprache; die genaue Prü- fungsart wird zu Beginn des Semesters bekannt gegeben. 90-minute written examination or oral exam (about 30 minu tes)in Germanor English; theprecisemodeofassessmentwill be announced at the start of the semester.,"Präsentation und Beamer, Tafel/Tablet Presentation and projector, blackboard/tablet","J. Prochno: Classical limit theorems & large deviations, Lec- ture notes, 2020 F. Den Hollander:Large Deviations, Fields Institute Monogra phs, Volume 14, 2000 A. Dembo, O. Zeitouni: Large Deviations Techniques & App lications, Springer, 2010",MSc AI Engineering and MSc Informatik/ Computer Science
6112,Introduction to Information-based Complexity and,485384,Unregelmäßig Irregular,1 Semester,Prochno,"Prochno, Sonnleitner",Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,3 V + 1Ü,60 Std. Präsenz + 40 Std. Übungen + 80 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 40 hrs exercises + 80 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Lineare Algebra I+I I, Analysis I+I I, Einführungindie Stochas- tik Linear Algebra I+I I, Analysis I+I I, Introduction to Stochastics","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen Grundkonzepte und -resultate der“Information-based complexity” und wissen über die Funkti onsweise von “Compressed Sensing” Bescheid.  — The students know fundamental concepts and statements of information-based complexity and are aware of the workings of compressed sensing. Fähigkeiten / Abilities Die Studierenden üben anhand ausgewählter Probleme Be griffe und Methoden aus “Information-based Complexity” und“Compressed Sensing”einzuordnenundanzuwenden. Siewen den diese an, um konkrete Fragestellungen zu beantworten. — The students practice with the help of selected problems to classify and apply concepts and methods of information-based complexity and compressed sensing. They apply these in order to solve concrete problems. Kompetenzen / Competencies Die Studierenden sind in der Lage, die Konzepte und Methoden von “Information-based Complexity” und “Compres sed Sensing” bei konkreten Fragestellungen anzuwenden. — The students are able to apply concepts and methods ofinformation-based complexity and compressed sensing to con crete problems.","setztsich aus Themenbereichen der folgenden Liste zusammen: • Grundlagen der “Information-based complexity” • Numerische Integration und Approximation • Lineare Algorithmen und lineare Probleme • “Compressed sensing” und “sparse approximation” • “Restricted Isometry Property” • (Gauss’sche) Zufallsmatrizen und Maßkonzentration —Information-based Complexity is concerned with the theoreti cal analysis of numerical problems and their complexity withrespecttogiveninformationandintrinsicdimensionality. Compressed sensing is an efficient technique to recover and sto re signals with few important features, and as such will be studied in this course in the framework of information-based complexity. The content is based on elements of the following  list: • Information-based complexity basics • Numerical integration and approximation • Linear algorithms and Linear problems • Compressed sensing and sparse approximation • Restricted Isometry Property• (Gaussian) random matrices and concentration of mea sure",Klausur (90 Minuten) oder mündliche Prüfung (ca. 30 Mi- nuten) in deutscher oder englischer Sprache; die genaue Prü- fungsart wird zu Beginn des Semesters bekannt gegeben. 90-minute written examination or oral exam (about 30 minu tes)in Germanor English; theprecisemodeofassessmentwill be announced at the start of the semester.,"Präsentation und Beamer, Tafel/Tablet Presentation and projector, blackboard/tablet",wird zu Beginn des Semesters be- kannt gegeben Additional reading material will be announced at the start of the semester,MSc AI Engineering and MSc Informatik/ Computer Science
6113,Einführung in die Approximationstheorie,455460,Jedes Semester Every semester,1 Semester,Prochno,Prochno,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,2 V + 1Ü,45 Std. Präsenz + 50 Std. Übungsaufgaben + 55 Std. Nach- Workload bereitung und Prüfungsvorbereitung 45 contact hours + 50 hrs exercises + 55 hrs independent study and exam preparation,ECTS/Credits: 5,Keine None,"Analysis I, Analysis I I Analysis I, Analysis I I","Verwendbarkeit in weiteren Master Informatik, Bachelor Mathematik Studiengängen Master Computer Science, Bachelor Mathematics","Kenntnisse / Skills/Knowledge Die Studierenden lernen grundlegenden Konzepte sowie Tech- niken der Approximationstheorie kennen. —Students learn fundamental concepts and methods of appro  ximation theory. Fähigkeiten / Abilities Die Studierenden üben den Umgang sowie die Kombinati on der Methoden der Approximationstheorie an ausgewählten Problemen, die sich auf verschiedene Bereiche der Mathema tik stützen. — Students practice handling the methods developed and usedin approximation theory, which are intimately related to va rious areas of mathematics. Kompetenzen / Competencies Die Studierenden sind in der Lage, die Konzepte und Methoden der Approximationstheorie bei konkreten Fragestellun gen zu klassischen sowie aktuellen Themen (etwa im Rahmenhochdimensionaler Probleme der Mathematik und angrenzen der Gebiete) anzuwenden. — The students are able to approach classical and modern (e. g. , high-dimensional) problems in mathematics and related fields by means of methods and ideas from approximation theory.","Das Modul dient der Vermittlung von Grundlagen der klassi- schen Approximationstheorie. Darüber hinaus sollen auch mo- dernere Aspekte der Approximationstheorie diskutiert werden. Das Modul beinhaltet ausgewählte Themen aus den Berei chen: The module introduces some fundamental ideas in classical approximation theory as well as some of its modern aspects. The module covers selected topics from:• Approximation by algebraic polynomials (1st Weier strass theorem) • Trigonometric Polynomials (2nd Weierstrass theorem) • Characterization of best approximation • Lagrange, Chebyshev and Hermite interpolation • Orthogonal polynomials (Christoffel-Darboux Identity) • Entropy numbers and applications • General s-Numbers and applications",mündliche Prüfung (ca. 30 Minuten) 30-minute oral examination,"Präsentation und Beamer, Tafel/Tablet Presentation and projector, blackboard/tablet","A Short Course on Approximation Theory, N. L. Carothers Modern Approximation Theory, J. Vybíral",MSc AI Engineering and MSc Informatik/ Computer Science
6117,Convex Geometry and Applications to Linear Programming,472730,Unregelmäßig Irregular,1 Semester,Prochno,"Prochno, Sonnleitner",Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,3 V + 1Ü,60 Std. Präsenz + 40 Std. Übungen + 80 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 40 hrs exercises + 80 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Lineare Algebra I, Analysis I Linear Algebra I, Analysis I","Verwendbarkeit in weiteren Master Informatik, Bachelor Mathematik Studiengängen Master Computer Science, Bachelor Mathematics","Kenntnisse / Skills/Knowledge Die Studierenden kennen Grundkonzepte und -resultate der Konvexgeometrie und der Linearen Optimierung. — The students know fundamental concepts and statements of convex geometry and linear programming.  Fähigkeiten / Abilities Die Studierendenübenanhandausgewählter Probleme Begrif fe und Methoden aus der Konvexgeometrie und der Linearen Optimierung einzuordnen und anzuwenden. Sie wenden diese an, um konkrete Fragestellungen zu beantworten. — The students practice on selected problems to classify and apply concepts and methods of convex geometry and linear programming. They apply these to solve concrete problems. Kompetenzen / Competencies Die Studierenden sind in der Lage, die Konzepte und Metho den der Konvexgeometrie und der Linearen Optimierung bei konkreten Fragestellungen anzuwenden. —The students are able to apply concepts and methods of con vexgeometryandlinearprogrammingtoconcreteproblems.","Die Konvexgeometrie beschäftigt sich mit konvexen Mengen im euklidischen Raum und bildet die Grundlage der Konvexen Optimierung, wozu die Lineare Optimierung zählt. Dieser Zu sammenhang wird durch Themenbereiche aus der folgenden Liste dargestellt: • Grundlagen der Konvexgeometrie • Geometrische Version des Satzes von Hahn-Banach • Satz von Krein-Milman über Extremalpunkte • Polytope und Polyeder • Grundlagen der Linearen Optimierung • Simplex Algorithmus • Farkas’ Lemma • “Neighborly Polytopes” und dünne lineare Systeme — Convex geometry is concerned with convex sets in Euclidean space and forms the basis of convex optimization, of which linear programming is part. This relation will be demonstrated through topics from the following list: • Elementary convex geometry • Geometric Hahn-Banach theorem • Krein-Milman theorem on extreme points • Polytopes and Polyhedra • Linear programming basics • Simplex algorithm • Farkas’ lemma • Neighborly Polytopes and sparse linear systems",Klausur (90 Minuten) oder mündliche Prüfung (ca. 30 Mi- nuten) in deutscher oder englischer Sprache; die genaue Prü-  fungsart wird zu Beginn des Semesters bekannt gegeben. 90-minute written examination or oral exam (about 30 minu tes)in Germanor English; theprecisemodeofassessmentwill be announced at the start of the semester.,"Präsentation und Beamer, Tafel/Tablet Presentation and projector, blackboard/tablet",wird zu Beginn des Semesters be- kannt gegeben Additional reading material will be announced at the start of the semester,MSc AI Engineering and MSc Informatik/ Computer Science
6120,Principles of AI Engineering,455410,Unregelmäßig Irregular,1 Semester,Herbold,Herbold,Englisch English,Modulgruppe „A IS E“ Modulgruppe „A IS E“,2 V + 2Ü,60 Std. Präsenz + 45 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 45 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Software Engineering, Introduction to A I Engineering","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen die grundlegenden Begriffe und Ver- fahren zur Entwicklung von Anwendungen mit Komponenten der Künstlichen Intelligenz (A I/K I) und wissen wie diese im Operativbetrieb eingesetzt werden können. Sie können zu gegeben Problemengeeignete Anforderungenan K ISystemede  finieren, eine geeignete Architektur auswählen und umsetzen, und die Qualität dieser Systeme sichern. Sie können nicht funktionale Aspekte von K I-Systemen bewerten, um einen verantwortungsbewussten, ethischen, und mit regulatorischen Anforderungen kompatiblen Einsatz zu gewährleisten. —Thestudentsknowtheterminologyandmethodsforthedeve lopmentofapplicationswithcomponentspoweredby Artificial Intelligence (A I) and how they can be used in operation. They know how to define requirements for A I systems, can defineand implement suitable architectures, and ensure their qua lity of such systems. They can assess non-functional aspects of A I systems to ensure a responsible, ethical, and regulatory compliant use.",Dieses Modul behandelt die Themen: • Requirements Engineering für Systeme mit K I Kompo- nenten• Architektur und Design von Systemen mit K I Kompo nenten • K I Pipelines • Testen von K I Komponenten • Datenqualität • Continuous Deployment und M LOps • Verantwortungsbewusstes entwickeln von K Is • Ethische und regulatorische Aspekte von K Is — This module covers the following topics:• Requirements engineering for systems with A I com ponents • Architecture and design of systems with A I components • A I/M L pipelines • Testing of A I components • Data quality • Continuous deployment and M LOps • Responsible development of A Is • Ethical and regulatory aspects,"Portfolio: Bearbeitung eines Semesterprojekts, nachgewiesen durch eine ca. 10-minütiges Kolloquium mit Präsentation und einen ca. 2-seitigen schriftlichen Bericht der eigenen Projektergebnisse am Semesterende. 60-minütige Klausur oder ca. 15 Minuten mündliche Prüfungjeweils in deutscher oder englischer Sprache. Die genaue Prü fungsart wird zu Beginn des Semesters bekannt gegeben.  — Portfolio:Implementation of a semester project completed with a pre sentation of approximately 10 minutes duration and a 2 page written report featuring a demonstration of results at the end of the semester. A 60-minute written or oral examination of approximately 15 minutes duration conducted either in German or English. Theform of assessment is announced at the beginning of the se mester.","Präsentation mit Tafel und Beamer Presentation with a projector, blackboard",Wird zu Beginn der Vorlesung bekannt gegeben,MSc AI Engineering and MSc Informatik/ Computer Science
6121,Requirements Engineering,455412,Unregelmäßig Irregular,1 Semester,Herbold,Herbold,Englisch English,Modulgruppe „A IS E“ Modulgruppe „A IS E“,"2 V+2Ü Für die Übungen im Rahmen der Lehrveranstaltung besteht Anwesenheitspflicht. Um den Erfolg der Veranstaltung zu gewährleisten, ist eine verstärkte Interaktion der Studierenden untereinander, aberauch zwischen Studierenden und Betreuern notwendig. Insbesondere arbeiten die Studierenden in einer Gruppe an ei nem das ganze Semester andauernden Projekt, in welchem gemeinsam Anforderungen erhoben, verfeinert, dokumentiert, und validiert werden. Im Rahmen dieser Projekte nehmen die Lehrenden die Rolle von Kunden ein. Die Kunden stehen un ter anderem für Interviews und Verhandlungen im Fall von Konflikten, sowie zur Validation von Anforderungen zur Ver fügung. Diese Interaktionen mit Kunden sind ein wesentlicher Bestandteildes Requirements Engineering. Ohne Anwesenheit kann daher nicht sichergestellt werden, dass der Einsatz dergelehrten Methoden erlernt wird, insbesondere was den Um gang mit Kunden angeht. —In this lecture’s exercises, participants’ attendance is manda tory. In order ensure the module’s success, an intensified interacti on amongst students but also between students and lecturers is essential. Most notably, participants collaborate within a group project throughout the entire semester in which they define, refine, document and validate requirements together. Withinthoseprojects, lecturerandteachingassistantsassume the roles of clients who are primarily available for interviews,  negotiations in the event of conflicts as well as validation of requirements. Suchformsofinteractionwithclientsarecrucialelements of requirements engineering. Without regular atten dance, learninghowtousetheconveyedmethods, inparticular in dealing with clients, could not be warranted.",60 Std. Präsenz + 45 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 45 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Software Engineering,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden können die Begriffe Anforderung/Requi- rement und Requirements Engineering definieren und kennen die Prinzipien des Requirements Engineerings. Sie lernen den Requirements Engineering Prozess kennen und welche Rol le dieser in der Softwareentwicklung spielt. Sie kennen den Systemkontext und die Kontextgrenze, Methoden für die Erhebung von Anforderungen und für die Interpretation der erhobenen Informationen, Verhandlungsmethodenmit Stakeholdern, die Strukturvon Anforderungsdokumentationen, Techni kenfürdie Anforderungsdokumentationinnatürlicher Sprachesowiefürdiemodellbasierte Anforderungsdokumentation, Me thoden für die Validierung von Anforderungen, sowie für das Management von Anforderungen, wie das Änderungsmanagement und die Nachverfolgung von Anforderungen. Für ein ge gebenes Problemkönnendie Studierendendieobengenannten Methoden anwenden, um eine geeignete Anforderungsdefini tion zu entwickeln. —The students can define the terms requirement and require  ments engineering and acquire knowledge on the principles of requirements engineering. They become acquainted with the generalrequirementsengineeringprocessandknowhowitcan be embedded into the overall software development process. They gain knowledge about the system context and contextboundaries, requirements elicitation techniques, the interpre tation of elicitation results, the negotiation of requirements withdifferentstakeholders, thestructureofdocumentsfortherequirements documentation, the requirements documentati on in natural language, techniques for the use of structurednatural language, the requirements documentation with models, the validation of requirements, managing changes to re quirements, and tracing requirements through a development process. The students can apply the aforementioned methodsto a given problem to derive a suitable requirements specifi cation.","Dieses Modul vertieft die Grundlagen der Softwaretechnik mit Details zum Umgang mit Anforderungen. Anforderungen wer- den am Beginn von Projekten erhoben und sind entscheidend für den Projekterfolg. Es wird ein vollständiger Requirements Engineering Prozess behandelt, von der Erhebung der Anforderungen, überdie Dokumentationund Validierungder Anforderungen, bis hin zum Management der Anforderungen wäh rend des Software Lebenszyklus. — This module deepens the foundations of software engineering with details regarding requirements. Requirements are elicited at the beginning of a project and are crucial for its success. The module considers a complete requirements engineering process, starting with the elicitation of requirements, followed by the documentation and validation of requirements, up tothe management of requirements throughout the software li fecycle.","Portfolio bestehend aus: Bearbeitung eines Semesterprojekts, nachgewiesen durch ein ca. 10-minütiges Kolloquium mit Präsentation und einen ca. 2-seitigen schriftlichen Bericht der eigenen Projektergebnisse am Semesterende. 60 Minuten Klausur oder ca. 15 Minuten mündliche Prüfungjeweils in deutscher oder englischer Sprache. Die genaue Prü fungsart wird zu Beginn des Semesters bekannt gegeben. — Portfolio examination including:Implementation of a semester project completed with a pre  sentation of approximately 10 minutes’ duration and a 2 page written report featuring a demonstration of results at the end of the semester. A 60-minute written or oral examination of approximately 15 minutes’durationconductedeitherin Germanor English. Theform of assessment is announced at the beginning of the se mester.","Präsentation mit Tafel und Beamer Presentation with a projector, blackboard","Klaus Pohl, Chris Rupp: Requirements Engineering Funda- mentals: A Study Guide for the Certified Professional for Re-quirements Engineering Exam-Foundation Level-I RE Bcom pliant Klaus Pohl: Requirements Engineering: Fundamentals, Prin ciples, and Techniques",MSc AI Engineering and MSc Informatik/ Computer Science
6122,Mining Software Repositories Lab,455423,Unregelmäßig Irregular,1 Semester,Herbold,Trautsch,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,5Ü,75 Std. Präsenz + 135 Std. Vor- und Nachbereitung Workload 75 contact hours + 135 hrs independent study and implemen tation,ECTS/Credits: 7,Keine None,"Software Engineering, Introduction to A I Engineering, Advan- ced Topics in Data Science, Kenntnisse in Python Software Engineering, Introduction to A I Engineering, Advan ced Topics in Data Science, Python Programming Language",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Die Studierenden kennen praktische Anwendungen von Data Scienceund Machine Learning Techniken, um Fragestellungenaus dem Software Engineering basierend auf Daten aus Soft ware Repositories zu bearbeiten. Sielernendurchdie Bearbeitungvon Fragestellungendes Soft  ware Engineerings den Prozess der Datenanalyse kennen undführen diesen selbstständig durch. Hierbei lernen die Studie renden geeignete Hypothesen zu definieren, benötigte Datenausgeeigneten Quellenzusammeln, Analysemodellezuerstel len inkl. des Trainings und der Auswertung von Modellen, die statistische Auswertung der Ergebnisse durchzuführen und die Ergebnisse zu präsentieren. — The students know practical applications of data science andmachine learning techniques to answer questions about soft ware engineering based on data from software repositories. Theylearntheprocessofrepositorydataanalysisthroughtheirworkonsoftwareengineeringtopics. Thestudentslearntode fine hypotheses, to collect data from suitable data sources, to create analysis models including their training and evaluation, to statistically assess results and to present their findings.","Die Studenten arbeiten mithilfe von Daten aus Software Re- positories in Gruppen an verschiedenen Fragestellungen aus der Software Engineering Forschung. Die Gruppen arbeiten im Verlauf des Kurses an unterschiedli chen Projekten. Für jedes Projekt bzw. Fragestellung müssen Datenextrahiertundtransformiertbzw. bereinigtwerden. Die se Daten müssen dann anhand der Fragestellung ausgewertet bzw. in einem Machine Learning Modell verarbeitet werden. Am Ende jedes Projektes stellen alle Gruppen Ihre Ergebnisse in einer Präsentation vor. — The students work in groups on different topics from software engineering research using software repository mining. The groups work on different projects during the course. For each project suitable data needs to be extracted, transformed, and/or cleaned. The data needs to be evaluated or used as input for a suitable machine learning model. At the end of each project, the groups present their results.","Portfolio-Prüfung basierend auf der Eignung, Implementie- rung, und Auswertungsmethodik der gewählten Methoden, den erzielten Ergebnissen, und der Präsentation der Projek tergebnisse. Die Elemente des Portfolios sind: Der Quelltext inklusive Dokumentation, eine schriftliche Ausarbeitung zu den Projektergebnissen (max. 8 Seiten), Präsentationen der Projektergebnisse, sowie ein abschließendes Prüfungsgespräch (max. 10 Minuten) mit jedem Teilnehmenden. Bei Teampräsentationen muss jeder Teilnehmende den Eigenanteil am Projekt darstellen. Zusätzlich werden die Eigen  anteile in der Quelltextdokumentation und der Ausarbeitung schriftlich festgehalten. Details zur Bewertung werden zu Beginn der Lehrveranstal tung erläutert. — Portfolio exam based on the suitability, implementation and assessment refinement of the chosen methods, the achieved results, and communication/presentation of the project. The portfolio elements are: code with documentation, a writtenreport on the outcome of the projects (max. 8 pages), pre sentations given over the course of the semester and a finalexamination conversation (max. 10 minutes) with each indi vidual participant. Within the team presentations, each participant showcases her/his own personal contribution to the project. Additionally, participants declare in written form their individual contribu tions as part of the report and the code documentation. Details on the assessment including count and length of thepresentations will be announced at the beginning of the cour se.",Präsentation mit Beamer Presentation with a projector,Wird zu Beginn der Vorlesung bekannt gegeben Will be announced at the beginning of the lecture,MSc AI Engineering and MSc Informatik/ Computer Science
6123,Deep Learning for Natural Language and Code,472700,Unregelmäßig Irregular,1 Semester,Herbold,Herbold,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,2 V + 2Ü,60 Std. Präsenz + 45 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 45 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Introduction to Deep Learning,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen die üblichen Aufgaben, die durch Verarbeitung von Text gelöst werden können, sowohl für die natürliche Sprache, als auch für Code. Sie kennen moderne auf Deep Learning basierende Verfahren zum Lösen dieser Probleme und können diese praktisch umsetzen. Sie wissen  welche Verfahren für eine gegebene Problemstellung geeignet sind und können diese auswählen. Sie kennen die Grenzen der Modelle und können die Güte der Ergebnisse bewerten. — The students know the typical tasks that can be solved through natural language and code processing. They know modern deep learning approaches to address these tasks and know how to implement them in practice. They know how select suitable methods for a given problem. They know thelimitations of the models and can evaluate their performan ce.",Dieses Modul behandelt die Themen: • Typische Aufgaben der Textverarbeitung • Word embeddings und Recurrent Neural Networks • Transformer und Pre-training • Encoder-only Modelle • Decoder-only Modelle • Encoder-decoder Modelle • Domainspezifische Modelle • Embeddings für Code • Transformer für Code • Multimodale Modelle — This module covers the following topics: • Typical tasks for language and code processing • Word embeddings and recurrent neural networks • Transformers and pre-training • Encoder-only models • Decoder-only models • Encoder-decoder models • Encoder-decoder models • Domain-specific models • Embeddings for code • Transformers for code • Multimodal models,90-minütige Klausur oder mündliche Prüfung (20 Minuten); diegenaue Prüfungsartwirdzu Beginndes Semestersbekannt gegeben. 90-minute written or 20-minutes oral examination; the preci se mode of assessment will be announced at the start of the semester.,"Präsentation mit Tafel und Beamer Presentation with a projector, blackboard",Wird zu Beginn der Vorlesung bekannt gegeben Will be announced at the beginning of the lecture,MSc AI Engineering and MSc Informatik/ Computer Science
6124,Mining Software Repositories,455433,Unregelmäßig Irregular,1 Semester,Herbold,Herbold,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,2 V + 2Ü,60 Std. Präsenz + 45 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 45 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Software Engineering,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden kennen die Datenquellen, aus denen man historische Datenüberdie Softwareentwicklungsammelnkann undkönnendiese Datenmit Hilfevongeeigneten Werkzeugensammeln. Sie können heuristisch Verknüpfungen zwischen gesammelten Daten finden sowie Informationen über Fehler ex  trahieren. Die Studierenden kennen die üblichen Fehlerquellender Heuristiken. Sie können qualitative Daten aus Reposito ries sammeln. Sie wissen, wie man diese Daten benutzt, um Fragestellungen über die Softwareentwicklung zu beantworten und können hierfür etablierte Verfahren anwenden. — The students know the data sources from which historic dataabout software development can be collected and know sui table tools to collect such data. They can use heuristics to detect links within this data and to collect information aboutbugs. They are aware of common sources of errors within the se heuristics. They can qualitatively label data from softwarerepositories. Theyknowhowtousedatafromsoftwarereposi tories to answer questions about software engineering and can apply suitable methods for this purpose.","Dieses Modul behandelt die Themen: • Sammeln von Daten aus Softwarerepositories• Erkennenvon Linkszwischenverschiedenen Datenpunk ten, zum Beispiel Commits und Issues. • Softwaremetriken • Sammeln von Daten über Softwarefehler • Fehler- und Rauschquellen in den Daten • Soziale Netzwerke in der Softwareentwicklung • Qualitatives codieren von Daten • Analyse von Daten aus Softwarerepositories. — This module covers the following topics: • Collection of data from software repositories • Detection of links between data points, e. g. , commits and issues • Collection of data about software bugs • Sources of noise within the data • Social networks in software development • Qualitative coding of data • Analysis of data from software repositories",90-minütige Klausur oder mündliche Prüfung (20 Minuten); diegenaue Prüfungsartwirdzu Beginndes Semestersbekannt gegeben. 90-minute written or 20-minutes oral examination; the preci se mode of assessment will be announced at the start of the semester.,"Präsentation mit Tafel und Beamer Presentation with a projector, blackboard",Wird zu Beginn der Vorlesung bekannt gegeben Will be announced at the beginning of the lecture,MSc AI Engineering and MSc Informatik/ Computer Science
6125,AI Engineering Lab,455437,Unregelmäßig Irregular,1 Semester,Herbold,Trautsch,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,5Ü,75 Std. Präsenz + 135 Std. Vor- und Nachbereitung Workload 75 contact hours + 135 hrs independent study and implemen tation,ECTS/Credits: 7,Keine None,"Software Engineering, Introduction to A I Engineering, Advan- ced Topics in Data Science, Python Programming Language",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Die Studierendenerlernendiewichtigstenpraktischen Implika- tionendurchden Einsatzvon Machine Learning Komponentenin einem Softwareprojekten durch die Umsetzung eines Pro jekts. Relevante Aspekte, die durch den Einsatz von Machine Lear ning beeinflusst werden sind unter anderem die Auswirkungenauf die Anforderungsanalyse, Continuous Integration, Soft waretests und das U I Design. Die Studierenden müssen außerdem Machine Learning spezifischen Anforderungen spezi fizieren, umsetzen, und deren Umsetzung überprüfen, unter anderem Fairness, Erklärbarkeit und der Notwendigkeit eines „human-in-the-loop“. Weiterhinmüssendie Komponentendes Projektes evaluiert und überwacht werden können. —The students learn practical implications of combi ning/including machine learning parts in a software project through the implementation of projects. Among others, relevant aspects that are influenced by the use of machine learning that are considered during the projects are the implications for requirements, continuous integration, testing, and U I design. The students learn to specify, imple ment, and validate machine learning specific requirements like fairness, explainabilityora“human-in-the-loop”. Theirfurther evaluate and monitor the components of a project.","Die Studierenden arbeiten in Gruppen und erstellen ein oder mehrere Projekte, welche ein oder mehrere Machine Learning Komponenten beinhalten. Jedes Projekt wird vollständig entwickelt, sodass es eine dem Projektziel entsprechende Nutzeroberfläche oder Programmierschnittstelle gibt. Das Projekt muss die vorgegebene Aufgabe für den Benutzer mit Hilfe der Machine Learning Kom ponenten erfüllen. Die Studierenden präsentieren den Projektfortschritt, die fer tige Anwendung und welche Herausforderungen während der Entwicklung auf welche Art und Weise gelöst wurden. — Thestudentsworkingroups, creatingoneormultipleprojects which use one or multiple machine learning components. Each project is developed to completion, such that there is a user interface of or programming interface suitable to achieve the project goals. The students present their project progress, how they addres sedchallengestheyfacedduringdevelopment, andthefinished product.","Portfolio-Prüfung. Die Elemente des Portfolios sind: Der Quelltext inklusive Dokumentation, eine schriftliche Ausarbei-tung zu den Projektergebnissen (max. 8 Seiten), Präsentationen der Projektergebnisse, sowie ein abschließendes Prüfungs gespräch (max. 10 Minuten) mit jedem Teilnehmenden. Bei Teampräsentationen muss jeder Teilnehmende den Eigenanteil am Projekt darstellen. Zusätzlich werden die Eigen  anteile in der Quelltextdokumentation und der Ausarbeitungschriftlich festgehalten. Details zur Bewertung werden zu Be ginn der Lehrveranstaltung erläutert. Portfolio exam. The portfolio elements are: code with docu mentation, a written report on the outcome of the projects (max. 8 pages), presentations given over the course of thesemester and a final examination conversation (max. 10 mi nutes) with each individual participant. Within the team presentations, each participant showcases her/his own personal contribution to the project. Additionally, participantsdeclareinwrittenformtheirindividualcontributi ons as part of the report and the code documentation. Details on the assessment will be announced at the beginning of the course.",Präsentation mit Beamer Presentation with a projector,Wird zu Beginn der Vorlesung bekannt gegeben Will be announced at the beginning of the lecture,MSc AI Engineering and MSc Informatik/ Computer Science
6140,Exemplary and Effective Programming,413152,Wird vermutlich nicht mehr angeboten Probably not offered anymore,1 Semester,Abbott,Abbott,Englisch English,Modulgruppe „A IS E“ Modulgruppe „A IS E“,1 V+3 P,"56 hours’ lectures & project meetings; Workload 124 hours’ study & project work. • First phase: 4 weeks of lectures (4 hours/week) • Second phase: 10 weeks for individual programming projects: 2 hours/week group progress meeting, and 2 hours/week technical discussions. Projects involve implementing (in C++, using Co Co ALib) advanced algorithms from computer algebra and/or number theory.",ECTS/Credits: 6,Keine None,"Access to a development environment for C++ (req. C++14 standard) (e. g. g++ & make on linux, clang & make on Ma- c OS, Cygwin environment on Microsoft) Mastersstudents:accesstoprofilingtools(e. g. gprof, valgrind and kcachegrind) Basic knowledge of procedural programming & classes (e. g. C++, Java or Python).  Basic algebra: finite fields, polynomial rings. Recommended: basic algebra & number theory, computer al gebra. Not required: numerical analysis.","Verwendbarkeit in weiteren Bachelor Mathematik, Master Informatik, Master Computa Studiengängen tional Mathematics Bachelor Mathematics, Master Computer Science, Master Computational Mathematics","Kenntnisse / Skills/Knowledge Participants acquire experience programming in a team on an established body of software: how and when to interact with other team members (incl. bug-tracking tools); softwarequality guarantees (e. g. exception-safety, thread-safety); whe re and how to “optimizeän implementation; how to documentprogram code, and how to read and interpret existing do cumentation; design of efficient and effective data-structures (i. e. “classesïn C++). Fähigkeiten / Abilities • Ability to work in an established team, planning and understanding different working roles. • Abilitytogiveconstructivecriticismtootherteammem bers, and ability to accept constructive criticism from other team members. • Ability to faithfully represent advanced mathematical structures through programming object classes. • Abilitytowritehighquality, maintainablesoftwarelibra rycodewithdocumentation; incl. accuratelydelineating input conditions and output guarantees. • Ability to implement proper, comprehensive error hand ling (e. g. avoiding memory leaks, corrupt structures, dangling references, etc). • Abilitytousecompilationbuildsystems, andunderstand error messages. • Ability to design thorough test suites (often in parallel with development and debugging). • (Master) Ability to determine where and how to “opti mize”programcode(incl. understandingtrade-offs, and when not to “optimize”) Kompetenzen / Competencies • Team membership: effective inter-communication. • Effective interface/A PI design (esp. ease of use). • Effective development (and debugging).  • Effective documentation writing. • Effective reading & understanding of source code writ ten by others. • Effective & safe use of on-line resources (e. g. cpprefe rence, B OO ST, Stack Overflow). • Master only - Effective “optimization""(e. g. via profi ling).","Using C++ as a vehicle, participants acquire experience pro- gramminginateamonanestablishedbodyofsoftware:name- ly Co Co ALib, an open-source C++ library for computationsin commutative algebra, which already includes several fun damental data-structures and algorithms. Building on top of the foundations of Co Co ALib, students are required to designand develop efficient, robust implementations of advanced al gorithms from the realms of computer algebra and/or number theory. They will aspire to achieving quality high enough to permit incorporation into the Co Co ALib library. Students gain practical knowledge: how and when to interact with other team members (incl. bug-tracking tools); software quality guarantees (e. g. exception-safety, thread-safety); how to document program code, and how to read and interpretexisting documentation; design & testing of efficient and ef fective data-structures (i. e. ""\classesïn C++). Masters only: where and how to ""\optimizeän implementation (incl. using specific profiling tools).","Finaloralpresentation 30min(incl. demo):Presentwhatwas achieved, andjustifydesigndecisions(withsupportfromprofi- lingtoolsfor Mastersstudents). Ifimplementationincomplete, explain why. Potentially give ideas for future development. Deliver (electronic copy) source code of implementation & test suite. Deliver (electronic copy) documentation: both for users and for maintainers; helpful examples.",-,"Kreuzer & Robbiano Computational Commutative Algebra (vols 1, 2)H. Cohen ACoursein Computational Algebraic Number Theo ry V. Shoup A Computational Introduction to Number Theory and Algebra www. shoup. net S. Meyers Effective C++ (book series)",MSc AI Engineering and MSc Informatik/ Computer Science
6141,Komplexitätstheorie,482211,Jedes Wintersemester Every winter semester,1 Semester,Müller,Müller,Englisch English,Modulgruppe „A EM M“ Modulgruppe „A EM M“,4 V + 2Ü,"60+30 Präsenz, 90+90 Eigenarbeitszeit Workload 60+30 contact hours, 90+90 independent study",ECTS/Credits: 9,Keine None,"Theoretische Informatik I, Mathematische Logik Theoretical Computer Science I, Mathematical Logic","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Die Vorlesungisteine Einführungindas Pversus NP Problem und die es umgebende Theorie. Die Studierenden lernen • algorithmische Ressourcen wie Laufzeit, Speicherplatz, Nichtdeterminismus, Alternierung oder Randomisierung von Algorithmen abzuschätzen. • die inherente Komplexität gegebener Berechnungsprobleme zu erkennen und via zentraler Komplexitätsklas  sen zu klassifizieren. • theoretische Resultatezur Strukturdieser Komplexitäts klassen. — The course offers an introduction to the P versus N P problem and its surrounding theory. Students learn• to estimate algorithmic resources like runtime, memory, nondeterminism, alternation or randomness of algo rithms. • to classify computational problems according to their inherent complexity and via complexity classes. • theoretical results concerning the structure of these complexity classes.","Turingmaschinen (Hilbert, Gödel, Turing), Zeit (P, Zeit- hierarchie, Schaltkreisfamilien), Nichtdeterminismus (N P, nichtdeterministische Zeithierarchie, Cooks Theorem, N PVollständigkeit Beispiele und Theorie, Ladner’s Theorem, Levin Optimalität), Platz (L, N L, P SP AC E, Savitchs Theo rem, Immerman-Szelepcsényi Theorem), Alternierung (co NP, U P, Falltürfunktionen, Polynomialzeithierarchie, Orakel, timespace trade-offs), Schaltkreisgrösse (Nichtuniformität, Karp Lipton Theorem, Shannons Theorem, Hastads Switching Lemma), Randomness (arithmetische Schaltkreise, R P, B PP, po lynomial identity testing, Sipser-Gacs Theorem) —Turing machines (Hilbert, Gödel, Turing), Time (P, time hierarchy, circuit families), Nondeterminism (N P, nondeterministic time hierarchy, Cook’s Theorem, N P-completeness ex amplesandtheory, Ladner’stheorem, Levinoptimality), Space (L, N L, P SP AC E, Savitch’s theorem, Immerman-Szelepcsényitheorem), Alternation (co NP, U P, trapdoors, polynomial hier archy, oracles, time-space trade-offs), Size (non-uniformity, Karp-Lipton theorem, Shannon’s theorem, Hastad’s switchinglemma), Randomness (arithmetical circuits R P, B PP, polyno mial identity testing, Sipser-Gacs theorem)","Je nach Teilnehmerzahl mündliche Prüfung (ca. 30 Minuten) oder Klausur (120 Minuten). Die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 120-minute written or oral exam of about 30 minutes, de pending on the number of participants. The precise mode of assessment will be announced at the start of the semester.",Tafel Blackboard,"Arora, Barak, Computational Complexity: A Modern Ap- proach, Cambridge University Press, 2009. Papadimitriou, Computational Complexity, Addison-Wesley, 1995.",MSc AI Engineering and MSc Informatik/ Computer Science
6142,Fortgeschrittene Komplexitätstheorie,472710,Unregelmäßig Irregular,1 Semester,Müller,Müller,Englisch English,Modulgruppe „A EM M“ Modulgruppe „A EM M“,2 V + 2Ü,"60 Std. Präsenz+120 Std. Übungen, Nachbereitungder Vor- Workload lesung, Prüfungsvorbereitung 60 contact hours + 120 hrs Exercises, independent study and exam preparation",ECTS/Credits: 6,Keine None,Komplexitätstheorie oder Theoretische Informatik I I Computational Complexity Theory or Theoretical Computer Science I I,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Students learn about advanced topics in computational com- plexitytheory. Inparticulartheylearnvariousmethodstoprovelower bounds on circuit size. These include random restricti ons and polynomial approximations. These broadly draw from  techniques from combinatorics, stochastics and algebra.","The course treats advanced topics in computational comple- xity theory, it focusses on circuit lower bounds: Hastad’s ex-ponential lower bound for bounded depth circuits via the ran dom restriction method, Razborov-Smolensky’s lower boundfor such circuits with modulo counting gates via the approximation method, and Razborov’s lower bound for monotone circuits. However, for general circuits not even superli near lower bounds are known today for explicit functions, and circuit complexity has been dubbed ""complexity theory’s Waterloo""(Arora-Barak). Meta-analyses show that superpolynomial lower bounds are unreachable by the approximation method (Razborov) or so-called natural proofs (Razborov Rudich). As an algorithmic application of hardness hard wetreat pseudorandom generators and derandomization, in par ticular the Nisan-Wigderson generator. The course is a continuation of Computational Complexity Theory. Knowledge of e. g. Theoretical Computer Science I I is sufficient for a large part of the material, and students with thisbackgroundarewelcome. Theyareassistedincopingwith eventual extra material.","Je nach Teilnehmerzahl mündliche Prüfung (ca. 30 Minuten) oder Klausur (90 Minuten). Die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 90-minutes written exam or 30 minutes oral exam, dependingon the number of participants. The precise mode of assess ment will be announced at the start of the semester.",Tafel Blackboard,"Arora, Barak, Computational Complexity: A Modern Ap- proach, Cambridge University Press, 2009.",MSc AI Engineering and MSc Informatik/ Computer Science
6143,Constraint Satisfaction Problems,472720,Unregelmäßig Irregular,1 Semester,Müller,Gaysin,Englisch English,Modulgruppe „A EM M“ Modulgruppe „A EM M“,2 V + 2Ü,"60 Std. Präsenz+120 Std. Übungen, Nachbereitungder Vor- Workload lesung, Prüfungsvorbereitung 60 contact hours + 120 hrs Exercises, independent study and exam preparation",ECTS/Credits: 6,Keine None,Komplexitätstheorie oder Theoretische Informatik I I Computational Complexity Theory or Theoretical Computer Science I I,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics",Studentslearnhowtomodelcomputationalproblemsas Cons- traint Satisfaction Problems. They learn general methods todesignalgorithmsfortheirefficientsolutionortodiscerntheo retical reasons for their intractability. They learn tools from universal algebra underlying these techniques.,"A Constraint Satisfaction Problem (C SP) asks to decide whe- ther there is an assignment to given variables, ranging over acertain domain, that satisfies a given set of constraints. Equivalently, this asks for a homomorphism between given struc tures. A famous example is the satisfiability problem for the Boolean domain (S AT). The story of C SPs started 50 years ago, and during the last 25 years C SPs play a prominent role throughout computerscience. On the one hand, they allow to model a wide va riety of combinatorial problems (in mathematics, computer science, artificial intelligence. .. ) in a natural and faithful way. On the other hand, they come together with general algo rithmic techniques for their solution, or general reasons for their computational hardness. These techniques are based on universal algebra.","Mündliche Prüfung, ca. 30 Minuten. Oral examination, ca. 30 minutes.",Tafel Blackboard,-,MSc AI Engineering and MSc Informatik/ Computer Science
6144,Model Theory,482201,Alle vier Semester Every four semester,1 Semester,Müller,Müller,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,"60 + 30 Std. Präsenz, 120 + 60 Std. Eigenarbeitszeit Workload 60 + 30 hrs presence, 120 + 60 hrs self study",ECTS/Credits: 9,Keine None,Grundlegende Kenntnisse aus der Mathematischen Logik Basic knowledge of mathematical logic,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics",After the course the students are able to • understand the interplay between formal axioms and their models • comprehend important model constructions • analyze theories and model classes • apply model theory to algebra,The following topics will be covered:  • Consequences of Gödel’s completeness theorem • Model constructions • Properties of classes of models and theories • Stability • Applications to algebra,120-minütige schriftliche Prüfung oder mündliche Prüfung (ca. 30 Minuten); die genaue Prüfungsart wird zu Semester- beginn bekannt gegeben. 120-minute examination or 30-minute oral examination. The precise mode of assessment will be announced at the start of the semester.,"Tafel, Overhead, Beamer Projector, blackboard","A. Prestel: Einführung in die Mathematische Logik und Mo- delltheorie. Vieweg, 1986. P. Rothmaler:Einführungindie Modelltheorie. Spektrum Aka demischer Verlag, 1995. W. Hodges: A shorter model theory. Cambridge University Press, 1997. D. Marker: Model Theory: An introduction. Springer, 2002. K. Tent, M. Ziegler: A course in Model Theory. Cambridge University Press, 2002.",MSc AI Engineering and MSc Informatik/ Computer Science
6160,Cooperative Autonomous Vehicles,455393,Wird vermutlich nicht mehr angeboten Probably not offered anymore,1 Semester,Vinel,Vinel,Englisch English,Modulgruppe „A IA“ Modulgruppe „A IA“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Grundlagen der Wahrscheinlichkeitstheorie Basics of probability theory,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Students acquire basic knowledge about cooperative automa- ted/autonomousvehiclesaswellasadvanceddriverassistancesystems. Theylearnabouttheconceptsofcooperativeawaren ess, collectiveperception, andcooperativemaneuvering. Theybecomefamiliarwithinter-vehicularcommunicationtechnolo  gies. Fähigkeiten / Abilities Students acquire the abilities to apply discussed techniquesfor the performance evaluation of contemporary vehicle-to everythingcommunicationsstandards. Theyareabletodesign protocols to support cooperative autonomous driving given specified application requirements and to assess cooperative autonomous driving scenarios in terms of their safety. Kompetenzen / Competencies Students learn to classify computation, communication anddecision-makingarchitecturesforcooperativeautonomousve hicles, evaluate advantages and disadvantages of cooperative maneuvering approaches, to select appropriate methods for the analysis of inter-vehicular communication protocols.","The module includes the topics on vehicular automation le- vels, cooperative awareness and decentralized environmental notifications, collective perception, cooperative maneuvering, vehicularplatooning, cooperativevideosystems, intelligentintersections, vehicletomobileedgecomputingserverconnectivity, 5 G vehicular communication paradigms, I TS-G5 commu nication standards, age-of-information and semantics aware communications.",90min Klausur 90min written exam,"Präsentation mit Beamer, Tafel Presentation with projector, blackboard",Nach Ansage in der Vorlesung Announced during the lecture,MSc AI Engineering and MSc Informatik/ Computer Science
6171,Data Visualisierung,471760,Jedes Sommersemester Every summer semester,1 Semester,Heinzl,"Heinzl, Gall",Englisch English,Modulgruppe „A IM“ Focus „A IM“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Grundlagen der Informatik, Software Engineering, Program- mierung I + I IFoundationsof Computer Science, Software Engineering, Pro gramming I+I I",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"After successful completion of the course, students are able tounderstandadvancedtheoreticalconceptsofdatavisualiza-tion. Furthermore, students can implement specific program  ming tasks resulting from a scientific article.","Data Visualization consists of a theoretical lecture part and a practical exercise part. The lecture part on Data Visualization contains of a series of lectures which take place throughout the semester. In these lectures advanced data visualization topics will be covered, such as visualization of graph data or spatio-temporal data, immersiveanalytics, crossvirtualityanalyticsorvisualanalysisof non-destructive testing data in material sciences. The lecture introduces bridging data visualization concepts and fur ther covers the following aspects in two parts: 1) Revisiting Important Visualization Areas:• Scientific Visualization comprises volume and flow visualization. Volume visualization on the one hand is focused on direct and indirect techniques but also explo res underlying techniques such as ray casting for directvolume rendering, simple and advanced transfer functions, as well as iso-surfacing for indirect volume ren dering. Flow visualization on the other discusses visual metaphors and techniques for direct and indirect flow visualization. Advanced concepts in terms of topology visualization will be discussed. • Information visualization: While information visualiza tion targets the visualization of abstract data, with a specialization on graph data and networks. • Visual analytics and visual data science seek to facilita te analytical reasoning by interactive visual interfaces. It involves the use of visualization and interaction techniques to explore and analyze large, complex, and dyna mic datasets, with the goal of gaining insights, making discoveries, and supporting decision making. 2) Advanced Visualization Concepts: • Visualization Design:Visualization Design:Thischapterexplores models for visualization design in order to ju stify the choices made when applying vis techniques ina (novel) application area, e. g. , relating the visual en codings and interaction techniques to the requirements of the target task. • Biomedical visualization encompasses novel topics and approaches to enhance the understanding of biologicaland medical concepts and data. It involves data visuali zation of medical images (such as M RI or C T scans) or biologicalprocesses(suchasthemovementofmolecules in the body). • Tensor visualization is the process of representing ten sors (multi-dimensional arrays of data) in a visual for mat. This chapter will present visualization concepts mainly focusing on tensors of second order as well as respective abstraction concepts. Novel tensor analysis techniques, concepts for analyzing tensor field topology, and new tensor visualization methods will be discussed • Immersive(I A)and Cross Virtuality Analytics(X VA)arenoveltopicsinvisualizationrequiringsuitablevisualme taphors and interaction concepts for in depth analyses. I A is using engaging, embodied analysis tools to sup port data understanding and decision making. X VA isconcerned with systems for data visualization and ana lysisthatseamlesslyintegratedifferentvisualmetaphors and devices along the entire R VC to support multipleusers with transitional and collaborative interfaces ana lysisthatseamlesslyintegratedifferentvisualmetaphors and devices along the entire R VC to support multiple users with transitional and collaborative interfaces. • Visual Computing in Materials Science: Visual compu ting has become highly attractive for boosting researchendeavors in the materials science domain. Using visu al computing, a multitude of different phenomena may now be studied, at various scales, dimensions, or using different modalities. This was simply impossible. Visualcomputing techniques generate novel insights to understand, discover, design, and use complex material sys tems of interest. • Visualizationand Decision-Making Design Under Uncer tainty:Visualizationisacorecomponentofanydecisionor risk analysis process. Respective tools for this purpo se are becoming increasingly accessible. In addition, the visual literacy of the general public has been increasing due to the pervasiveness of visualizations in everyday life. As the appetite for decision making tools grows, so does the need to convey error, confidence, missing, or conflicting data visually. The exercise part will pose a “V IS Challenge” to the students. It requires the students to propose and implement their solu tions to given challenges in visualization. This V IS Challengeconsists of the implementation of a state-of-the-art visualiza tion technique based on a scientific article. Students choose from a shortlist of given scientific papers (i. e. , 2-3 recent highimpact articles). The students first need to read and under stand the given article. They need to present their proposed conceptswithrespecttothearticle’smainideasintheformof  paper prototypes. After a feedback loop the implementation will starts. There are no requirements regarding programminglanguages, however recommendations on languages, tools, li braries, etc. will be given. The exercise is ideally implemented in groups of two. The exercise is continuously supported by a tutor. For a positive grade, both lecture and exercise must be completed positively!","Portfolio Thegradefor Data Visualizationwillbebasedonthepractical implementation work and the theoretical knowledge. Theperformanceevaluationoftheexercisecoursefocusseson the implemented programming tasks in terms of the selected visualization paper. For a positive assessment, the students must present the selected article and their implementationconcepts. The implementation quality, functionality, and usa bility as well as the documentation of code and functionalitywill be evaluated. Finally, the students will present and demonstrate their final implementation. The score for the gra ding results is given as follows:• 1st presentation of the article incl. implementation con cept (10 points) • Implementationofthearticle’sunderlyingtechnique(45 points) • Functionality and usability (15 points) • Documentation of code + functionality (10 points)• 2nd presentation and demonstration of the implemen tation (20 points) The lecture part will be evaluated in an oral exam (approx. 15min) of the presented lecture content, in which the achieve ment of the teaching objectives will be checked. For a positive evaluation of Data Visualization, both exercise and lecture have to be completed positively.",The material is organized in thematic groups and presented by means of electronic slides. A practical design and imple- mentation project allows students to develop their analytical skills and deepen their programming knowledge.,"Chen, Hauser, Rheingans, Scheuermann: Foundations of Data Visualization, 2019 Telea: Data Visualization – Principles and Practice, Second Edition A K Peters Verlag, 2014. Munzer: Visualization Analysis and Design, A K Peters Verlag, 2014. Hansen, Johnson: The Visualization Handbook, 2005 Hansen, Chen, Johnson, Kaufman, Hagen: Scientific Visualization - Uncertainty, Multifield, Biomedical, and Scalable Vi sualization, 2014 Kim Marriott, Falk Schreiber, Tim Dwyer, Karsten Klein, Nathalie Henry Riche, Takayuki Itoh, Wolfgang Stuerzlinger, Bru ce H. Thomas, Immersive Analytics, 2018 Keim, Kohlhammer, Ellis, Mansmann: Mastering the Informa tion Age - Solving Problems with Visual Analytics, 2010 Ward, Grinstein, Keim: Interactive Data Visualization: Foun dations, Techniques, and Applications, 2010. Ware: Information Visualization, Second Edition: Perception for Design, 2004 Aigner, Miksch, Schumann, Tominski: Visualization of Time Oriented Data, Springer Verlag, 2011 Further materials in the lecture slides",MSc AI Engineering and MSc Informatik/ Computer Science
6172,Immersive Analytics PN xxxxxx,Not found,Jedes Wintersemester Every winter semester,1 Semester,Heinzl,Heinzl,Englisch English,Modulgruppe „A IM“ Focus „A IM“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Data Visualization, Grundlagen der Informatik, Software En- gineering, Programmierung I + I IData Visualization, Foundations of Computer Science, Soft ware Engineering, Programming I+I I",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"At the end of the course students will be able to understand theoretical concepts of immersive analytics. Furthermore, stu- dents can implement specific programming tasks resulting from a scientific topic or article.","Immersive Analytics consists of a theoretical lecture part and a practical exercise part. The lecture part contains of a series of lectures which take place throughout the semester. In these lectures, theoreti cal and advanced immersive analysis and visualization topics will be covered. The lecture introduces covers the following aspects: • Introduction to Immersive Analytics: Students learn the basic principles of immersive analytics together its goals and opportunities, some historical context as well as the broad research agenda of this field. A review on the terms of immersion and engagement is given. • The value of 3 D in information visualization: While In formation visualization is typically used in conventional 2 D displays and modern virtual reality in for 3 D data, this part explores potential benefits for immersive ana lytics in information visualization settings. • Multisensory immersive analytics introduces conceptsand backgrounds on visual representations, sonificati on and auralization, haptic displays, smell/olfaction, aswell as taste/gustation. Furthermore, the design of re spective systems will be reviewed integrating immersiveanalytics and modalities of non-visual immersive analy tics. • Interaction in immersive analytics is a major componentwithin the analysis workflow. Basic opportunities, requirements and tasks will be reviewed in order to culmi nate in natural user interfaces (N UP) and post W IM P (windows, icons, menus, pointer) interaction as well as respective designs and setups. • Immersivehumancenteredcomputationalanalytics:He re, the role of humans in a human-machine cooperativeanalysis will be addressed by first reviewing the clas sic loop of sensemaking in visual analytics, collaborativehumans-machineanalysisandfinallyrelateddesignprin ciples. • Immersive visual data stories: Visual data driven stories areanimportantmeansforcommunicatinginformation. Here, the challenges and opportunities of immersion arediscussed considering games research and related inter action concepts. • Situated analytics: The concept of situated analytics isintroduced in this section, employing data representa tions organized in relation to germane objects, places  or persons for the purpose of understanding, sense- and decision making. • (Collaborative) cross virtuality analytics enables visual analytics to use transitional and collaborative interfaces interconnecting different stages in the reality–virtuality continuum to seamlessly integrate different devices andsupportmultipleusers. Insightsareprovidedintorespec tive visualization and interaction techniques. • Applications of Immersive Analytics: Finally, applications of immersive analytics various domains are discus sed, such as life and health sciences or applications inengineering from materials science, production enginee ring towards sustainable cities and cultural heritage. Theexercisepartwillposean„Immersive Analytics Challenge“ to the students. In addition to the initial task to be completed intheformofstandardexercises, italsorequiresproposingand implementing own solutions to given challenges in the field ofimmersive analytics. These challenges focus on the implemen tation of state-of-the-art techniques typically based on recentscientific articles. The students need to present their propo sed concepts with respect to the articles’ main ideas. After a feedback loop the implementation starts. Programming skills are thus mandatory and previous knowledge of C# and Unity is advantageous. An introduction to Unity will be offered in the tutorial of the course. Furthermore, the exercise course is typically implemented in groups of two and continuously supported by a tutor.","The grade for Immersive Analytics will be based on the prac- tical implementation work and the theoretical knowledge. Part 1 (50%): Portfolio (Practical Implementation) Theperformanceevaluationoftheexercisecoursefocusseson theimplementedprogrammingtasksintermsofthe Immersive Analytics Challenge. For a positive assessment, the studentsmustpresenttheirimplementations. Theimplementationqua lity, functionality, and usability as well as the documentationof code and functionality will be evaluated. Finally, the stu dents will present and demonstrate their implementation. The score for the grading results is given as follows: • Presentation of initial exercises incl. concept regarding the immersive analytics challenge• Presentation and demonstration of the final implemen tation • Implementation of the proposed techniques • Functionality and usability  • Documentation of code Part 2 (50%): Oral exam or written exam (Theoretical Knowledge) The lecture part will be evaluated in an oral exam (ap prox. 20 min) of the presented lecture content or in a written exam (90 minutes), depending on the number of participants, in which the achievement of the teaching objectives will be checked. The students will be informed about the exact type of exam at the beginning of the semester. To pass the examination, both assessment components ha ve to be passed.",Thematerialisorganizedinthematicgroupsandpresentedby means of electronic slides. Initial exercise tasks together with a practical design and implementation project allows studentsto develop their analytical skills and deepen their program ming knowledge.,"• Marriott, Dwyer, Riche, Stuerzlinger: Immersive analy- tics, 2018 • Min Chen, Helwig Hauser, Penny Rheingans, Gerik Scheuermann, Foundations in Data Visualization, 2019• Fröhler, B. , Heinzl, C. (2022), A Survey on Cross Virtuality Analytics. Computer Graphics Forum, 41: 465-494. https://doi. org/10. 1111/cgf. 14447 • Unraveling the Design Space of Immersive Analytics: A Systematic Review. I https://doi. org/10. 1109/T VC G. 2023. 3327368 • Grand Challenges in Immersive Analytics. https://doi. org/10. 1145/3411764. 3446866 • Survey of Immersive Analytics. https://doi. org/10. 1109/tvcg. 2019. 2929033 • Immersive Analytics of Multidimensional Volumetric Data. https://doi. org/10. 34726/hss. 2021. 86329 Further materials in the lecture slides",MSc AI Engineering and MSc Informatik/ Computer Science
6179,Project in Visual Computing,455419,Normalerweise jedes Semester Typically every semester,1 Semester,Heinzl,Heinzl,Englisch English,Modulgruppe „A IM“ Focus „A IM“,2Ü+2 P,60 Std. Präsenz + 120 Std. Vor- und Nachbereitung Workload 60 contact hours + 120 hrs preparation and follow-up,ECTS/Credits: 6,Keine None,"Grundlagen der Informatik, Software Engineering, Program- mierung I + I IFoundationsof Computer Science, Software Engineering, Pro gramming I+I I",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"After positive completion of the course, students are able to perform and realize a reasonably sized software project in the areaofvisualcomputingorvisualization. Studentswillbeable to plan and execute respective tasks and implement visual computing techniques and methods in a prototypic system. After this practical course they are able to. ..  • analyze problems in the field of visual computing • design effective visualization concepts to solve them • implementtheseconceptsusingstate-of-the-artlibraries • create evaluation designs of visualization techniques","Visual computing integrates computer science disciplines de- aling with the acquisition, the analysis and the synthesis of (visual) data using computing resources in applications suchas industrial quality control, medical image and data analysis, robotics, multimedia systems, computer games, etc. . Asi de others, visual computing thus covers aspects from image processing, visualization, computer graphics, computer vision, virtual and augmented reality, pattern recognition, machine learning, as well as human computer interaction. Thisprojecttargetstheimplementationofalarger, technicallyoriented project in the field of visual computing or visualiza tion. The topics and contents of the project will be agreed upon individually with the supervisor and should cover a topic of mutual interest in visual computing. Didactic approach: In regular meetings with the supervisor (usually every one to two weeks), the individual steps of the software project to be completed are discussed. This includes: • Creation of a specification sheet • Rough draft • Detailed design • Implementation details • Test scenarios • Creation of results • Completion of project documentation • Final meeting • Presentation and discussion of the results It is intended that the assignment will be worked on in groups of two students.","Portfolio. The following items will be evaluated: Implementation and quality of the software project Presentation of the software project Discussion and defense of the chosen approach Evaluation of oral and written performance in the submissi on discussion, demonstration of the developed prototype and project documentation.",Presentations,Originial works,MSc AI Engineering and MSc Informatik/ Computer Science
6195,Integraltransformationen und Computertomographie,482301,Unregelmäßig Irregular,1 Semester,Sauer,Sauer,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Analysis I+I I, Lineare Algebra, Bildverarbeitung Analysis I+I I, Linear Algebra, Image Processing","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden erwerben Kenntnisse der mathematischen Grundlagen der Integraltransformationen und deren Anwen dunginder Computertomographie. Siekennendiewichtigsten Verfahren in Theorie und numerischer Umsetzung.  —The students acquire knowledge of the mathematical foun dations of Integral Transforms and Computed Tomography. They know the most important algorithms in theory and nu merical realization. Fähigkeiten / Abilities Die Studierenden besitzen die Fähigkeit, die Argumente der Beweise nachzuvollziehen, und gegebenenfalls anwendungsbezogen weiterzuentwickeln und können auf der Basis dieses theoretischen Verständnisses numerische Verfahren ent wickeln. — The students have the ability to follow the arguments of theproofs, to extend them in an application context and to deve lop numerical algorithms based on their understanding of the theory. Kompetenzen / Competencies Die Studierenden besitzen die Kompetenz, komplexe mathematische Konzepteineinem Anwendungsgebietpraktischum zusetzen. —The students have the competence to provide a practical rea lization of complex mathematical concepts in the context of an application.",The Fourier transform; The Radon Transform; Fundamentals of Signal Processing; Filtered Backprojection; Algebraic Re- construction Techniques; Inverse Problems; Beamforms and Scan Geometries,90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 90-minute written or approximately 20-minutes oral examina tion; the precise mode of assessment will be announced at the start of the semester.,"Präsentation mit Tafel und Beamer Presentation with a projector, blackboard","Natterer, Computed Tomography Helgason, Todd Quinto, Inverse Problems",MSc AI Engineering and MSc Informatik/ Computer Science
6205,Energy Informatics I,455415,Unregelmäßig Irregular,1 Semester,de Meer,de Meer,Englisch English,Modulgruppe „A IA“ Focus „A IA“,2 V + 2Ü,60h Präsenz+50hÜbungslösungen+70hfür Vorlesungsthe- Workload men und Prüfungsvorbereitung 60 hours of presence + 50 hours for solution to exercises + 70 hours for lecture topics and exam preparation,ECTS/Credits: 6,Keine None,"Software Engineering, Computer Networking, I T Security",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Understanding of the relationship between I T and energy sys-tems including resource utilization and fundamental metho dologies, concepts, protocols and reference architectures used in the context of smart grids: • Understanding the relationship and responsibilities of  actors in energy economics for use case analysis • Studying and modelling of variable renewable energy sources, forecast and power flexibility • Knowledge of the communication architectures for smart grids, especially detailed understanding of the smart grid architecture model and how to apply it with model-driven development • Understandingofthemainprotocolsandstandardsusedfor information gathering, data analysis and communi cation in smart grids Fähigkeiten / Abilities Selecting and applying appropriate methods for modelling renewable energy sources and flexibility from e. g. battery stora ges or combined heat and power plants. Designing the overallarchitecture of smart grid applications with a focus on exchangeofinformationandcommunicationinfrastructuretechnologies using the Smart Grid Architecture Model. Identifica tion of the most important standards for the communication infrastructure of a smart grid. Application of software tools for grid monitoring, distributed smart grid control, and grid management. Kompetenzen / Competencies Classification of methods and techniques for modelling rene wable energy sources and flexibility in the smart grid. Deep understanding of the communication architectures used for the smart grid: motives behind energy business actors andcomponents, available standards, and pros and cons of diffe rent architectures and communication protocols for different applications in the smart grid. Understanding different smart grid applications in the context of the smart grid architecture model.","In this lecture, we focus upon what differentiates the smart grid from the ""traditional""power grid as it has been known for the last century. Furthermore, we provide the students with a fundamental understanding of energy economics, smart gridarchitecture and a focus on the communication and networ king sides. We will focus on the question how I CT can serve the energy system and how the different parts of the smart grid can be modelled appropriately. In this lecture, we discuss three main parts: First, we discuss the evolution of energy systems and theirmarket actors. This includes challenges and solution approa ches on integrating renewable energy sources in a smart grid using modelling of both energy sources and models for power flexibility such as storage systems or electric vehicles.  Part two introduces the smart grid architecture model (S GA M), which helps us to allocate the smart grid actors and components, as well as to depict the requirements of smartgrid applications on the information and communication technology and standards. The application of the S GA M on a se lected smart grid use case deepens its understanding. In the third part, we discuss different communication tech nologies that can be used in the context of the smart grid. Finally, we focus on several smart grid use cases for which a review of relevant communication standards is conducted. Thereby, relevantprotocolsarediscussedindetailandareana lyzed in terms of applicability, communication technology and I T-security.","90 minutes written or 20 minutes oral exam (in English) or portfolio. The students will be informed about the exact type of exam by the beginning of the semester. A portfolio examination may contain tasks that relate to a project that uses the smart grid architecture model as basis and may consist of: • Written or oral partial examination • Documented and executable source code for tasks with tools • Live demonstration of task solutions • Summary of relevant research papers with topics of the module • Technical report • Ongoing technical sub-reports for a final summary into a complete document • Presentation of created material with use of suitable presentation techniques, e. g. Power Point, Live-Coding, Whiteboard, Flipchart The work on the portfolio will be carried out parallel to the lectureandthefinalsubmissionoftheportfoliowilltakeplace no later than 4 weeks after the end of the lecture period. The lecturer will announce the exact requirements for the portfolio at the beginning of the course.","Präsentation mit Overheadprojektor, Tafel Presentation on projector, blackboard","Christian Neureiter. A Domain-Specific, Model Driven Engi- neering Approach for Systems Engineering in the Smart Grid. November 2017 Momoh, James. Smart grid: fundamentals of design and ana lysis. Vol. 63. John Wiley & Sons, 2012. Additional literature will be referenced in the lecture material",MSc AI Engineering and MSc Informatik/ Computer Science
6206,Data on the Web,455417,Unregelmäßig Irregular,1 Semester,Scherzinger,Nečaský,Englisch English,Modulgruppe „A IA“ Focus „A IA“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Datenbanken und Informationssysteme, Algorithmen und Da- tenstrukturen, Web und Data Engineering Databases and Information Systems, Algorithms and Data Structures, Web and Data Engineering","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Thestudentsacquireasystematicunderstandingofpublishing and sharing data on the web. They know basic and advancedmodelsandformatsforrepresentingdataonthewebasknow  ledge graphs, the principles for achieving data interoperability through ontologies, and advanced technologies for querying the data. Fähigkeiten / Abilities The students can identify, understand, and access/query datapublished on the web (R ES T, S PA RQ L). They can also pu blishtheirdatainaninteroperablewayexploitingexistinganddesigningtheirontologiestodescribethedata. Theycancom bine data from different data sources into a single knowledge graph and query it. Kompetenzen / Competencies The students have the competence to select appropriate tech nologiesforpublishingandconsumingdataontheweb, designontologies to describe the data, and design and execute que ries (S PA RQ L) on top of the data.","This module focuses on the principles of sharing data on the web through R ES T and Linked Open Data A PIs. It shows suitable data formats for publishing data on the web, explains the role of ontologies and data vocabularies in improving data interoperability, and presents how to consume data using the S PA RQ L query language.","Teil 1: Mind. 50% der Punkte aus kleinen praktischen Aufga- ben aus den Übungen, z. B. die Arbeit mit einem speziellen System. Die Projektarbeit kann während der Übungen oder im Selbststudium zu Hause erbracht werden. Nicht Teil der Endnote. Teil 2: Eine benotete 60minütige schriftliche Klausur, die die Terminologie und theoretischen Prinzipien prüft. Die Punkte für die Endnote werden wie folgt berechnet:Teil1wirdalsbestanden/unbestandengewertetundmussbe standen werden. Teil 2 wird mit einer Note bewertet. Part1:Atleast50%ofpointsfromsmallpracticalassignments from the labs, i. e. , work with the particular systems. Can be done during the exercises or as homework. Not a part of the final grading. Part 2: A graded 60-minute written examination of termino logy and theoretical principles. The points for the final grade are computed as follows: Part 1 is pass/fail, and must be passed. Part 2 is graded.","Vorlesungen, Präsentation und Demonstrationen mit Projek- tor, Tafel, praktisches Seminar, ein Computerlabor mit einem Webbrowser auf jedem Computer, ein (virtueller) Server mit  einem R DF-Datenbankserver (z. B. Graph DB Free), der von den Computern im Labor zugänglich ist Lectures, presentation and demonstrations with a projector, blackboard, practical seminar, demonstrations with a projec tor, students work on exercises using their own laptops","Tom Heath and Christian Bizer. Linked Data: Evolving the Web into a Global Data Space. Synthesis Lectures on the Se- mantic Web: Theory and Technology, Morgan & Claypool. 2011 Bob Du Charme. Learning S PA RQ L: Querying and Updating with S PA RQ L 1. 1. O’Reilly Media, Inc. 2013 Panos Alexopoulos. Semantic Modelingfor Data. O’Reilly Me dia, Inc. 2020 Mayank Kejriwal, Craig A. Knoblock, Pedro Szekely. Know ledge Graphs (Adaptive Computation and Machine Learning series). M IT Press. 2021",MSc AI Engineering and MSc Informatik/ Computer Science
6208,Machine Learning Control and Optimization,455398,Unregelmäßig Irregular,1 Semester,Wirth,Wirth,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,60+30 Std. Präsenz + 90+90 Std. Eigenarbeitszeit Workload 60+30 contact hours + 90+90 hours lecture and tutorials follow-up and exam preparation,ECTS/Credits: 9,Keine None,"Lineare Algebra I + I I, Analysis I + I I, Gewöhnliche Differenti- algleichungen, Optimierung oder Mathematik in Technischen Systemen I – I II sowie Mathematische Systemtheorie —Linear Algebra I+I I, Analysis I+I I, Ordinary Differential Equa tions, Optimization or Mathematics in Technical Systems I-I II and Mathematical Systems Theory","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden verstehen die grundlegenden Prinzipien der  datenbasierten Regelung dynamischer Systeme. Dazu kennensie Methoden zur Behandlung von Datensätzen und zur datenbasierten Identifikation dynamischer Systeme. Ferner verfügen sie über relevante Techniken der mathematischen Op timierung. Sie sind in der Lage stabilisierende, datenbasierte L QR-Regler zu entwerfen. — The participants are familiar with the fundamental concepts of data-based control. They know methods from data analysis and data-driven system identification of dynamical systems. They are able to apply relevant techniques from optimization. Also they can design stabilizing, data-based L QR controllers. Fähigkeiten / Abilities Die Studierenden beherrschen die Grundsätze der Datenkom pression, sowie der Gruppierung von Daten. Sie sind in der Lage entsprechende Verfahren auf gegebene Datensätze an zuwenden. Zudem können die Studierenden unterschiedliche Verfahren zur Identifikation dynamischer Systeme auf gegebene Datensätze anwenden. Ebenso können sie Regelungsauf gaben datenbasiert formulieren und beherrschen wesentliche Ansätze für den datenbasierten Reglerentwurf. — The participants can analyze given data sets with respect todimensionality reduction and clustering. They can apply dif ferent techniques for data-based system identification. They can design algorithms for these purposes. They are capable of formulating various data-driven control tasks and are able to design appropriate data-based controllers.","Datenkompression, Hauptkomponenten-Analyse, Gruppie- rung, Lloyd Algorithmus, Support-Vector Machines, Kern- Trick, Eigensystem-Realisierungsalgorithmus. Beobachter-Kalman Filter Identifikation. Zusammenhang zwischen Systemidentifikation und der Koop man Operatortheorie. Datenbasierte Regelung, linear-quadratische optimale Steuerung, Dateninformativität, Semi-Definite Programme, sto chastische Gradientenverfahren —Dimensionality reduction, principal component analysis, clus tering, Lloyd’s algorithm, support vector machines, kernel trick, eigensystem realization algorithm. Connection between system identification and Koopman ope rator theory, observer-Kalman filter identification. Data-driven linear-quadratic regulator problem, data informa tivity, semi-definiteprogramming, stochasticgradientdescent",90 min Klausur oder ca. 30 min mündliche Prüfung. Die ge- naue Prüfungsart wird zu Beginn des Semesters bekannt ge- geben. 90-minute written examination or 30-minute oral examinati on. The precise mode of assessment will be announced at the beginning of the semester,"Tafel, Beamer, Vorlesungsskript, Übungsblätter Blackboard, projector presentation, lecture notes, exercise sheets","S. L. Burton, J. N. Kutz:Data-Driven Scienceand Engineering: Machine Learning, Dynamical Systems and Control, Cam- bridge University Press, 2019. De Persis, C. ,Tesi, P. :Formulasfor Data-Driven Control:Sta bilization, Optimality and Robustness, I EE E Transactions on Automatic Control 65 (3): 909 – 924, 2020. van Waarde, H. , Eising, J. , Trentelman, H. , Camlibel, K. : Da ta Informativity: A New Perspective on Data-Driven Analysis and Control. I EE ETransactionson Automatic Control65(11):",MSc AI Engineering and MSc Informatik/ Computer Science
4753,"– 4768, 2020.",Not found,Unregelmäßig Irregular,1 Semester,Scherzinger,Hobulova,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,2 V + 2Ü,60 Std. Präsenz + 50 Std. Übungen + 70 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 50 hrs exercises + 70 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Datenbanken und Informationssysteme Undergraduate database course,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","The aim of the course is to provide an overview of the basic principles of data organization. In the first part, students get acquainted with the basic methods of data storage and file organization types. We will also focus on data structures forefficient access to data, i. e. basic types of hashing and hier archical indexing, including their use in traditional, primarily  relational database systems. In the last part, we will focus on more advanced principles of data organization in the context of spatial distributed databases.","Introduction, organisation of the course. Data storage. R AI D File organisation Hashing in internal and external memory Hierarchical indexing, B-trees Spatial databases Distributed databases","Part 1: 30-minute, written single-choice assessment of terminology and theoretical principles Part 2:60-minute written examination, assessing practical problem solving skills The points for the final grade are computed as follows: Part 1 is pass/fail, and must be passed. Part 2 is graded.","Tafel, Projektor Blackboard, projector","Raghu Ramakrishnan, Johannes Gehrke: Database manage- ment systems (3. ed. ). Mc Graw-Hill 2003. Ausgewählte Forschungsartikel / selected research articles.",MSc AI Engineering and MSc Informatik/ Computer Science
6210,Semantic Data Integration,473270,Unregelmäßig Irregular,1 Semester,Algergawy,Algergawy,Englisch English,Modulgruppe „A IA“ Focus „A IA“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Datenbanken und Informationssysteme, Algorithmen und Da- tenstrukturen, Web und Data Engineering Databases and Information Systems, Algorithms and Data Structures, Web and Data Engineering","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Thestudentsacquireasystematicunderstandinghowtocom- bine and integrate different data sources using a broad rangeof techniques for data integration. During the integration pro  cess, the students will know basic and advanced models andformatsforrepresentingdata, howtoidentifyanddiscoverda ta and semantic heterogeneities across different data sources, the principles for achieving data interoperability through on tologies, and advanced technologies for querying the data. Fähigkeiten / Abilities The students can identify, understand, and access/query different data sources (conjunctive queries, X Query, and S PA RQ L). They can also identify and discover different heterogeneities across data sources, how to resolve these kinds of he terogeneities through schema and ontology matching. They can combine data from different data sources into a mediated schema making use of discovered matches and query it. Kompetenzen / Competencies The students obtain the competency to select appropriate technologiesforidentifyinganddiscoveringdataandsemanticheterogeneities through schema and ontology matching, de sign ontologies to describe the data, and design and execute queries on top of the data.","This module focuses on the principles of data integration des- cribingtheimportanceofdataintegrationindifferentapplica-tions and use cases. Different schemes of integration such vir tual and physical data integration will be covered. The course will further focus on virtual and web data integration. Further topics covered are various aspects of data integration, such asdataandsemanticheterogeneities, schemaandontologymat ching, and the role of semantics and ontologies in improving data integration and data interoperability.",90-minütige Klausur 90-minute written examination,"Vorlesungen, Präsentation und Demonstrationen mit Projek- tor, Tafel, praktisches Seminar, Tool-Demonstrationen über Beamer, Studierende arbeiten an praktischen Übungen an ih ren eigenen Geräten Lectures, presentation and demonstrations with a projector, blackboard, practical seminar, demonstrations with a projec tor, students work on exercises using their own laptops","An Hai Doan, Alon Halevy, Zachary Ives: Principles of Data Integration. Morgan Kaufmann, 2012. Barbella, Marcello, and Genoveffa Tortora. Ä Semi-automatic Data Integration Process of heterogeneous databases. "" Pat tern Recognition Letters (2023). Ulf Leser, Felix Naumann: Informationsintegration. Dpunkt  Verlag, 2007. Luna Dong, Divesh Srivastava: Big Data Integration. Mor gan & Claypool, 2015. Serge Abiteboul, et al: Web Data Management. Cambridge University Press, 2012. Mountantonakis, Michalis, and Yannis Tzitzikas. ""Large-scalesemantic integration of linked data: A survey. "" A CM Compu ting Surveys (C SU R) 52. 5 (2019): 1-40. Jérôme Euzenat, Pavel Shvaiko: Ontology Matching. Sprin ger, 2007. Felix Naumann:An Introductionto Duplicate Detection. Mor gan & Claypool, 2012.",MSc AI Engineering and MSc Informatik/ Computer Science
6211,Management of Scientific Data,472780,Unregelmäßig Irregular,1 Semester,Algergawy,Algergawy,Englisch English,Modulgruppe „A IA“ Focus „A IA“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Datenbanken und Informationssysteme, Algorithmen und Da- tenstrukturen, Web und Data Engineering Databases and Information Systems, Algorithms and Data Structures, Web and Data Engineering","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge The students gain a systematic understanding of the main components of data lifecycle in research data managementstarting from research data planning to data archiving, inte  gration and sharing. During the exploration of research data lifecycle, the students will know basic and advanced modelsand techniques to write a good research data plan, to well de scribeandorganizescientificdatausingdifferentandstandard metadata, to examine scientific data to ensure data quality, and to select suitable stores for data preserving. Fähigkeiten / Abilities Bycompletingthiscourse, studentswillgettoknowthewhole rangeofprocedureswithregardtoresearchdatamanagement, i. e. dataplanning, datacollection, metadatamanagement, da ta preservation, data sharing, re-usability and storage of data, enhancement of visibility and data analysis and synthesis is sues. Kompetenzen / Competencies The students obtain the competency to select appropriatetechnologies to provide well organised, well documented, pre servedandshareddatathatareinvaluabletoadvancescientificinquiry and to increase opportunities for learning and innova tion.","Thismodulefocusesonthemaincomponentsofresearchdata lifecycle, including the followings: • Research data management, in general • Data management plans • Date description and metadata standard • Data organization and data storing • Data quality • Data sharing and reuse • Data integration and analysis • F AI R data principles",60-minütige Klausur 60-minute written examination,"Vorlesungen, Präsentation und Demonstrationen mit Projek- tor, Tafel, praktisches Seminar, Tool-Demonstrationen über Beamer, Studierende arbeiten an praktischen Übungen an ih ren eigenen Geräten Lectures, presentation and demonstrations with a projector, blackboard, practical seminar, demonstrations with a projec tor, students work on exercises using their own laptops","R DA: Research data alliance https://www. rd-alliance. org/ Pietro Pinoli, Stefano Ceri, Davide Martinenghi, Luca Nan- ni: Metadata management for scientific databases. Inf. Syst. 81: 1-20 (2019)Managing Research Data to Unlock its Full Poten tial : https://masterclasses. nature. com/managing-research data/18320206 Wilkinson, M. , Dumontier, M. , Aalbersberg, I. et al. The FA IR Guiding Principles for scientific data management and stewardship. Sci Data 3, 160018 (2016). htt ps://doi. org/10. 1038/sdata. 2016. 18 Research data Oxford: https://researchdata. ox. ac. uk/data management-training Cox, A. M. ,&Pinfield, S. (2014). Researchdatamanagement and libraries: Current activities and future priorities. Journalof Librarianshipand Information Science, 46(4), 299–316. htt ps://doi. org/10. 1177/0961000613492542",MSc AI Engineering and MSc Informatik/ Computer Science
6212,Modern Database Systems,472770,Unregelmäßig Irregular,1 Semester,Scherzinger,Hobulova,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,2 V + 2Ü,60 Std. Präsenz + 50 Std. Übungen + 70 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 50 hrs exercises + 70 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Datenbanken und Informationssysteme Databases and Information Systems,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","The aim of the course is to provide and introduction to the approaches for efficient storing and querying of Big Data. The course will familiarize students with a wide range of related concepts and technologies and provide a deeper insight into new types of database systems. For each type of databases, basic principles and techniques as well as practical examples will be introduced. In the labs, the students will put into ope ration different types of databases and test their functionality using small applications.","The following topics are covered: • Relational data model, relational databases. Historicaloverview of alternative data models and database sys tems. • Introduction to Big Data (history, features, data mo dels). • Basic principles of Big Data Management (C AP Theo rem, distribution, scaling, replication, transactions in a distributed environment, . .. ). • Overview and classification of database systems and technologies for efficient management and processing of Big Data. • Distributed file systems. • Map Reduce - principle, properties, critique, alternative approaches. • No SQ L databases (key / value, column, document). • Graph data and graph databases. • Data with multiple models. Multi-model databases. Po lystores. • S QL language in the world of Big Data. New SQ L data base. • Other types of modern databases (array databases, . .. ).","Teil 1: Mind. 50% der Punkte aus kleinen praktischen Aufga- ben aus den Übungen, z. B. die Arbeit mit einem speziellen System. Die Projektarbeit kann während der Übungen oder im Selbststudium zu Hause erbracht werden. Nicht Teil der Endnote. Teil 2: Eine benotete 60-minütige schriftliche Klausur, die die Terminologie und theoretische Prinzipien prüft. Die Punkte für die Endnote werden wie folgt berechnet: Teil 1 wird als bestanden/unbestanden gewertet, und muss bestanden werden. Teil 2 wird mit einer Note bewertet. Part1:Atleast50%ofpointsfromsmallpracticalassignments from the labs, i. e. , work with the particular systems. Can be done during the practicals or as homework. Not a part of the final grading. Part 2: A graded 60-minute written examination of termino logy and theoretical principles. The points for the final grade are computed as follows: Part 1 is pass/fail, and must be passed.  Part 2 is graded.","Tafel, Projektor Blackboard, projector","Pramod J. Sadalage-Martin Fowler:No SQ LDistilled:A Brief Guide to the Emerging World of Polyglot Persistence Eric Redmond - Jim R. Wilson: Seven Databases in Seven Weeks: A Guide to Modern Databases and the No SQ L Move ment Sherif Sakr - Eric Pardede: Graph Data Management: Tech niques and Applications Jeffrey Dean and Sanjay Ghemawat: Map Reduce: Simplified Data Processing on Large Clusters, Google, Inc. Hadoop: The Definitive Guide, by Tom White, 2nd edition, Oreilly’s, 2010 Carlyna Bondiombouy, Patrick Valduriez. Query Processing in Multistore Systems: an overview. [Research Report] R R-8890, I NR IA Sophia Antipolis - Méditerranée. 2016, pp. 38.",MSc AI Engineering and MSc Informatik/ Computer Science
6215,Online and Approximation Algorithms,455480,Unregelmäßig Irregular,1 Semester,Harks,Ghodselahi,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Keine None,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Erwerbvon Kenntnissenüber Online-und Approximationspro- bleme sowie deren praktische Anwendung. —Acquire an understanding of online and approximation pro blems, along with their practical applications.  Fähigkeiten / Abilities Verbessern Sie Ihre Fähigkeit, Online-und Approximationspro bleme zu identifizieren und zu lösen, indem Sie Techniken wie potentielle Funktionen, L P-Relaxierungen und randomisiertes Runden anwenden. —Enhance your ability to identify and solve online and approxi mationproblemsusingtechniquessuchaspotentialfunctions, L P relaxations, and randomized rounding. Kompetenzen / Competencies Entwicklungder Fähigkeit, Online-und Näherungsalgorithmentheoretisch zu analysieren, so dass keine Programmierung er forderlich ist. — Develop the competency to theoretically analyze online andapproximation algorithms, eliminating the need for program ming.","list access, cashing, randomized online algorithms, load ba- lancing, scheduling, k-server problems, knapsack, set cover, matching, hitting set.",120 min Klausur oder ca. 30 min mündliche Prüfung 120-minute written examination or 30-minute oral examinati- on,"Präsentation mit Tafel und Beamer Presentation with a projector, blackboard","A. Borodin und R. El-Yaniv. Online Computationand Compe- titive Analysis. Cambridge University Press, Cambridge, 1998 V. V. Vazirani. Approximation Algorithms. Springer Verlag, Berlin, 2001 A. Fiat, G. J. Woeginger. Online Algorithms: The State of the Art. Springer, 1998",MSc AI Engineering and MSc Informatik/ Computer Science
6219,IoT Security: Security Solutions for the Internet of Things,455520,Unregelmäßig Irregular,1 Semester,Katzenbeisser,Anagnostopoulos,Englisch English,Modulgruppe „A IA“ Focus „A IA“,2 V,30 Std. Präsenz + 60 Std. Nachbereitung der Vorlesung und Workload Prüfungsvorbereitung 30 contact hours + 60 hours independent study and exam preparation,ECTS/Credits: 3,Keine None,-,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Students acquire basic knowledge of the Internet of Things (Io T), of its different segments that include devices of varying capabilities, of the industrial Io T, as well as of the concept of Io T2. 0, whichcombines Io Twithadvancedtechnologies, such as artificial intelligence and the blockchain. The students gain  knowledge of potential security solutions for the Io T, ranging from the design level to security protocol implementations forparticular use cases, such as device authentication, device at testation, and sensor data aggregation. Additionally, practical knowledge on how to gather sensor data and secure them is also provided by examining the relevant topic with the help of the S TM B-L475 E-I OT01 A board. Fähigkeiten / Abilities Students gain the ability to outline and potentially implement security solutions, ranging from design-level solutions to use case protocols, both in theory and in practice. Students gainthe ability to theoretically analyze potential threats in the fra mework of the Io T and to phrase out relevant requirements, potentially leading to the corresponding security specificati ons. Kompetenzen / Competencies Students learn to analyze the security requirements, specifi cations, threat models and analyses associated with the Io T, and select appropriate security solutions to address them, wi thout affecting the practicality and efficiency of the relevant Io T systems. Practical competencies for the design and imple mentation of security solutions in the framework of the Io T are also acquired, to a limited extent.","The following topics are covered: • Basic concepts (definition of the Internet of Things (Io T), examination of the different segments of th Io T and their diversity, applications of the Io T, the need for (lightweight)security in the Io T) • Requirements, specifications, threat modelling, attack surface analysis for the Io T • The EN IS Areportsregardinggoodpracticesforsecurity of the Io T • The Industrial Internetof Things(I Io T)andtheconcept of Io T 2. 0 • Introduction of security in the Io T in the design phase • Lightweight security primitves: Physical Unclonable Functions (P UFs), True Random-Number Generators (T RN Gs), Trusted Platform Modules (T PMs), and other solutions • Lightweight cryptography for the Io T: Standards and proposed solutions • Authentication protocols in the context of th Io T • Attestation of Io T devices in the field • Advanced security solutions for the Io T utilizing the blockchain, machine learning, post-C MO S technologies  and/or advanced artificial intelligence (Security for the Io T 2. 0 concept) • Secure sensor data aggregation in the context of the Io T: Issues and potential solutions • Sensor measurements with the S TM B-L475 E-I OT01 A board • Securityintheframeworkofthe ST MB-L475 E-I OT01 A board • Exploringacomprehensivesecuritysolutionforthe ST M B-L475 E-I OT01 A board in the framework of a network forming a small segment of the Io T",90 Minuten Klausur in Englisch 90-minute written exam in English,"Presentation, projector, blackboard, sensor measurements with the S TM B-L475 E-I OT01 A board","Russel & Van Duren: „Practical Internet of Things Security“, 2nd edition, Packt Publishing, 2019. Gilchrist: „Io T Security Issues“, De Gruyter, 2017.",MSc AI Engineering and MSc Informatik/ Computer Science
6220,Introduction to Microelectronics: From Silicion to,455530,Unregelmäßig Irregular,1 Semester,Katzenbeisser,Anagnostopoulos,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,2 V,30 Std. Präsenz + 60 Std. Nachbereitung der Vorlesung und Workload Prüfungsvorbereitung 30 contact hours + 60 hours independent study and exam preparation,ECTS/Credits: 3,Keine None,-,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Studentsacquirebasicknowledgeofmicroelectronics, rangingfrom semiconducting materials and their principles of opera tion in the context of computers to post-C MO S technologies, simple digital circuits, and their applications for computation  and computer sciences. Students learn the working principlesof diodes, transistors, operational amplifiers, and even post C MO S electronics relevant to digital circuits in the framework of computer science. Fähigkeiten / Abilities Students learn the application domains of microelectronics and are able to design simple analog and digital circuits, such as memory cells, both in theory and in practice. Kompetenzen / Competencies Students learn to analyze simple circuit designs and gain the ability to select the appropriate microelectronic components for the creation of simple circuits to address problems in the computation, storage, and other similar domains.","The following topics are covered: • Basicconceptsofmicroelectronics(examplesofelectro- nic systems, electronics vs. microelectronics, etc. ) • Short introduction to the physics of microelectronics(charge carriers, the pn junction, the need for conductors and semiconductors, silicon and other semiconduc ting materials) • Diodes and their applications• M OS transistors (P MO S, N MO S, C MO S), their prin ciples of operation, and their applications • C MO S amplifiers• Operational amplifiers, modes of operation (noninverting amplifier, inverting amplifier, integrator and diffe rentiator, voltage adder), and their applications• Design principles of simple computer components ba sed on microelectronics (memory cells, registers, logical gates) • Basic digital circuits and practical applications • Circuit design, correction, and theoretical testing using artificial intelligence• Microelectronicsbeyondsilicon:connectiontonanoelec tronics and post-C MO S technologies",90 Minuten Klausur in Englisch 90-minute written exam in English,"Präsentation, Beamer, Tafel Presentation, projector, blackboard","Sedra, Smith, Carusone&Gaudet:„Microelectronic Circuits“, 8th edition, Oxford University Press, 2019. Momeni:„Grundlagender Mikroelektronik1“, Springer, 2021. Razavi: „Fundamentals of Microelectronics“, 3rd edition, Wi  ley & Sons, 2021.",MSc AI Engineering and MSc Informatik/ Computer Science
5610,Praktische Parallelprogrammierung,455371,Jedes Sommersemester Every summer semester,1 Semester,Fraser,Größlinger,Deutsch oder Englisch German or English,Modulgruppe „Prog Soft“ Focus „Prog Soft“,3 V + 2Ü,75 Std. Präsenz + 85 Std. Übungsaufgaben / Programmier- Workload projekte + 60 Std. Nachbereitung und Eigenstudium 75contacthours+85hoursexercises/programmingprojects + 60 hours independent study,ECTS/Credits: 7,Keine None,Keine None,Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden lernen mehrere parallele Architekturen undeine Reihe von verschiedenen Ansätzen zur Parallelprogram mierung kennen. Sie werden in die Lage versetzt, für einevorliegende Problemstellung und parallele Plattform den ge  eigneten Programmieransatz auszuwählen und anzuwenden. Die Studierenden erarbeiten sich das Verständnis eines Forschungspapiers zur Parallelisierung in unterstützem Selbststu dium. — Students will learn several parallel architectures and a number of different approaches to parallel programming. They will beable to choose and apply the appropriate programming ap proach for the problem and parallel platform. Students aquirecomprehension of a research paper on parallelization in assis ted self-study. Fähigkeiten / Abilities Die Studieren den beherrschen die Konzepte der Parallelisie rung konkreter Anwenderprobleme und können diese für eine ausgewählte Programmiersprache umsetzen. — Studentsmastertheconceptsofparallelizationofspecificuserproblemsandimplementthemforaselectedprogramminglan guage. Kompetenzen / Competencies Absolventen der Veranstaltung sind sich der Vielfalt paralleler Architekturen und Programmierungsansätze sowie den hö heren Korrektsheits- und Performanzanforderungen paralleler Programme im Vergleich zu sequenziellen Programmen be wusst. Sie sind mit den Grundlagen der Performanzanalyse von parallelem Programmcode vertraut und haben Einblick in eine aktuelle Methode modellgetriebener Parallelisierung. — Graduates are aware of the diversity of parallel architectures andprogrammingapproachesaswellasincreaseddemandsonthe correctness and performance of parallel programs, compa redwithsequentialprograms. Theyarefamiliarwiththebasics of performance analysis of parallel program code and see into a current method of model-driven parallelization.","Es werden etwa ein halbes Dutzend verschiedene Paradigmen zur Parallelprogrammierung vorgestellt. Beispiele sind M PI, Open MP, B SP, High-Performance Fortran und Java. Mindestens drei werden in Programmierprojekten vertieft. Es werden grundlegende Größen und Gesetze paralleler Berechnungen vorgestellt und theoretische Grundkenntnisse in der Spe zifikation und Analyse von parallelen Abläufen vermittelt. Die Vor- und Nachteile verschiedener Vernetzungsmuster werden angesprochen. —Itwillpresentaboutahalfdozendifferentparadigmsforparal lelprogramming. Examplesinclude MP I, Open MP, B SP, High Performance Fortran and Java. At least three are engrossed in programming projects. It introduces basic sizes and laws ofparallel computations and provides theoretical basic knowled ge in the specification and analysis of parallel processes. The advantages and disadvantages of various networking patterns are addressed.","Implementierungen (Quellcode) zu mehreren Programmier- projekten mit je etwa 2 bis 3 Wochen Bearbeitungszeit. Implementations (source code) for several programming pro jects, each with about 2 to 3 weeks processing time.","Beamer, Tafel, Overheadprojektor Projector, blackboard, overhead projector","Foliensätze, Buchauszüge, Forschungspapiere Ian Foster http://www-fp. mcs. anl. gov/~foster/: Desi- gning and Building Parallel Programs. Addison-Wesley, 1994. Michael J. Quinn http://www. cs. orst. edu/~quinn/: Par allel Programming in C with M PI and Open MP. Mc Graw-Hill, 2004.",MSc Informatik/ Computer Science
5614,Abhängigkeitsanalyse,453401,Unregelmäßig Irregular,1 Semester,"Griebl, Fraser","Griebl, Fraser",Deutsch oder Englisch German or English,Modulgruppe „Prog Soft“ Focus „Prog Soft“,2 V + 2Ü,60 Std. Präsenz + 45 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 45 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Lineare Algebra I Linear Algebra I,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierendenwissen, wieinimperativen Programmen, ins- besondere in Schleifenprogrammen mit Arrays als zentraler Datenstruktur, Abhängigkeiten entstehen, mit welchen Techniken man diese automatisch exakt finden oder approximie  renkannundwelche Abhängigkeitsartenwieeliminiertwerden können. —The students will learn know how dependencies arise In impe rative programs, especially in loop programs with arrays as a central data structure and what techniques can automatically find exactly or approximate this and which dependency types can be eliminated. Fähigkeiten / Abilities Die Studierenden haben eine Vorstellung, wie neue, individuellbenötigte Programmanalyseverfahrenentwickeltundimple mentiert werden können und sind in der Lage, entsprechende mathematische W erkzeuge sinnvoll einsetzen. — Students will have an idea of how new, individually requiredprogram analysis techniques can be developed and implemen tedandareabletouseappropriatemathematicalusefultools. Kompetenzen / Competencies Die Studierenden kennen die Vorzüge der Einführung eines mathematischen Modells in ein (zunächst) nicht mathematisches Problem. — The students will know the benefits of the introduction of amathematical model in an (initially) non-mathematical pro blem","Diese Vorlesung beschäftigt sich damit, in einem imperati- ven Programm festzustellen, welche (Instanzen von) Anwei-sungen von welchen anderen abhängig sind. Solche Abhängig keiten entstehen etwa, weil eine Anweisung ein Array-Elementschreibt, dasananderer Stellewiedergelesenwird. Diese Ana lyseistdie Grundlagefüroptimierendeundfürparallelisierende Compiler, oder auch für Programmverifikation (Slicing) oder Reverse Engineering. Neben verschiedenen Analyse- und Be schreibungstechniken werden in der Vorlesung auch Verfahren vorgestellt, die bestimmte Abhängigkeiten eliminieren, ohne die Programmsemantik zu verändern. — This lecture deals with establishing in an imperative program, which(instancesof)instructionsdependonwhichother. Suchdependencies arise because an instruction writes an array ele ment that is read on another site. This analysis is the basis foroptimizing and parallelizing compiler for, or for program veri fication (slicing), or reverse engineering. In addition to variousanalysis and description, techniques and methods are presen tedinthelecturesthateliminatecertaindependencieswithout  changing the program semantics.",90 min. Klausur oder mündliche Prüfung (ca. 20 Minuten) 90-minute written examination or oral exam (approx. 20 mi- nutes),"Beamer, Tafel, Overheadprojektor Projector, blackboard, overhead projector","Utpal Banerjee:Loop Transformationsfor Restructuring Com- pilers - The Foundations, Kluwer, 1993. S T 265 B215. Utpal Banerjee:Loop Transformationsfor Restructuring Com pilers - Dependence Analysis, Kluwer, 1993. S T 265 B215 D4. Ausgewählte Forschungsartikel / selected research articles",MSc Informatik/ Computer Science
5616,Schleifenparallelisierung,405285,Unregelmäßig Irregular,1 Semester,"Griebl, Fraser","Griebl, Fraser",Deutsch oder Englisch German or English,Modulgruppe „Prog Soft“ Focus „Prog Soft“,2 V + 2Ü,60 Std. Präsenz + 45 Std. Übungsaufgaben + 75 Std. Nach- Workload bereitung des Volesungsstoffs und Prüfungsvorbereitung60 contact hours + 45 hours exercises + 75 hours indepen dent study and exam preparation,ECTS/Credits: 6,Keine None,Keine None,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden wissen, wie imperative Programme, insbe-sondere Schleifenprogramme mit Arrays als zentrale Datenstrukturen, automatisch semantikerhaltend transformiert, insbesondere parallelisiert werden können. Von der automati schen Parallelisierung kennen sie die verschiedenen notwen digen Phasen und jeweils eine oder mehrere Techniken dafür. — The students will know how imperative programs, especially loop programs with arrays as a central data structure, canbe particularly parallelized by automatically preserving the semantics. For automatic parallelization they will know the va riousnecessaryphasesandineachcaseoneormoretechniques for it. Fähigkeiten / Abilities Die Studierenden sind in der Lage, die geeigneten, erlernten Techniken für eine konkrete Parallelisierungsaufgabe auszu wählen und anzuwenden. Sie sind in der Lage, die Parallelität für eine ausgewählte Zielfunktion zu optimieren. Sie sind in der Lage, zu erkennen, ob ein Programm die Voraussetzungender Parallelisierungsmethode erfüllt, und es in einfachen Fäl len für die Methode anzupassen. —Students will be able to select and apply the appropriate tech niques learned for a specific parallelization task. They will beable to improve the parallelism of a selected objective func tion. They will be capable of recognizing whether a programmeets the requirements of parallelization, and adapt it in sim ple cases for the method. Kompetenzen / Competencies Die Studierenden haben ein Gefühl für die Auswirkungen der Hardware-Architektur auf die Parallelität. Sie kennen die Vorzügeder Einführungeinesmathematischen Modellsinein(zu nächst) nicht-mathematisches Problem und sind in der Lage, entsprechendemathematische Werkzeugesinnvolleinzusetzen. — The students will have a sense of the impact of the hardware architecture to the parallelism. You know the benefits of theintroduction of a mathematical model in an (initially) nonma thematical problem and are able to use the appropriate useful mathematical tools.","Die Vorlesung S Schleifenparallelisierungßeigt verschiedene Möglichkeiten der automatischen Parallelisierung von impera-tiven Programmenmitverschachtelten Schleifenauf. Gesamt aufgabe ist, ein sequenziell aufgeschriebenes Quellprogrammautomatisch in ein paralleles Zielprogramm zu transformieren, um dann durch die parallele Abarbeitung des Zielprogramms auf mehreren Prozessoren die Laufzeit zu reduzie ren. Eingangs wird kurz die Modellierung von verschachtelten Schleifen und Abhängigkeiten erklärt. Der Schwerpunkt der Vorlesung liegt dann auf verschiedenen Parallelisierungstechniken. Sowohl modellbasierte Parallelisierung (wie das Polyedermodell) als auch codebasierte Parallelisierung werden ein gehend studiert und miteinander verglichen. Der Stoff führt dabei zum Teil an die Grenzen der aktuellen Forschung. —Thelecture""Loopparallelizationßhowsdifferentwaysofauto maticparallelizationofimperativeprogramswithnestedloops. Overall task is to transform a sequential been signed source programautomaticallyintoaparalleltargetprogram, andthen toreducethetransittimethroughtheparallelexecutionofthe target program on multiple processors. Input briefly explains the modeling of nested loops and dependencies. The focus ofthe lecture will be located on different parallelization techni ques. Bothmodel-basedparallelization(suchasthepolyhedral model) and code-based parallelization are thoroughly studied and compared. The fabric leads in part to the limitations of current research.",90 min. Klausur oder mündliche Prüfung (ca. 20 Minuten) 90-minute written examination or oral exam (approx. 20 mi- nutes),"Beamer, Tafel, Overheadprojektor Projector, blackboard, overhead projector","Utpal Banerjee:Loop Transformationsfor Restructuring Com- pilers - The Foundations, Kluwer, 1993. S T 265 B215 Utpal Banerjee:Loop Transformationsfor Restructuring Com pilers - Loop Parallelization, Kluwer, 1994. S T 265 B215 L8 diverse Zeitschriftenartikel / research articles",MSc Informatik/ Computer Science
5622,Software-Sicherheit,405143,Jedes Sommersemester Every summer semester,1 Semester,Posegga,Posegga,Deutsch oder Englisch German or English,Modulgruppe „I T-Sec Rel“ Focus „I T-Sec Rel“,2 V + 1Ü,"45 Std. Präsenz + 30 Std. Übungsaufgaben + 75 Std. Nach-Workload bearbeitung des Vorlesungsstoffes, Vorbereitung eines Refe rats und Prüfungsvorbereitung45 contact hours + 30 hrs exercises + 75 hrs follow-up, pre paring a presentation and exam preparation",ECTS/Credits: 5,Keine None,Advanced I T Security,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Verständnis über Verwundbarkeiten deren Arten, Entstehung, Möglichkeiten der Ausnutzung und deren Folgen. Verstehender Prinzipien für die Entwicklung sicherer Software. Über  blick über Maßnahmen zur Schadensbegrenzung. Kenntnisseüber Schritte zur forensischen Analyse von Sicherheitsvorfäl len. Überblick der Akademische Leitsätze und praxisrelevante‚ „best practice“ Ansätze. — Understanding of the types of vulnerabilities, development, possibilities of use and its consequences. Understand the prin ciples for the development of secure software. Overview ofmitigation measures. Knowledge of steps for a forensic analy sis of security incidents. Overview of Academic principles and practice-relevant “best practice“ approaches. Fähigkeiten / Abilities Aufspüren von Verwundbarkeiten; Ausbesserung von vorhandenen Verwundbarkeiten und forensische Analyse von Sicher heitsvorfällen. — Detection of vulnerabilities; repair of existing vulnerabilities and forensic analysis of security incidents. Kompetenzen / Competencies Betrachtung von Systemen aus unterschiedlichen Blickwinkeln. Entwicklung, Analyse und Umsetzung möglicher Perspektiven und Reaktionsalternativen. Transformation und Reduktion akademischer Leitsätze auf praxisbezogene Anforde rungen. — Consideration of systems from different angles. Development, analysis and implementation of possible perspectives and response alternatives. Transformation and reduction of acade mic principles to practical requirements.","Der Inhalt des Moduls umfasst dabei z. B. risk & threat analy- sis, buffer und heap overflows, scripting languages, filter tech- niques, S QLinjections, raceconditions, attacksurfaces, patchmanagement, software testing, low level software security, Ja va security, reference monitors, least privilege principle, smart phone security, stack walks und history based access control. — Thecontentofthemoduleincludes, i. e. ,risk&threatanalysis, buffer and heap overflows, scripting languages, filter techni ques, S QL injections, race conditions, attack surfaces, patchmanagement, software testing, low-level software security, Ja vasecurity, referencemonitors, leasesprivilegeprinciple, smart phone security, stack walks and history based access control.","Teilprüfungsleistungen: • Referat: ca. 30-min. Referat mit Präsentation über  selbsterarbeitetes Thema. Die Studierenden können am Semesterbeginn aus einer Auswahl von Themen wählen. • Schriftliche/mündliche Prüfung: 60-min. schriftliche Prüfung oder ca. 20-min. mündliche Prüfung. Die Prüfungsart wird am Semesterbeginn durch den/die Do zent(in) festgelegt und bekanntgegeben. Eine Anmeldung zum Referat impliziert automatisch eine Anmeldung zu einem der angebotenen Termine zur schriftlichen/mündlichen Prüfung im Anschluss an den gleichen Vor lesungszeitraum. Zum Bestehen des Moduls müssen beide Teilprüfungsleistun gen bestanden werden. Dabei wird die schriftliche/mündliche Prüfung mit 80% gewichtet, das Referat mit 20%. — This module is assessed in partial examinations: • Oral presentation: approx 20 min. Students in small groups will present selected topics chosen during the semester. • 60-minute written or 20-minute oral examination. The specific mode of assessment will be announced by the lecturer at the start of the semester. Registration for the presentation automatically implies a registration for any of the dates offered for written/oral exami nation following the same course of lectures. In order to pass this module, students must pass both partial examinations. The exam will count 80% of the grade, the oral presentation 20%.","Präsentation und Beamer, Tafel Presentation and projector, blackboard","Michael Howard & David Le Blanc: Writing Secure Code, Mi- crosoft Press, 2nd edition, 2002 Gary Mc Graw: Exploiting Software: How to Break Code, Addison-Wesley, February 2004 John Viega & Gary Mc Graw: Building Secure Software, Addison-Wesley, 2001 Mark G. Graff & Kenneth R. van Wyk: Secure Coding, O. Reilly, 2003 Brian A. La Macchia, Sebastian Lange, Matthew Lyons, Ru di Martin, and Kevin T. Price: . N ET Framework Security, Addison-Wesley, 2002 L. Gong, G. Ellison, M. Dageforde: Inside Java 2 Platform Security, Addison-Wesley, 2nd Edition, 2003",MSc Informatik/ Computer Science
5710,Algorithmische Graphentheorie und perfekte Graphen,455414,In der Regel jedes 2. Semester Usually every other semester,1 Semester,Rutter,Rutter,Englisch English,Modulgruppe „Alg Math“ Focus „Alg Math“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Algorithmen und Datenstrukturen Algorithms and Data Structures,Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden kennen grundlegende Begriffe der algo-rithmischen Graphentheorie und die in diesem Zusammenhang wichtigsten Graphklassen und deren Charakterisierungen, nämlich perfekte Graphen, chordale Graphen, Vergleich barkeitsgraphen, sowie Intervall-, Split-, und Permutationsgra phen. — The students know the fundamental notions of algorithmic graph theory along with the, in this context, most important graph classes and their characterizations. These are perfectgraphs, chordal graphs, comparability graphd as well as inter val, split, and permutation graphs. Fähigkeiten / Abilities Die Studierenden können Algorithmen zur Erkennung dieser Graphensowiezur Lösunggrundlegenderalgorithmischer Probleme auf diesen Graphen exemplarisch ausführen und analy sieren. — Thestudentscanapplyandanalyzealgorithmsforrecognizing and solving fundamental algorithmic problems on these graph classes. Kompetenzen / Competencies Die Studierenden besitzen die Kompetenz in angewandten Fragestellungen Teilprobleme zu identifizieren, die sich mittels dieser Graphklassen ausdrücken lassen, sowie neue Algorithmen für Probleme, die zu Problemstellungen aus der Vor lesung verwandt sind, auf diesen Graphklassen zu entwickeln. — The students have the competence to identify subproblems of applied questions that can be modeled using these graphs classes and to develop new algorithms for problems on these graph classes that are related to the topics of the lecture.","Viele grundlegende, in vielen Kontexten auftauchende Pro- blemstellungen, etwa Färbungsprobleme oder das Finden vonunabhängigen Mengen und maximalen Cliquen, sind in all gemeinen Graphen N P-schwer. Häufig sind in Anwendungenvorkommende Instanzendieserschwierigen Problemeaberwe sentlich stärker strukturiert und lassen sich daher effizient lösen. In der Vorlesung werden zunächst perfekte Graphen sowie deren wichtigste Unterklasse, die chordalen Graphen, eingeführt und Algorithmen für diverse, im allgemeinen N Pschwere Probleme, auf chordalen Graphen vorstellt. Anschlie ßend werden vertiefte Konzepte wie Vergleichbarkeitsgraphen besprochen, mit deren Hilfe sich diverse weitere Graphklassen (Intervall-, Split-, und Permutationsgraphen) charakterisierenund erkennen lassen, sowie Werkzeuge zum Entwurf von spe zialisierten Algorithmen für diese vorgestellt. — Many fundamental problems that appear in a multitude of contexts, such as coloring problems or finding maximum inde pendent sets and maximum cliques, are N P-hard for general graphs. Ofteninstancesfrompracticalapplicationshavemuch more structure, and can be solved efficiently. The lecture first introduces perfect graphs and their most important subclass, thechordalgraphsandpresentsefficientalgorithmsforsolvingvarious problems on these graphs, which are known to be N P hard in the general case. Afterwards more advanced conceptslike comparability graphs, which allow to characterize and re cognizevariousothergraphsclassessuchasinterval, split, andpermutation graphs, are covered along with tools and techni ques for developing specialized algorithms for them.",Mündliche Prüfung (ca. 25 Minuten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben Oral exam of about 25 minutes. The exact mode of assess ment will be indicated at the beginning of the semester,"Präsentation mit Tafel und Beamer Presentation with a projector, blackboard","Wird vom Dozenten/ von der Dozentin bekannt gegeben Golumbic, Algorithmic Graph Theoryand Perfect Graphs, 2nd. ed. , Annals of Discrete Mathematics, vol. 57, Elsevier, 2004 Spinrad, Efficient Graph Representations, Field Institute Mo nographs, vol. 19, A MS, 2003 Course reader for the lecture.",MSc Informatik/ Computer Science
5712,Algorithmen zur Visualisierung von Graphen,455352,Jedes Wintersemester Every winter semester,1 Semester,Rutter,Rutter,Deutsch German,Modulgruppe „Alg Math“ Focus „Alg Math“,2 V + 1Ü,45 Std. Präsenz + 50 Std. Übungen + 55 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 45 contact hours + 50 hrs exercises + 55 hrs independent study and exam preparation,ECTS/Credits: 5,Keine None,Algorithmen und Datenstrukturen Algorithms and Data Structures,Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden erwerben systematisches Verständnis algo- rithmischer Fragestellungen und Lösungsansätze im Bereichder Visualisierungvon Graphen, dasaufdembestehenden Wis sen in den Themenbereichen Graphentheorie und Algorithmik  aufbaut. Sie können Begriffe, Strukturen und grundlegende Problemdefinitionen aus der Vorlesung erklären. —The students acquire a systematic understanding of algorith mic problems and solution approaches in the area of graph visualization, based on their prior knowledge in the area of graph theory and algorithms. They can explain the notions, structures, and fundamental problem definitions from the lec ture. Fähigkeiten / Abilities Die Studierenden können Layoutalgorithmen für verschiedene Graphklassen exemplarisch ausführen, mathematisch präzise analysieren und ihre algorithmischen Eigenschaften beweisen. Zudem können die in der Vorlesung vorgestellten Komplexitätsresultate erklären und eigenständig ähnliche Reduktions beweise für neue Layoutprobleme führen. — Thestudentscanexecutelayoutalgorithmsfordifferentgraph classesonexamples, analyzetheminamathematicallypreciseway, and they can argue their algorithmic properties. Moreo ver, they can explain the complexity results presented in the lecture and they are able to develop reductions for new layout problems that are similar to the ones from the lecture. Kompetenzen / Competencies Die Studierenden besitzen die Kompetenz zu einem gegebenen Layoutproblem einen passenden Algorithmus auszuwählen, und diesen ggf. den Anforderungen einer konkreten Problemstellung anzupassen. Zudem sind sie in der Lage Visua lisierungsprobleme aus Anwendungen der Graphvisualisierung zu analysieren, zu modellieren, und auf Basis der erlernten Konzepte und Techniken Lösungen für dieses Modell zu ent werfen und deren algorithmische Eigenschaften nachzuweisen. —The students have the competence to select a suitable al gorithm for a given layout problem, and to adapt it to therequirements of a concrete problem. Moreover, they are ab le to analyze and model visualization problems from practical applications and, based on the concepts and techniques from the lecture, they can develop solutions for these models and prove their algorithmic properties.","In vielen Anwendungen ist es nützlich auftretende Graphen und Netzwerke zu visualisieren. Dabei besteht das Kernpro- blem darin, das sogenannte Layoutproblem zu lösen, also den Knoten Koordinaten in der Ebene zuzuweisen und die Kan ten auf Kurven zwischen den Endpunkten abzubilden. Je nach Anwendung werden dabei unterschiedliche Gütekriterien optimiert. Das Forschungsgebiet des Graphenzeichnens baut da bei auf Ansätze aus der Algorithmik, der Graphentheorie und der algorithmischen Geometrie auf. In der Veranstaltung wirdeine repräsentative Auswahl an Visualisierungsproblem vorgestellt, deren Komplexität untersucht und zugehörige Algorith men entworfen und analysiert. —In many applications it is useful to visualize graphs and networks. The core problem is to solve the so-called layout pro blem, which is to determine coordinates in the plane for thevertices and to map the edges to curves between their end points. Depending on the application, different optimization criteria apply. The Graph Drawing research area combinestechniques from algorithms, graph theory, and computatio nal geometry. The lecture provides a representative selection ofvisualizationproblems, forwhichthecomplexityisanalyzed and corresponding algorithms are developed and analyzed.",Mündliche Prüfung (ca. 25 Minuten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben Oralexam(about25minutes); Theexactmodeofassessment will be indicated at the beginning of the semester,"Präsentation mit Tafel und Beamer Presentation with a projector, blackboard","Wird vom Dozenten/ von der Dozentin bekannt gegeben G. Di Battista , P. Eades, R. Tamassia, I. G. Tollis: Graph Drawing: Algorithms for the Visualization of Graphs, Prentice Hall, 1999. M. Kaufmann und D. Wagner (eds): Drawing Graphs: Me thods and Models, Springer L NC S 2025, 2001",MSc Informatik/ Computer Science
5720,Modellierung und Beherrschung komplexer Systeme,405129,Unregelmäßig Irregular,1 Semester,De Meer,De Meer,Deutsch oder Englisch German or English,Modulgruppe „Allg Ber“ Focus „Allg Ber“,3 V + 2Ü,75 Std. Präsenz + 50 Std. Übungen + 85 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 75 contact hours + 50 hrs exercises + 85 hrs independent study and exam preparation,ECTS/Credits: 7,Keine None,Keine None,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Verständnis von grundlegenden Modellierungstechniken aus dem Bereich komplexer Systeme, insbesondere von Modellen, die auf Differenzialgleichungen und Rekursion basieren (z. B. logistisches Modell), von Netzwerkmodellen(z. B. smallworld)  und von automatenbasierten Modellierungsverfahren. — Understanding basic modeling techniques from the field ofcomplexsystems, especiallymodelsbasedondifferentialequa tionsandrecursionbased(e. g. logisticmodel), networkmodels (e. g. small world) and of machines based modeling method. Fähigkeiten / Abilities Aufstellen von einfachen Modellen, Bestimmung von wesent lichen Systemeigenschaften (Fixpunkte, Bifurkationspunkte usw. ) aus den Modellgleichungen. —Setting up of simple models, determination of essential sys temproperties(fixedpoints, bifurcationpoints, etc. )fromthe model equations. Kompetenzen / Competencies Fähigkeit komplexe Informationstechnische Systeme auf Mo delle abzubilden und die Aussagen der Modelle im Hinblick auf das Systemverhalten zu interpretieren. — Ability to model complex information technology systems on models and interpret the statements of the models in terms of the system’s behavior.",Folgende Themen werden behandelt: • Detaillierte Eigenschaften Komplexer Systeme • Vertiefte Prinzipien der Modellerstellung• Elementare Eigenschaften von Differential- und Rekur sionsgleichungen • Vertieftes Wissen von Zellularen Automaten • Vertieftes Wissen über den Zusammenhang von Netzen und „small world“ bzw. „scale-free“ Eigenschaften • Kenntnisse der „Power-Law“ Verteilung — The following topics are covered: • Detailed characteristics of Complex Systems • Substantive principles of modeling • Elementary properties of differential and recurrence equations • In-depth knowledge of cellular automata • In-depth knowledge of the relationship of networks and “small world“ and “scale-free“ properties • Knowledge of the “power law“ distribution.,"90 Minuten Klausur oder ca. 20 Minuten mündliche Prüfung, jenach Anzahlder Hörer. Diegenaue Prüfungsartwirdzu Be- ginn des Semesters bekannt gegeben.  90-minute written or 20-minute oral examination, depending on the number of listeners. The precise mode of assessment will be announced at the start of the semester.","Präsentation und Beamer, Tafel (oder Labor/Rechner/. .. ) Presentation and projector, blackboard (or laboratory/com- puter)","N. Boccara, Modeling Complex Systems, Springer Verlag",MSc Informatik/ Computer Science
5722,Funktionale Sicherheit,455404,Modul wird nicht mehr angeboten Module no longer offered,1 Semester,De Meer,De Meer,Deutsch oder Englisch German or English,Modulgruppe „Allg Ber“ Focus „Allg Ber“,2 V + 2Ü,60 Std. Präsenz + 50 Std. Übungen + 70 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 50 hrs exercises + 70 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Stochastik, Grundlagen der Informatik, (I T-Sicherheit) Stochastics, Principles of Computer Science, (I T Security)",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Verständnis der Methoden und Techniken in der System-, Hardware- und Softwareentwicklung sicherheitskritischer Systeme. Kenntnis der Architekturen sicherheitskritischer softwa regestützter Systeme. Verstehen der analytischen Methoden zum Nachweis der funktionalen Sicherheit dieser Systeme so wie Strategien in der Sicherheitstechnik. Kenntnis über die Prozesskategorien und Prozessgebiete von Qualitätsmanage mentsystemen. — Understanding of the methods and techniques in the system, hardware and software development of safety-critical systems. Knowledge of the architectures of safety-critical software based systems. Understanding of the analytical methods for the detection of functional safety, and strategies in security technology. Knowledge of the process categories and process areas of quality management systems. Fähigkeiten / Abilities Auswahlund Anwendunggeeigneter Methodenim Sicherheits lebenszyklus. Entwicklung geeigneter System-, Software und Hardware-Architekturen. Anwendung analytischer Methoden(F ME A, K-F ME DA, F TA, E TA, Markov, R BD) für den Nachweis der funktionalen Sicherheit. Nutzen von Qualitätsmana gementsystemen im Sinne der funktionalen Sicherheit. —Selecting and applying appropriate methods in the safety life cycle. Development of suitable system, software and hardwarearchitectures. Application of analytical methods (F ME A, K FM ED A, F TA, E TA, Markov, R BD) for confirmation of func tionalsafety. Benefitsofqualitymanagementsystemsinterms of functional safety. Kompetenzen / Competencies Einordnung der Methoden und Techniken entsprechend der Wirksamkeit hinsichtlich der Sicherheitsintegritäts-Levels. Selbständige Bestimmung der Eignung von Maßnahmen, Techniken und Methoden. Verantwortungsbewusstes, koope ratives und zielgerichtetes Handeln in großen Projekten. —Classification of methods and techniques related to the effec tivenessintermsofsafetyintegritylevel. Self-determinationofthe suitability of measures, techniques and methods. Respon sible, cooperative and purposeful action in large projects.","Auf Basis der Norm I EC 61508 werden alle Gebiete der System- und Hardwareentwicklung entlang des Sicherheits- lebenszyklus behandelt. Besonders geeignete Methoden und Techniken werden vertieft und an Beispielen erläutert sowie in den Übungen angewendet. — Based on the I EC 61508 standard, all areas of the system and hardware development along the security lifecycle are treated.  Particularly suitable methods and techniques are discussed ingreaterdepth, illustratedusingexamplesandusedintheexer cises.",90 Minuten Klausur 90-minutes written examination,"Präsentation und Beamer, Tafel (Labor/Rechner) Presentationandprojector, blackboard(laboratory/computer)","Peter Löw, Roland Pabst, Erwin Petry, Funktionale Sicherheit in der Praxis, Dpunkt Verlag 2010, I SB N 978-3-89864-898-1 IE C/D IN E N 61508 – Internationaler Standard – Funktiona le Sicherheit sicherheitsbezogener elektrischer/elektronischer/ programmierbarer elektronischer Systeme, 1998/2002 Scheeweis, W. : Die Fehlerbaum-Methode (aus dem Themen kreis Zuverlässigkeits- und Sicherheits-Technik)",MSc Informatik/ Computer Science
5723,Computer Performance Evaluation,462401,In der Regel jedes Wintersemester Usually every winter semester,1 Semester,de Meer,de Meer,Vorlesung: Englisch; Übung: Deutsch/Englisch Lecture: English; Tutorial: German/English,Modulgruppe „Inf Komm“ Focus „Inf Komm“,2 V + 2Ü,60 Std. Präsenz + 35 Std. Übungen + 85 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 35 hrs exercises + 85 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Grundlagen der Stochastik, Rechnernetze Basic stochastics, Computer Networks",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierendenkennenwichtigetheoretische Grundlagenso- wie praktische Vorgehensweisen, Methoden und Werkzeugeder Leistungsmodellierung und quantitativen Leistungsbewer tung von Rechnersystemen und Rechnernetzen. Insbesondere sind sie mit Warteschlangenmodellen und zeitkontinuierlichen  Markov-Ketten sowie deren Analyse vertraut. —Students will know key theoretical principles as well as practi cal approaches, methods and tools for performance Modeling and quantitative performance evaluation of computer systems andcomputernetworks. Inparticular, studentsarefamiliarised with queuing models and continuous-time Markov chains and how they are analysed. Fähigkeiten / Abilities Die Studierenden können bewährte und neue Modellierungstechniken, Analysemethoden und Softwarewerkzeuge einschätzen, auswählen und für praktisch relevante Fragestellun gen anwenden. — Students will be able to evaluate and select new Modeling techniques, analytical methods and software tools, as well as apply them to practically relevant problems. Kompetenzen / Competencies Sie können praktische Problemstellungen in analytische Modelle übertragen und die Leistung des untersuchten Realsystems durch die Analyse des Modells bewerten. Die Studieren den finden relevante wissenschaftliche Publikationen, könnendiese verstehen und eigene wissenschaftliche Beiträge ausar beiten und präsentieren. — Students will be able to express practical problems in termsof analytical models and evaluate the performance of the examined real system through the analysis of the model. Stu dents will be able to find and comprehend relevant scientific publications, and to develop and present their own scientific contributions.","Das Modul vermittelt einen Überblick über die grundlegen- den Methoden und Algorithmen der Leistungsmodellierungund -bewertung mit Fokus auf Rechnernetze. Ein Schwer punkt des Kurses liegt hierbei auf der praktischen Anwendung vonentsprechenden Softwarewerkzeugen. Darüberhinausgibtder Kurs eine Einführung in die mathematischen Grundlagen, die grundlegenden stochastischen Konzepte und Algorithmen. Im Einzelnen behandelt das Modul den Modellierungsprozess und Modellvalidierung, Markov-Ketten, Warteschlangensysteme und -netze, stochastische Petri-Netze, analytische und numerische Lösungsansätze und diskrete, ereig nisorientierte Simulation. Die Softwarewerkzeuge Win PE PS Y, Matlab, S HA RP E, M OS EL-2 und ns2 werden von den Studie renden praktisch angewendet.  — The module provides an overview of the basic methods andalgorithmsofperformancemodelingandassessmentwithafo cusoncomputernetworks. Afocusofthecoursewillbeplaced on the practical application of appropriate software tools. Inaddition, the course provides an introduction to the mathematical foundations, the basic stochastic concepts and algo rithms. Specifically, the module covers modeling process andmodel validation, Markov chains, queuing systems and networks, stochastic Petri nets, analytical and numerical solutionsanddiscreteeventsimulations. Thesoftwaretools Win PE P SY, Matlab, S HA RP E, M OS EL-2 and ns2 will be practiced by the students.",90 Minuten Klausur 90-minute written examination,Präsentationmit Beamer; ergänzende Erläuterungenan Tafel; praktische Übungen in Rechnerraum Presentation with a projector; additional explanations on the blackboard; practical exercises in the computer room,Wird vom Dozenten bekannt gegeben Announced during the lecture,MSc Informatik/ Computer Science
5724,Safety and Security of Critical Infrastructures,451006,Unregelmäßig Irregular,1 Semester,de Meer,de Meer,Deutsch oder Englisch German or English,"Modulgruppe „Inf Komm“, Modulgruppe „I T-Sec Rel“ Focus „Inf Komm“, Focus „I T-Sec Rel“",2 V + 2Ü,60 Std. Präsenz + 50 Std. Übungen + 70 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 50 hrs exercises + 70 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Grundlagen der I T-Sicherheit, Rechnernetze und Computer Networks and Energy Systems von Vorteil Basics of I T Security, Computer Networks and Computer Net works and Energy Systems advantageous",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden lernen aktuelle und zukünftige Konzepte von Sicherheit in Netzen kennen. Sie erhalten Kenntnisse über die verschiedenen Bedrohungen und Angriffe sowie von  der Konzeption und Implementierung von Sicherheitsdienstenzum Schutz des Netzes. Sie erlangen Kenntnisse über Methoden zur Gewährleistung von Sicherheitszielen wie Datenin tegrität, Vertraulichkeit, Zurechenbarkeit und Verfügbarkeit. Bedrohungen wie Maskerade, Abhören von Daten, unberech tigter Zugang zu Services, Sabotage und Modifikation von Informationen können durch geeignete Sicherheitsdienste wie Authentifizierungsservice oder Datenintegritätsservice ausge schaltet werden. —Students will learn about current and future concepts of se curity in networks. They will acquire knowledge of the various threats and attacks, as well as the design and implementation ofsecurityservicesfortheprotectionofthenetwork. Theywill gain knowledge of methods for ensuring security goals such as data integrity, confidentiality, accountability and availability. Threats such as masquerade, eavesdropping of data, unauthorized access to services, sabotage and modification of infor mation can be turned off by suitable security services such as authentication services and data integrity services. Fähigkeiten / Abilities Die Studierendenentwickeln Fertigkeitenzum Designund Ent wurf von Sicherheitsmechanismen bei verdrahteten Netzen, drahtlosen Netzen, mobilen Netzen, Sensornetzen und R FI Dbasierten Netzen. Sieerlangendie Fähigkeitaktuelleundkünftige Konzepte der Netzsicherheit zu verstehen und zu bewer ten. Durch die Analyse von verschiedenen Angriffsmethodenwie z. B. Do S oder Relay-Angriffe lernen sie, wie man geeig nete Gegenmaßnahmen entwirft und in welcher Schicht des Protokollstacks welche Dienste auf welche Weise implemen tiert werden können, um die Angriffe zu verhindern. — Students will develop skills to design security mechanisms in wired networks, wireless networks, mobile networks, sensor networks and R FI D -based networks. They will gain the ability to understand current and future concepts of network security and evaluate them. By analyzing various attack methods such as Do S or relay attacks they learn how to design appropriate countermeasuresandinwhatlayeroftheprotocolstackwhich services can be implemented to prevent the attacks. Kompetenzen / Competencies Die Studierenden sind in der Lage, an Hand der Anforderun gen selbstständig die erforderlichen Sicherheitsmechanismenwie Authentifizierungsprotokolle oder Datenintegritätsmecha nismen zu entwerfen und zu implementieren.  —Students will be able to understand the requirements for designing the security mechanisms such as authentication pro tocols and data integrity mechanisms and to implement them independently.","e sind die sichere drahtlose und mobile Kommunikation und der Bereich Sicherheit in drahtlosen Sen sornetzwerkenderdie Punkte Einführungindie Sicherheitvon Sensornetzen und Sicherheitsprotokolle in Sensornetzen um fasst. Zudem beinhaltet das Modul den Bereich Sicherheit im Smart Grid, dem zukünftigen intelligenten Stromnetz. —In the network security segment, the module includes an in troduction to the network security and security protocols fornetworks. Othertopicsincludesecurewirelessandmobilecommunication. The security in wireless sensor networks area in cludes an introduction to sensor network security and security protocols in sensor networks. The module also includes the area of security for Smart Grids, the intelligent power grids of the future.",90 Minuten Klausur 90-minute written examination,"Präsentation und Beamer, Tafel (Labor/Rechner) Presentationandprojector, blackboard(laboratory/computer)","Yan Zhang, Security in R FI D and sensor networks, Auerbach Publications, 2009, I SB N 9781420068399 G. Schaefer, Netzsicherheit, dpunkt. verlag Claudia Eckert, Christoph Krauß(2011). Sicherheitim Smart Grid:Eckpunkte für ein Energieinformationsnetz, Alcatel-Lucent-Stiftung. http://www. stiftungaktuell. de/index. php? article_ id=21&slice=364 Claudia Eckert, Christoph Krauß (2012). Sicherheit im Smart Grid: Sicherheitsarchitekturen für die Domänen Privatkunde und Verteilnetz unter Berücksichtigung der Elektromobilität, Alcatel- Lucent-Stiftung. http://www. stiftungaktuell. de/index. php? article_ id=21&slice=403",MSc Informatik/ Computer Science
5725,Methodological Foundations of Distributed Systems,405236,Unregelmäßig Irregular,1 Semester,de Meer,Basmadjian,Englisch English,Modulgruppe „Inf Komm“ Focus „Inf Komm“,2 V + 2Ü,60 Std. Präsenz + 50 Std. Übungen + 70 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 50 hrs exercises + 70 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Grundlagen der Stochastik, Rechnernetze, Computer Perfor- mance Evaluation, Verteilte Systeme Basics in stochastics, Computer Networks, Computer Perfor mance Evaluation, Distributed Systems",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Grundlegende Methoden und Methodologien der Analysein- strumente Verteilter Systemen mit Fokus auf Rechnernetzen. —  Basicmethodsandmethodologiesofanalysisinstrumentsused for distributed systems with a focus on computer networks. Fähigkeiten / Abilities Formulieren von Optimierungsproblemen bei Verteilten Systemen, analysieren der Stabilität und Reaktionsfreudigkeit kontrollierter und unkontrollierter Systeme, mathematische Modellierung der Kommunikation Verteilter Systeme, Leistungs modellierung und Bewertung von Rechnernetzen, modellieren von Entscheidungssituationen mit mehreren Beteiligten.","Der Kurs vermittelt einen Überblick über die grundlegenden Methoden und Methodologien bei Verteilten Systemen mit Fokus auf Rechnernetzen. Ein Schwerpunkt des Kurses liegtaufdemkonzeptionellen Verständnisdertheoretischen Grundlagen. Darüber hinaus erfolgt eine Einführung in die mathe matischen Grundlagensowiediegrundlegendenstochastischen Konzepte und Algorithmen. Themen: Optimierung, Spieltheorie (Game Theory), Überwachungstheorie (Control Theory), Informationstheorie (Information Theory) und Warteschlangentheorie (Queuing Theo ry) Beispiele verwendeter Werkzeuge: Matlab, N S2, M OS EL-2, L P solvers — The lecture gives a generic overview on fundamental methodsandmethodologiesof Distributed Systemswithfocuson Com puter Networking. One of the main focus of the lecture is dedicated to the conceptual understanding of the theoreticalfoundations of Computer Networking. Furthermore, an introduction to the mathematical principles and fundamental sto chastic concepts as well as algorithms will be given. Topics:Optimization, Game Theory, Control Theory, Informa tion Theory, Queuing Theory Example of used Tools: Matlab, N S2, M OS EL-2, L P solvers","90 Minuten Klausur oder ca. 20 Minuten mündliche Prüfung, jenach Anzahlder Hörer. Diegenaue Prüfungsartwirdzu Be- ginn des Semesters bekannt gegeben. 90-minute written or oral exam of about 20 minutes, depending on the number of participants. The precise mode of as sessment will be announced at the start of the semester.","Präsentation und Beamer, Tafel Presentation and projector, blackboard","S. Keshav. Mathematical Foundations of Computer Networ- king, Addison-Wesley, 2012, I SB N- 13: 978-0-321-79210-5 Aktuellewissenschaftliche Publikationen/currentresearchar ticles",MSc Informatik/ Computer Science
5731,Einführung in die Numerik,401814,Unregelmäßig Irregular,1 Semester,Sauer,Sauer,Deutsch German,Modulgruppe „Alg Math“ Focus „Alg Math“,4 V + 2Ü,90 Std. Präsenz + 60 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 60 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,Analysis I I oder Mathematik in technischen Systemen Analysis I I or Mathematics in Technical Systems,"Verwendbarkeit in weiteren Bachelor Mathematik, Lehramt Mathematik Gymnasium Studiengängen Bachelor Mathematics, Teacher training programme for se condary education in Mathematics (Gymnasium","Kenntnisse / Skills/Knowledge Die Studierenden sollen grundlegende Verfahren der Numerik kennen und deren Grenzen beurteilen können. Darüber hinaussollen sie für Genauigkeitsfragen und den Einfluss von Run dungsfehlern sensibilisiert sein.  —The students should know basic methods of numerical ana lysis and to evaluate their limits. In addition, they should be aware of accuracy issues and the influence of rounding errors. Fähigkeiten / Abilities Implementierung grundlegender Algorithmen, Untersuchungder Algorithmenauf Stabilitätund Nutzungbestehender Soft ware zur Lösung von numerischen Problemen. — Implementation of basic algorithms, study of algorithms forstabilityanduseofexistingsoftwareforsolvingnumericalpro blems. Kompetenzen / Competencies Lösen von realistischen oder realitätsnahen Problemen mit Computerunterstützung, Neuentwicklung und Bewertung von Lösungsmethoden. — Solving realistic or realistic problems with computer support, new development and evaluation of solution methods.","Fehleranalyse, Lösen linearer Gleichungssysteme, Modellie- rung von Kurven, Interpolation, Lösung nichtlinearer Glei- chungen, Numerische Integration —Failure analysis, solving linear systems of equations, mode ling of curves, interpolation, solution of nonlinear equations, numerical integration",120-minütige Abschlussklausur oder ca. 30 Minuten mündli- che Prüfung (wird am Anfang der Veranstaltung mitgeteilt)120-minute written examination or 30-minute oral examination (the mode of assessment will be announced on the notice board and faculty website at the start of the semester),"Präsentation und Beamer, Folien, Tafel Presentation and projector, slides, blackboard","J. Stoer: Einführung in die Numerische Mathematik I, Sprin- ger, 1980. P. Deuflhard, A. Hohmann: Numerische Mathematik. Eine al gorithmisch orientierte Einführung, de Gruyter 1991. N. Higham, Accuracy and stability of numerical algorithms, S IA M 1996 G. Golub, Ch. Van Loan, Matrix computations, John Hopkins University Press, 1983 E. Isaacson, H. B. Keller, Analysis of numerical methods, John Wiley & Sons, 1966  W. Gautschi, Numerical analysis, an introduction, Birkhäuser 1997 Skriptum zur Vorlesung / Lecture Notes (Course reader)",MSc Informatik/ Computer Science
5732,Ideals in Numerical Applications,455363,Unregelmäßig Irregular,1 Semester,Sauer,Sauer,Englisch English,Modulgruppe „I TS“ Focus „I TS“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Analysis I + I I, Lineare Algebra I + I I oder äquivalent, Grund- lagen Algebra Analysis I + I I, Linear Algebra I + I I or equivalent, Basic Al gebra",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierendenkennendiegrundlegendenundanwendungs- relevanten Konzepte und Techniken der Computeralgebra für Idealtheoriederen Anwendungaufund Numerische Probleme.  Fähigkeiten / Abilities Die Studierenden können Beweistechniken nachvollziehen, aufverwandte Probleme aus Theorie Anwendungsfragen übertra gen und auf dieser Basis Algorithmen entwickeln. Kompetenzen / Competencies Die Studierenden haben die Kompetenz, die Konzepte und Methoden der Computeralgebra zu verstehen, und geeignete Techniken für Anwendungsprobleme auszuwählen und zu eva luieren.","Theeuclideanalgorithm; Idealsandbases; Polynomialinterpo- lation; Filters, filterbanks and wavelets; Prony‘s problem and dual convolutions; Subdivision methods",Mündliche Prüfung (ca. 30 Minuten) 30-minute oral examination,Präsentation und Beamer Presentation and projector,"Cohen, A. M. , Cuypers, H. , Sterk, M. , editors (1999). So- me Tapas of Computer Algebra , volume 4 of Algorithms and Computations in Mathematics. Springer. Cox, D. , Little, J. , O’Shea, D. (1996). Ideals, Varietiesand Algorithms. Undergraduate Texts in Mathematics. Sprin ger–Verlag, 2. edition. Eisenbud, D. (1994). Commutative Algebra with a View To ward Algebraic Geometry, volume 150 of Graduate Texts in Mathematics. Springer. Gathen, J. v. z. , Gerhard, J. (1999). Modern Computer Alge bra. Cambridge University Press.",MSc Informatik/ Computer Science
5736,Kettenbrüche,455354,Unregelmäßig Irregular,1 Semester,Sauer,Sauer,Englisch English,Modulgruppe „I TS“ Focus „I TS“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Analysis I + I I, Lineare Algebra I + I I, Numerische Mathema- tik Analysis I + I I, Linear Algebra I + I I, Numerical Mathematics",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden kennen die wichtigsten Resultate aus der Theorie der Kettenbrüche und deren Verwendung in Anwen dungen.  Fähigkeiten / Abilities Die Studierendenkönnen Beweistechnikenausdem Gebietder Kettenbrüchenachvollziehenundaufverwandte Problemeaus Anwendungsfragen übertragen und auf dieser Basis Algorith men entwickeln. Kompetenzen / Competencies Die Studierenden haben die Kompetenz, sich Techniken ausdem Gebiet zu erschließen und passend für Anwendungspro bleme auszuwählen und zu evaluieren.","Applications of continued fractions; continued fractions and number theory; continued fractions and polynomials: quadra-ture, orthogonal polynomials, Sturm chains, Padé approxima tion; signal processing, Hurwitz and Stieltjes",90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben 90-minute written examination or 20-minute oral examination (the mode of assessment will be announced at the start of the semester),Präsentation und Beamer Presentation and projector,"F. R. Gantmacher, Matrix Theory. Vol. I I, Chelsea Publishing Company, 1959, Reprinted by A MS, 2000. W. Gautschi, Numerical analysis. an introduction, Birkhäuser, 1997. A. Ya. Khinchin, Continued fractions, 3rd ed. , University of Chicago Press, 1964, Reprinted by Dover 1997. O. Perron, Die Lehre von den Kettenbrüchen I/I I, 3rd ed. , B. G. Teubner, 1954.",MSc Informatik/ Computer Science
5739,Geometric Modeling Project,455355,Unregelmäßig Irregular,1 Semester,Sauer,Sauer,Deutsch oder Englisch German or English,Modulgruppe „I TS“ Focus „I TS“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Analysis I + I I, Lineare Algebra I + I I oder äquivalent Analysis I + I I, Linear Algebra I + I I or equivalent",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierendenkennendiegrundlegendenundanwendungs- relevanten Konzepte und Techniken der Computeralgebra für Idealtheoriederen Anwendungaufund Numerische Probleme. Fähigkeiten / Abilities Die Studierenden können mit den im C AG D üblichen Kurven  und Flächentypen umgehen, Algorithmen zum Umgang mitihnen entwickeln sowie Eigenschaften der Objekte und Algo rithmen mathematisch formulieren und beweisen. Sie können außerdem konkrete Objekte konstruieren, reproduzieren oder generieren. Kompetenzen / Competencies Die Studierenden haben die Kompetenz, die Funktionswei se von C AD-Systemen zu verstehen, geeignete Kurven- und Flächentypen für Modellierungsprobleme auszuwählen und in konkreten Fragestellungen einzusetzen.","Differentialgeometrische Eigenschaften von Kurven und Flä- chen, Kurvenprimitive im C AD: Polynome, Splines, rationa-le Kurven. Methoden zur Flächengenerierung: Blending, Tensorprodukt. Untersuchung von geometrischen Differenzierbar keitseigenschaften.",Erstellung eines Prototypen und Präsentation (30min) zum Projekt und dessen Durchführung Productionofaprototypeandpresentation(30min)aboutthe project and its implementation,Präsentation und Beamer Presentation and projector,Wird vom Dozenten bekannt gegeben,MSc Informatik/ Computer Science
5750,Gewöhnliche Differentialgleichungen,401817,In der Regel jedes Sommersemester Usually every summer semester,1 Semester,"Forster-Heinlein, Wirth","Forster-Heinlein, Wirth",Deutsch German,Modulgruppe „Allg Ber“ Focus „Allg Ber“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Analysis I + I I, Lineare Algebra I + I I Analysis I + I I, Linear Algebra I + I I",Verwendbarkeit in weiteren Bachelor Mathematik Studiengängen Bachelor Mathematics,"Kenntnisse / Skills/Knowledge Die Studierendenkennendie Schlüsselprinzipienüberdie Exis-tenz und Eindeutigkeit der Lösungen gewöhnlicher Differenti algleichungen, sowie einige Lösungsverfahren. —  Students will know the key principles of the existence and uniqueness of solutions of ordinary differential equations and some solution methods. Fähigkeiten / Abilities Die Studierenden sind in der Lage, die Methoden zur Lösunggewöhnlicher Differentialgleichungen bei konkreten Fragestellungen zu aktuellen Themen der Mathematik und der Natur wissenschaften anzuwenden. —Students will be able to apply the solution methods for ordi nary differential equations to topical problems in the field of mathematics and the natural sciences.",• Modellierung mittels Differentialgleichungen • Lösungsverfahren für spezielle Differentialgleichungen erster Ordnung • Existenz- und Eindeutigkeitssätze von Peano und Picard-Lindelöf • Lösungsverfahrenfürlineare Differentialgleichungenund Differentialgleichungssysteme• Stabilitätstheorie für Lösungen autonomer Differential gleichungen — • Modeling using differential equations • Solution methods for specific first-order differential equations • Existence and uniqueness theorems of Peano and Picard-Lindelöf• Mehods for solving linear differential equations and sys tems of differential equations • Stability theory for solutions of autonomous differential equations,90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 20-minute individual oral examination or 90-minute writtenexamination. The precise mode of assessment will be announ ced at the start of the semester.,"Tafel, Beamer, Übungsblätter Board, projector, exercise sheets","B. Aulbach, Gewöhnliche Differenzialgleichungen, Spektrum Akademischer Verlag 2004",MSc Informatik/ Computer Science
5753,Distributionentheorie,455360,Alle vier Semester Every four semesters,1 Semester,Forster-Heinlein,Forster-Heinlein,Deutsch oder Englisch German or English,Modulgruppe „Alg Math“ Focus „Alg Math“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Analysis I + I I, Lineare Algebra I + I I oder äquivalent Analysis I + I I, Linear Algebra I + I I or equivalent",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierendenkennendiegrundlegendenundanwendungs- relevanten Konzepteund Technikender Distributionentheorie. Fähigkeiten / Abilities Die Studierenden können die Beweistechniken der Distribu tionentheorie nachvollziehen und auf verwandte Probleme aus Anwendungsfragen überragen und auf dieser Basis eigene Be weise entwickeln. Kompetenzen / Competencies Die Studierenden haben die Kompetenz, die Konzepte und Methoden der Distributionentheorie zu verstehen, und geeignete Analysetechniken der Distributionentheorie für Anwendungsproblemeauszuwählenoderzuentwickelnundanzuwen den.","Inhalt: • Lokalkonvexe topologische Räume, Raum der Testfunk- tionen, Raum der Distributionen• Charakterisierungvon Distributionen, Konvergenz, loka les Verhalten • Cauchy-Hauptwert• Integration von Distributionen und Anwendung auf ge wöhnliche Differentialgleichungen • Faltung von Distributionen• Fourier-Transformation, Schwartz-Raumundtemperier te Distributionen",90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 20-minute individual oral examination or 90-minute writtenexamination. The precise mode of assessment will be announ ced at the start of the semester.,"Tafel, Beamer, Übungsblätter Board, projector, exercise sheets","Primary: • Walter Rudin. Functional Analysis. Mc Graw-Hill. • Wolfgang Walter. Einführung in die Theorie der Distri butionen. B. I. -Wissenschaftsverlag. • Ahmed I. Zayed. Handbook of function and generalized function transformations. C RC Press. Secondary: • D. C. Champeney. A handbook of Fourier theorems. Cambridge University Press. • D. S. Jones. Generalized functions. Mc Graw-Hill. • Michael Reed and Barry Simon. Methods of Modern Mathematical Physics I : Functional analysis. Academic  Press. • Laurent Schwartz. Théorie des distributions. Hermann. • François Treves. Topological Vector Spaces, distributi ons and kernels. Academic Press.",MSc Informatik/ Computer Science
5754,Constructive Approximation,405244,Unregelmäßig Irregular,1 Semester,Sauer,Sauer,Deutsch oder Englisch German or English,Modulgruppe „I TS“ Focus „I TS“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Analysis I + I I, Lineare Algebra I + I I oder äquivalent Analysis I + I I, Linear Algebra I + I I or equivalent",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierendenkennendiegrundlegendenundanwendungs-relevanten Konzepte und Techniken der Approximationstheo rie. Fähigkeiten / Abilities Die Studierenden können Beweistechniken der Approximati  onstheorie nachvollziehen und auf verwandte Probleme aus Anwendungsfragen übertragen und auf dieser Basis Algorith men entwickeln. Kompetenzen / Competencies Die Studierenden haben die Kompetenz, die Konzepte und Methodender Approximationstheoriezuverstehen, undgeeignete Approximationtechniken für Anwendungsprobleme aus zuwählen und zu evaluieren.",Qualitative Approximation: Dichtheitsaussagen und Approxi- mation in linearen Räumen; Shape preserving approximation; Quantitive Approximation mit trigonometrischen und algebarischen Polynomen; Translationsinvariante Räume und Wave lets; Der Satz von Kolmogoroff und Neuronale Netze,90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 90-minutewrittenexaminationororalexamination(approx20 minutes). The precise mode of assessment will be announced at the start of the semester.,"Präsentation und Beamer Presentation, projector","G. G. Lorentz. Approximationoffunctions. Chelsea Publishing Company, 1966. I. Daubechies. Ten Lectureson Wavelets, volume61of CB MS N SF Regional Conference Series in Applied Mathematics. S IA M, 1992. P. J. Davis. Interpolationand Approximation. Dover Bookson Advanced Mathematics. Dover Publications, 1975.",MSc Informatik/ Computer Science
5757,Fourier- und Laplace-Transformation,451405,Unregelmäßig Irregular,1 Semester,Forster-Heinlein,Forster-Heinlein,Deutsch oder Englisch German or English,Modulgruppe „I TS“ Focus „I TS“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Analysis I + I I, Lineare Algebra I + I I oder äquivalent Analysis I + I I, Linear Algebra I + I I or equivalent",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierendenkennendiegrundlegendentheoretischen Me- thoden der Fourier- und Laplace-Transformation. — Students are familiar with the basic theoretical methods of  Fourier and Laplace transform. Fähigkeiten / Abilities Die Studierenden sind in der Lage, Funktionen, die in kon kreten Fragestellungen zu aktuellen Themen der Mathematikund der Naturwissenschaften auftreten, anhand von Fourier Techniken zu analysieren. — Students are able to analyze functions that occur in specific questions on current topics in mathematics and the natural sciences using Fourier techniques.",Folgende Themen werden behandelt: • Fourier-Reihen • Fourier-Integrale in L1 und L2 • Poisson-Summationsformel • Abtastsatz • Paley-Wiener-Satz• Lokale Transformationen und die Heisenbergsche Un schärferelation • Laplace-Transformation und ihre Inversion — The following topics are covered: • Fourier series • Fourier integrals in L1 und L2 • Poisson summation formula • Sampling theorem • Paley-Wiener Theorem • Local transformations and the Heisenberg uncertainty principle • Laplace transform and its inversion,90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 20-minute individual oral examination or 90-minute writtenexamination. The precise mode of assessment will be announ ced at the start of the semester.,"Tafel, Beamer, Übungsblätter Board, projector, exercise sheets","Richard E. Bellman and Robert S. Roth. The Laplace Trans- form. World Scientific, 1984. Yitzhak Katznelson. An introduction to harmonic analysis. John Wiley & Sons, Inc. , New York, 1968. Rupert Lasser. Introduction to Fourier Series, volume 199 of Monographs and textbooks in pure and applied mathematics.  Marcel Dekker, Inc. , New York, 1996. Stéphane Mallat. A wavelet tour of signal processing. Acade mic Press, San Diego, 1997. Jayakumar Ramanathan. Methods of Applied Fourier Analy sis. Birkhäuser, 1998. Joel L. Schiff. The Laplace Transform. Springer, 1999. P. Wojtaszczyk. A Mathematical Introduction to Wavelets. Number 37 in London Mathematical Society Student Texts. Cambridge University Press, 1997. Robert M. Young. An Introduction to Nonharmonic Fourier Series. Academic Press, New York, 1980.",MSc Informatik/ Computer Science
5762,Sicheres Rechnen,455372,Jedes Sommersemester Every summer semester,1 Semester,Katzenbeisser,Katzenbeisser,Englisch English,Modulgruppe „I T-Sec Rel“ Focus „I T-Sec Rel“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Advanced I T Security,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden erwerben grundlegende Kenntnisse im Be- reich des Sicheren Rechnens, womit sensitive Daten aufnicht vertrauenswürdigen Plattformen sicher verarbeitet wer denkönnen. Sielernenverschiedene Ansätzezur Konstruktion von Verfahren und Protokollen des Sicheren Rechnens basie rend auf verschiedenen kryptographischen Verfahren. —Studentsacquirebasicknowledgeofsecurecomputationtechniques, whichcanbeusedtoprocesssensitivedataonuntrust worthycomputingplatforms. Theylearnvariousapproachestothe construction of secure computation methods and proto cols based on various cryptographic primitives. Fähigkeiten / Abilities Die Studierenden lernen Einsatzbereiche von Techniken des Sicheren Rechnens kennen. Sie erwerben die Fähigkeit, Tech niken des Sicheren Rechnens in der Praxis umzusetzen. —Students learn the application domains of techniques of se cure computation. Furthermore, they acquire the abilities to implement secure computation in practice. Kompetenzen / Competencies Die Studierenden lernen die Sicherheit von Techniken des Sicheren Rechnens zu beurteilen und die für einen Anwendungs fall geeigneten Methoden zu selektieren. — Studentslearntoanalyzethesecurityoftechniquesof„secure computation“ and are able to select the appropriate methods for a given problem domain.","Das Modul betrachtet die grundlegenden Konstruktionen des Sicheren Rechnens, die auf homomorpher Verschlüsselung, Garbled Circuits oder Secret Sharing basieren. Darüberhinauswerdenprominente Anwendungenbesprochensowie Program mierwerkzeuge für Sicheres Rechnen vorgestellt. — The module includes a discussion of the basic techniques to construct secure computation solutions, which are based on homomorphic encryption, garbled circuits or secret sharing. Furthermore, prominentapplicationswillbediscussedandpro gramming tools for secure computation will be reviewed.",60 Minuten Klausur oder ca. 20 Minuten mündliche Prüfung je nach Anzahl der Hörer; die genaue Prüfungsart wird zu Be- ginn des Semesters bekannt gegeben. Written exam (60 minutes) or oral exam (about 20 minutes); the precise mode of assessment will be announced at the start of the semester.,"Präsentation und Beamer, Tafel Presentation and projector, blackboard",Nach Ansage in der Vorlesung Announced during the lecture,MSc Informatik/ Computer Science
5764,Advanced Security Engineering Lab,455345,Jedes Semester Every semester,1 Semester,Katzenbeisser,Katzenbeisser,Deutsch oder Englisch German or English,Modulgruppe „I T-Sec Rel“ Focus „I T-Sec Rel“,"6Ü Es besteht Anwesenheitspflicht. Die Anwesenheitspflicht be-steht aus folgenden Gründen: Um den Erfolg der Veranstaltung zu gewährleisten ist eine verstärkte Interaktion der Stu dierenden untereinander aber auch zwischen Studenten und Betreuern notwendig. Bei der Interaktion mit den Betreuern oder den Kommilitonen, können die Studierenden Proble me besprechen und Lösungsstrategien erarbeiten. Ein weiterer Grund sind die regelmäßig stattfindenden Präsentationen der Studierenden. Jeder Studierende arbeitet sich frühzeitig ver stärkt in ein Gebiet der Veranstaltung ein. In der Präsentation vermittelt der Studierende sein Spezialwissen an die anderen Teilnehmer. Damit sichergestellt wird, dass die Studierenden dieses Spezialwissen vermittelt bekommen, müssen sie zu den Präsentationen anwesend sein. Der letzte Grund ist die Überprüfung der praktischen Kompetenz der Studenten. Die Stu dentenwerdenwährendder Anwesenheitszeitbefragtumihren Lernerfolg zu beobachten. Attendance is compulsory. This is for the following reasons:First, to ensure the success of the practicum, it is necessa ry to enhance the interaction among students and betweenstudents and tutors. When interacting with the tutors or fel low students, the students can discuss problems and develop solution strategies. Second, there are the regularly scheduled presentations of the students. Each student works is assigned atopicareaforthepracticumwhichheorshetreatsingreater detail than the others. In the presentation the student shares their detailed knowledge with the other students. To ensure  the maximum benefit for all students, it should be ensured that all students are present at the presentation. Third, one of the objectives of the practicum is to test the students’ practical skills. The students will be interviewed during their attendance to observe their learning success.",90 Std. betreute Laborarbeit + 110 Std. nicht betreute La- Workload borarbeit + 160 Nachbearbeitung90 hours supervised laboratory work + 110 hours unsupervi sed lab work + 160 hours follow-up,ECTS/Credits: 12,Keine None,"Technische Informatik, Advanced I T Security",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden lernen fortgeschrittene Techniken der hardware-orientierten IT-Sicherheitineinempraxisorientierten Umfeld kennen, wie beispielsweise Seitenkanalangriffe, Covert Channels, Physically Unclonable Functions oder Trusted Exe cution Environments. Die Übungsaufagen orientieren sich an aktuellen Forschungsarbeiten. — Students learn in a practical environment about advanced techniques of hardware-oriented cybersecurity, such as sidechannel attacks, covert channels, Physically Unclonable Func tions and Trusted Execution Environments. Assignments are based on current research publications. Fähigkeiten / Abilities Lösen anspruchsvoller Informatik-Aufgaben aus dem Bereich der I T Sicherheit unter praktisch experimenteller Anwendung des im Studium vermittelten Theorie- und Methodenwissens. Entwurf von I T-Sicherheitsarchitekturen auf Basis von Primitiven der hardware-orientierten Sicherheit. Recherche aktuel ler Publikationen zum übergeordneten Projektthema. Zudem lernen die Studierenden die gegenseitige Vermittlung der in haltlichen Grundlagen. —Solve challenging computer science tasks in the field of I T se curity under practical experimental application of operationsin the study of theories and methods. Construction, modifica tion and analysis of security infrastructures which are basedon hardware security primitives. Research in the latest scien tific literature on the project topic. Finally, students learn to relate the theoretical underpinnings to each other. Kompetenzen / Competencies Beurteilung der Sicherheitseigenschaften von Sicherheits Infrastrukturen. Problemlösungskompetenz und Transferkom petenz, der Theorie-und Methodenschatzder Informatikkannaufkomplexe, praktische Problemeder IT Sicherheitangewendet werden. Bearbeitung komplexer, konstruktiver und experi menteller Aufgabenausdem Bereichderhardware-orientierten I T-Sicherheit. —Assessment of the security properties of security infrastructures. Problem-solving skills and knowledge transfer skills; abili ty to apply the theories and methods of computer science to complex, practical problems of I T security. Ability to process complex, constructive and experimental problems in the field of hardware-oriented security.","Fortgeschritene Techniken der hardware-orientierten I T- Si- cherheit, basierend auf aktuellen Forschungsarbeiten, wie bei- spielsweise: • Seitenkanalangriffe • Covert Channels • Physically Unclonable Functions • Trusted Execution Environments —Advanced techniques of hardware-oriented cybersecurity, ba sed on current research publications, such as: • Side channel attacks • Covert Channels • Physically Unclonable Functions • Trusted Execution Environments","Das Modul ist in Themenabschnitte unterschiedlicher Schwie- rigkeitsgrade unterteilt. Die Studierenden lösen im Team fürjeden dieser Abschnitte ein praktisches Problem. Die Schrit te der Problemlösung werden in einem Bericht dokumentiert. Nach Fertigstellung der Lösung wird diese den anderen Teil  nehmern der Übung präsentiert (Dauer der Präsentation: ca. 30 Minuten). Die Kombination aus Protokollen und zugehöri ger Präsentation stellt sicher, dass die erarbeiteten Lösungen unddaszugehörige Wissennichtnurschriftlichdargelegtwird, sondern auch praktisch angewendet werden kann. Themoduleisdividedintotopicsegmentsofvaryingdifficulty. Students develop in a team a practical problem. The solution is documented in a report. The report is presented to other students when it is complete (duration of presentations: 30minutes). The combination of protocols and associated presentation ensures that the solutions and the associated know ledge demonstrated can not only be written down, but can also be applied practically.","Labor, Rechner, Beamer Laboratory, computer, projector",Richtet sich nach den variierenden konkret vergebenen The- men. Depends on the (changing) assignments,MSc Informatik/ Computer Science
5767,Hardware-basierte Sicherheit,455381,Jedes Wintersemester Every winter semester,1 Semester,Katzenbeisser,Katzenbeisser,Englisch English,Modulgruppe „I T-Sec Rel“ Focus „I T-Sec Rel“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Advanced I T Security,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden erwerben grundlegende Kenntnisse im Be-reich der hardware-orientierten Sicherheit: mit diesen Verfah ren können effektiv moderne Rechnerplattformen abgesichert werden. Sie lernen verschiedene Klassen von Verfahren der Hardware-Sicherheit kennen und können diese auf neue Pro blemstellungen anwenden. —Students acquire basic knowledge of hardware-oriented cyber security techniques, which can be used to protect moderncomputing platforms. They learn various classes of hardwaresecurity primitives and are able to apply them to new pro blems. Fähigkeiten / Abilities Die Studierenden lernen Einsatzbereiche von Techniken des der hardware-orientierten Sicherheit kennen. Sie erwerben die Fähigkeit, die besprochenen Techniken in der Praxis umzuset zen. —Students learn the application domains of techniques of hard ware security. Furthermore, they acquire the abilities to apply the discussed techniques in practice. Kompetenzen / Competencies Die Studierenden lernen die Sicherheit von Methoden der hardware-basierten Sicherheit zu beurteilen und die für einen Anwendungsfall geeigneten Methoden zu selektieren. —Studentslearntoanalyzethesecurityofhardware-basedsecu rity primitives and are able to select the appropriate methods for a given problem domain.",• Zufallszahlengeneratoren • Physically Unclonable Functions • Hardware-Trojaner• Seitenkanalangriffe gegen kryptographische Implemen tierungen• Trusted Platform Modules und Trusted Execution Envi ronments • Techniken des Remote Attestation • Covert Channels • Effiziente Implementierungkryptographischer Verfahren — • True Random Number Generators • Physically Unclonable Functions • Hardware Trojans• Side channel attacks against cryptographic implemen tations• Trusted Platform Modules and Trusted Execution Envi ronments • Remote Attestation techniques • Covert Channels  • Efficient implementation of cryptographic primitives,60 Minuten Klausur oder ca. 20 Minuten mündliche Prüfung jeweils in deutscher oder englischer Sprache und je nach An- zahl der Hörer. 60 minute written exam or 20 minute oral exam in German or English,"Präsentation und Beamer, Tafel Presentation and projector, blackboard",Nach Ansage in der Vorlesung Announced during the lecture,MSc Informatik/ Computer Science
5768,Eisenbahnsicherungstechnik,451008,Jedes Sommersemester Every summer semester,1 Semester,Katzenbeisser,Katzenbeisser,Deutsch oder Englisch German or English,Modulgruppe „I T-Sec Rel“ Focus „I T-Sec Rel“,2 V,30 Std. Präsenz + 60 Std. Nachbearbeitung des Vorlesungs- Workload stoffs und Prüfungsvorbereitung 30contacthours+60lecturefollow-upandexampreparation,ECTS/Credits: 3,Keine None,Grundkenntnisse in zuverlässigen und sicheren Systemen Basic knowledge in reliable and secure systems,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden lernen die Grundlagen des sicheren Bahnbe- triebs und hierzu verwendete technische Systeme kennen. — The students acquire a systematic understanding of the rules of safe train operation as well as technical systems that are used in that domain.  Fähigkeiten / Abilities Die Studierenden besitzen die Fähigkeit, die Sicherheit sowie die Zuverlässigkeit von Eisenbahnsicherungsanlagen ein zuschätzen und einfache Analysen selbst durchzuführen. — The students have the ability to assess the security as well as the safety of railway interlocking systems; they are able to perform simple analyses independently. Kompetenzen / Competencies Die Studierenden besitzen die Kompetenz die Sicherheitsan forderungen im Bahnbetrieb zu verstehen und diese auf neue Projekte anzuwenden. — The students have the competence to understand the safety and security requirements in railway operations and are able to apply this knowledge to new projects.","Dieses Modul bespricht die Grundlagen des sicheren Bahnbe- triebs sowie die technischen Einrichtungen, die hierzu einge- setzt werden: • Einführung in den sicheren Bahnbetrieb in Deutschland• Überblick über die in Deutschland eingesetzte Stell werkstechnik (mechanische und elektromechanische Stellwerke, Relaisstellwerke sowie digitale Stellwerke)• Grundlagen zur Analyse der Zuverlässigkeit der einge setzten Technologie • Grundlagen der I T-Sicherheit in der Stellwerkstechnik — This module discusses basic methods of safe train operation as well as technical systems that are used in that domain: • Introduction to safe train operation in Germany • Overview of the interlocking systems that are used in Germany (mechanical and electromechanical systems, relais-based interlocking, and digital systems) • Introduction to safety analysis for interlocking systems • Introduction to cybersecurity for interlocking systems","Seminararbeit von ca. 10 Seiten und Vortrag (ca. 30 Minu- ten), ggf. in Gruppenarbeit Seminarpaperofabout10pagesandoralpresensation(about 30 minutes), possibly in a team","Präsentation mit Beamer und Tafel Presentation with a projector, blackboard",-,MSc Informatik/ Computer Science
5772,Data Modelling and Data Processing in the Internet of,455386,Jedes Sommersemester Every summer semester,1 Semester,Kosch,"Kosch, Käbisch",Englisch English,Modulgruppe „Inf Komm“ Focus „Inf Komm“,2 V + 1Ü,"30 + 15 Std. Präsenz + 105 Std. Übungsaufgaben, Vor- und Workload Nachbereitung 30+15contacthours+105hrsexercises, independentstudy and exam preparation",ECTS/Credits: 5,Keine None,Keine None,Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden kennen die Grundlagen der aktuellen Datenmodellierungs-Ansätze und deren Verarbeitung im Kontext der Internet of Things (Io T) Domäne. Sie können Daten modellevonbeteiligten Io TSystemenbeschreibenundwenden  Techniken an, um diese zu verarbeiten und zu interpretieren, um u. a. eine Interaktion zu anderen Io T Systemen zu ermöglichen (Plug&Play). Sie kennen den Einsatz von standardisier ten (semantischen) Web-Technologien im Umfeld von W3 C Web of Things (Wo T) und können aktuelle Anwendungen in verschiedenen Bereichen der Industrie, u. a. Automatisierung, Energie-und Verkehrssystemean Handihrer Servicesbeschrei ben. — Students gain an understanding of the basics of current data modeling approaches and their processing in the context ofthe Internet of Things (Io T) domain. They are able to describe data models of participating Io T systems and apply tech niques to process and interpret them, for example, to enable interaction with other Io T systems (Plug&Play). They will befamiliarizedwiththeuseofstandardized(semantic)webtech nologiesinthecontextofthe W3 CWebof Things(Wo T)and can describe current applications in various areas of industry, including automation, energy and transport systems through their services. Fähigkeiten / Abilities Die Teilnehmer können grundlegende Ansätze der Datenmo dellierung für Internet of Things-Systeme implementieren. Siesind befähigt Servicebeschreibungen für konkrete Fragestel lungen und Anwendungen im Web of Things zu verfassen. —Participants will be equipped to implement fundamental ap proaches to data modeling for Internet of Things systems. They will be able to write service descriptions for concrete questions and applications in the Web of Things. Kompetenzen / Competencies Die Studierenden erlernen grundlegende und praktische Kom petenzen in der Konzeption von Io T-Systemen und mit den Technologie Blöcken der W3 C Web of Things, sowie in der Anwendung mit semantischen Web-Technologien. — Students learn basic and practical skills in the design of Io T systems, the technology blocks of the W3 C Web of Things, as well as in the application of semantic web technologies.","Internet-of-Things (Io T)-Systeme sammeln und agreggieren Sensordaten von physischen Produkten. Damit können Steue-rungenoptimiert, innovative Servicesangebotenundneue Ge schäftsmodelle entwickelt werden. Io T-Systeme brauchen ein intelligentes Datenkonzeptund Datenmanagement, dasnebendem Sammeln und Agreggieren auch das Auswerten der Sens  ordaten berücksichtigt. Die Vorlesung gliedert sich in drei Teilen:1. Einführung in Io T und verschiedene Web Technologien re levant für Io T-Systeme • Io T Systeme, u. a. , Mikrokontroller • Io T Frameworks and Architectures (e. g. , Vorto) • J SO N, J SO N Schema, R DF, J SO N-L D 1. 1 • Io T Datastores, u. a von Io T Cloud Systemen 2. Datenmodellierungstechnologien für die Io T • Wo T Building Blöcke: Thing Model, Thing Description und Binding Templates • Semantische Modellierung (Kontexterweiterung) 3. Datenverarbeitungsmechanismen im Io T • Wo T A PI • Discovery • Security • Datenkodierung • Datenverarbeitung — Internet-of-Things(Io T) systems collect and aggregate sensor data from physical products. This enables control systems tobe optimised, innovative services to be offered and new business models to be developed. Io T systems require an intelli gent data concept and management that takes into account not only the collection and agregation but also the evaluation of sensor data. The lecture is divided into 3 parts: 1. Introduction to Io T and different web technologies relevant for Io T systems • Io T Systems, such as, microcontroller • Io T Frameworks and Architectures (e. g. , Vorto) • J SO N, J SO N Schema, R DF, J SO N-L D 1. 1 • Io T Datastores, such as from Io T Cloud Systems 2. Data Modeling technologies for Io T • Wo T Building Blocks: Thing Model, Thing Description and Binding Templates • Semantic Modeling (Context Extension) 3. Data processing mechanisms in Io T • Wo T A PI • Discovery • Security • Data coding • Data processing",90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters  bekannt gegeben. 90-minute written or 20-minutes oral examination; the preci se mode of assessment will be announced at the start of the semester.,Präsentation mit Projektor Projector presentation,wird Wird vom Dozenten zu Beginn der Vorlesung bekanntgegeben. To be announced by the lecturer. The literature will be an nounced by the lecturer at the beginning of the lecture.,MSc Informatik/ Computer Science
5773,Implementierung von Datenbanksystemen,405069,Modul wird nicht mehr angeboten Module no longer offered,1 Semester,Kosch,Kosch,Deutsch German,Modulgruppe „Inf Komm“ Focus „Inf Komm“,3 V + 2Ü,75 Std. Präsenz + 65 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 75 contact hours + 65 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 7,Keine None,Keine None,Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden erwerben vertiefte Kenntnisse über Syste- minterna und Implementierung von Datenbanksystemen. — Students acquire in-depth knowledge of system internals and  implementation of database systems. Fähigkeiten / Abilities Die Studierenden haben die Fähigkeit, Datenbank-Tuning in der Praxis durchzuführen. —Students will acquire the ability to database tuning in practi ce. Kompetenzen / Competencies Die Studierenden besitzen die Kompetenz, die Systemsicht eines Datenbanksystems einzunehmen und zukünftige Entwick lungen im Datenbankbereich zu beurteilen. — Studentswillhavethecompetencetotakethesystempointof view of a database system and to assess future developments in the database area.","liche Gliederung: Architekturen von D BS Blockorien-tierte Zugriffsschnittstelle, E/A-Architekturen und Speicher hierarchien Speichertechnologie Externspeicherverwaltung, D BS-Pufferverwaltung Datensatzorientierte Zugriffsschnitt stelle Speicherungsstrukturen für Datensätze und Objekte Indexstrukturen, u. a. , B-Baum Familie, Hashing, multidimen sionale Indexstrukturen Mengenorientierte Zugriffsschnittstelle Anfragebearbeitung und Optimierung Verteilte Datenbanksysteme Details aktueller Datenbanksystemversionen, Oracle und I BM  D B2 — This lecture will provide an overview of current concepts inimplementation of database systems (D BS), particularly re lational databases. It first discusses general requirements for database systems before different data access methods arepresented. Different approaches to relational query optimiza tion, the view editing, and error handling and recovery aredescribed. Finally, the concepts presented in distributed data base systems will be adapted to the previously developed data structures and algorithms and extended with respect to the requirements of the distribution. Details of current databasesystemversions, Oracle, I BM DB2aretreatedinspecialchap ters. In the accompanying tutorials, the various concepts with examples will be presented and the implementation in current D BS will be discussed. In the practical part of the tutorials the database tuning will be presented, ie, the optimization ofa database system for various applications and system para meters. Administrative basics are taught. Contentstructure:Architecturesof DB Sblock-orientedaccess interface, I/O architectures and memory technology memoryhierarchies, external memory management, D BS buffer mana gement, record -oriented access interface, storage structures for records and objects Index structures, e. g. B- tree family, hashing, multidimensio nal index structures Quantity -based access interface query processing and optimi zation of Distributed Database Systems Details of current database system versions, Oracle and I BM D B2",90 min schriftliche Klausur 90-minute written examination,"Folien-orientierte Vorlesung, Tafelbenützung bei Beispielen, zusätzlichen Erläuterungenundzuerklärenden Sachverhalten:WöchentlicheÜbungeninkleinen Gruppen. Dabeiwerden Präsenzaufgaben sowie die Musterlösungen zu den Übungsaufga ben vorgerechnet Erwartete Aktivitäten der Studierenden: Mitarbeit bei Präsenzübungen, Übungsaufgaben, selbständiges Studiumvonse kundärer Literatur Folienskript ist vorhanden und über Stud. I P zugänglich. — Slides-oriented lecture, panel use with examples, additional explanations and explanatory facts: Weekly tutorials in small groups. The presence tasks and the sample solutions are pre calculated to the exercises Expected activities of students: Participation in compulsoryand voluntary tutorials, independent study of secondary lite rature Slide script is accessible and available through Stud. I P","Theo Härder, Erhard Rahm: „Datenbanksysteme: Konzepte und Techniken der Implementierung"", 2. Auflage, Springer Verlag, 2001, I SB N 3-540-65040-7.",MSc Informatik/ Computer Science
5780,Computeralgebra,455358,Jedes Wintersemester Every winter semester,1 Semester,"Kreuzer, Sauer","Kreuzer, Sauer",Deutsch oder Englisch German or English,Modulgruppe „Alg Math“ Focus „Alg Math“,4 V + 2Ü,90 Std. Präsenz + 75 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 75 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,Lineare Algebra I und I I Linear Algebra I and I I,"Verwendbarkeit in weiteren Master Computational Mathematics, Lehramt Mathematik Studiengängen Gymnasium Master Computational Mathematics, Teacher training pro-gramme for secondary education in Mathematics (Gymnasi um)","Kenntnisse / Skills/Knowledge Die Studierenden kennen die grundlegenden Algorithmen der Computeralgebra, insbesonderedie Methodenund Anwendun  gen der Gröbner-Basen. Neben den theoretischen Grundlagensindsieauchmitkonkreten Implementationendieser Algorith men vertraut. — The students know the basic algorithms of computer algebra, inparticularthemethodsandapplicationsof Gröbnerbases. In addition to the theoretical foundations they are familiar with concrete implementations of these algorithms. Fähigkeiten / Abilities Die Studierendenkönnenwichtige Methodender Computeralgebraselbständigineinem Computeralgebrasystemimplementieren. Sie sind in der Lage, für konkrete Fragestellungen geeignete Algorithmen zu finden oder zu entwickeln, deren Kor rektheit zu beweisen und deren Effizienz einzuschätzen. —Studentscanimplementimportantmethodsofcomputeralge bra independently in a computer algebra system. You are able to find or to develop suitable algorithms for specific questions, to prove their correctness, and evaluate their efficiency. Kompetenzen / Competencies Die Studenten erwerben evaluative Kompetenzen in Bezug auf die Verknüpfung der theoretischen Inhalte ihres Studiumsmit praxisnahen Problemstellungen, organisatorische Kompetenzen in Bezug auf ihr Zeit- und Arbeitsmanagement, so wie selbstreflexive Kompetenzen in Bezug auf interdisziplinäre Verbindungen zwischen der theoretischen Informatik und der algorithmischen Mathematik. — The students acquire evaluative skills in relation to the linkbetween the theoretical content of their studies with practi cal problems, organizational skills in relation to their time and work management as well as self-reflective skills in relation to interdisciplinary connections between theoretical Computer Science and computational mathematics.","Die Vorlesung beginnt mit der Diskussion der den modernen Verfahren der Computeralgebra zu Grunde liegenden mathe-matischen Strukturen (Zahlbereiche, Polynome) und ihrer effektiven Implementation. Darauf aufbauend erhalten die Stu dierenden eine Einführung in die Methode der Gröbner-Basenund lernen die wichtigsten algorithmischen Anwendungen die ser Methode kennen. Schließlich werden die Algorithmen aufkonkrete Berechnungsprobleme (z. B. die Lösung von Glei chungssystemen) angewendet. —Thelecturebeginswithadiscussionofthepasttomodernme  thodsofcomputeralgebraunderlyingmathematicalstructures(number ranges polynomials) and their effective implementa tion. Based on this, students receive an introduction to themethod of Groebner bases and learn the most important algo rithmicapplicationsofthismethod. Finally, thealgorithmsare applied to concrete computational problems (e. g. the solution of systems of equations).",120-minütige Abschlussklausur oder ca. 30 Minuten mündli- che Prüfung (wird am Anfang der Veranstaltung mitgeteilt)120-minute written examination or 30-minute oral examinati on (the mode of assessment will be announced at the start of the semester),"Tafelanschrieb, Beamer-Präsentation Blackboard, Projector presentation","M. Kreuzer und L. Robbiano, Computational Commutative Algebra 1, Springer, Heidelberg 2000",MSc Informatik/ Computer Science
5781,Algorithmische Algebraische Geometrie,405154,Unregelmäßig Irregular,1 Semester,Kreuzer,Kreuzer,Deutsch German,Modulgruppe „Alg Math“ Focus „Alg Math“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Lineare Algebra I und I I, Computeralgebra Linear Algebra I and I I, Computer Algebra",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die wichtigsten Konzepte und Methoden der algorithmischenalgebraischen Geometrie sind den Studierenden bekannt. Fundamentale Algorithmen und Beweistechniken der algebrai schen Geometrie und der kommutativen Algebra sowie deren  Anwendungen sind ihnen geläufig. —The main concepts and methods of algorithmic algebraic geo metry will be covered. Fundamental algorithms and proof techniques of algebraic geometry and commutative algebra and their applications will be covered. Fähigkeiten / Abilities Die Studierenden können algebraisch-geometrische Sachver halte und Fragestellungen in die Sprache der kommutativen Algebra übersetzen und sie für eine algorithmische Beant wortung aufbereiten. Die Studierenden sind in der Lage, ein Computeralgebrasystem anzuwenden um Probleme aus der algebraischen Geometrie zu lösen oder Beispielberechnungen durchzuführen. — Students will be able to translate algebraic- geometric factsand issues in the language of commutative algebra and prepa re for an algorithmic solution. Students will be able to use acomputer algebra system to solve problems in algebraic geo metry or perform sample calculations. Kompetenzen / Competencies Die Studenten erwerben evaluative Kompetenzen in Bezug auf die Verknüpfung der theoretischen Inhalte ihres Studiumsmit praxisnahen Problemstellungen, organisatorische Kompetenzen in Bezug auf ihr Zeit- und Arbeitsmanagement, so wie selbstreflexive Kompetenzen in Bezug auf interdisziplinäre Verbindungen zwischen der theoretischen Informatik und der algorithmischen Mathematik. — The students acquire evaluative skills in relation to the linkbetween the theoretical content of their studies with practi cal problems, organizational skills in terms of their time andlabor management, and self-reflective skills in relation to in terdisciplinary connections between the theoretical Computer Science, and computational mathematics.","Als Grundlage für alle weiteren Inhalte wird der Hilbertsche Nullstellensatz ausführlich besprochen und bewiesen. Die we-sentlichen Techniken zur Übersetzung geometrischer Fragestellungen in algebraische und umgekehrt werden damit ein geführt. Dann werden die theoretischen Grundlagen aus derkommutativen Algebra bereitgestellt (z. B. Hilbertscher Ba sissatz, graduierte Ringe und Modulen, Hilbert-Funktionen) und damit wichtige Objekte der algebraischen Geometrie (z. B. algebraische Kurven und Flächen, projektive Varietäten, endliche Punktmengen) studiert. In den Übungen werden die Algorithmen und Verfahren mit tels eines geeigneten Computeralgebrasystems (z. B. Co Co A)in explizite Computerprogramme umgesetzt und damit kon krete Berechnungsaufgabenderalgorithmischenalgebraischen Geometrie gelöst. — As a basis for all other contents, Hilbert’s theorem of zeros is discussed and proved in detail. The main techniques fortranslation of geometric problems into algebraic and vice ver sa are introduced. Then the theoretical foundations of the commutative algebra are provided (e. g. Hilbert basis theorem, graduated rings and modules, Hilbert functions) and thus im portant objects of algebraic geometry (e. g. algebraic curves and surfaces, projective varieties studied finite point sets). In the tutorials, the algorithms and methods by means of a suitable computer algebra system will be implemented (e. g. Co Co A) in explicit computer programs and thus solved for specific calculation tasks of algorithmic algebraic geometry.",120-minütige Abschlussklausur 120-minute final written examination,"Tafelanschrieb, Beamer-Präsentation Blackboard, Projector presentation","M. Kreuzer und L. Robbiano, Computational Commutative Algebra 2, Springer, Heidelberg 2005",MSc Informatik/ Computer Science
5782,Kryptographie,401816,In der Regel jedes 2. Semester Usually every other semester,1 Semester,"Kreuzer, Zumbrägel, Sauer","Kreuzer, Zumbrägel, Sauer",Deutsch oder Englisch German or English,Modulgruppe „I T-Sec Rel“ oder „Alg Math“ Focus „I T-Sec Rel“ or „Alg Math“,4 V + 2Ü,75 Std. Präsenz + 60 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 75 contact hours + 60 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,Lineare Algebra I Linear Algebra I,"Verwendbarkeit in weiteren Master Computational Mathematics, Lehramt Mathematik Studiengängen Gymnasium Master Computational Mathematics, Teacher training pro-gramme for secondary education in Mathematics (Gymnasi um)","Kenntnisse / Skills/Knowledge Die Studierenden kennen wichtige symmetrische und Public-Key Kryptosysteme. Sie sind mit der Sicherheitsanalyse sol  cher Systemevertraut. Insbesonderekennendie Studentendie sicherheitsrelevanten Aspektedes RS A-Kryptosystems. Ferner wissen die Studierenden, wie man kryptographische Systemein Protokolle eingliedert und kennen wichtige kryptographi sche Protokolle sowie deren Kryptoanalyse. —The students know important symmetric and public-key cryp tosystems. You are familiar with the safety analysis of such systems. In particular, the students know the safety aspects of the R SA cryptosystem. Furthermore, the students know how to integrate cryptographic systems and protocols know important cryptographic protocols and their cryptanalysis. Fähigkeiten / Abilities Die Studierenden können die Sicherheit eines Kryptosystems untersuchen und einschätzen. Für konkrete Anforderungen können sie geeignete Kryptosysteme und kryptographische Protokollebestimmenundaufihresichere Verwendbarkeittesten. Sie verstehen die mathematischen Grundlagen der mo dernen Kryptographie und beherrschen einfache Beweise und Anwendungen dieser Theorie. —Students can examine and assess the security of a cryptosys tem. For specific requirements, they can determine suitablecryptosystems and cryptographic protocols and test their usa bility safe. They understand the mathematical foundations ofmodern cryptography and master simple proofs and applicati ons of this theory. Kompetenzen / Competencies Die Studierenden erwerben evaluative Kompetenzen in Bezug auf die Verknüpfung der theoretischen Inhalte ihres Studiumsmit praxisnahen Problemstellungen, organisatorische Kompetenzen in Bezug auf ihr Zeit- und Arbeitsmanagement, sowie selbstreflexive Kompetenzen in Bezug auf interdiszipli näre Verbindungen zwischen den Fragen der I T-Sicherheitund der zugehörigen informationstheoretischen und algorith mischen Grundlagen. — The students acquire evaluative skills in relation to the linkbetween the theoretical content of their studies with practi cal problems, organizational skills in relation to their time andwork management, and self-reflective skills regarding interdis ciplinaryconnectionsbetweentheissuesof ITsecurityandthe associated information theory and algorithmic foundations.","Basierend auf einer Darstellung der historischen Wurzeln und Vorgänger werden moderne kryptographische Systeme vorge- stelltundanalysiert. Dabeikommensowohlsymmetrische Verfahren (z. B. V igenere, D ES, A ES) als auch Public-Key Ver fahren(z. B. R SA, El Gamal, elliptische Kurven Systeme)nichtzukurz. Diesekryptographischen Bausteinewerdeneinersorg fältigen Kryptoanalyse unterzogen und dann in Protokolle zur Erledigung wichtiger kryptographischer Aufgaben eingebaut: Authentifikation, Signatur, geheime Nachrichtenübermittlung, Secret Sharing, Zero-Knowledge Beweise etc. Auch diese Verfahren werden ausführlich analysiert und wichtige Angriffs und Schutzmechanismen untersucht. —Based on a description of the historical roots and predecessors modern cryptographic systems are presented and analy zed. Both symmetric algorithms (e. g. Vigenere, D ES, A ES) and public-key methods (such as R SA, El Gamal, elliptic curve systems) can not be neglected. These cryptographic modulesaresubjectedtocarefulcryptanalysisandthenincorporatedin to protocols for completion of important cryptographic tasks:authentication, signature, secret communications, secret sha ring, zero-knowledgeproofs, etc. Theseprocessesareanalyzedin detail and major attack and protection mechanisms are ex amined.",90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. Approx. 20-minuteoralor90-minutewrittenexamination(themode of assessment will be announced at the start of the se mester).,"Tafelanschrieb, Beamer-Präsentation Blackboard, Projector presentation","D. Wätjen, Kryptographie, Spektrum Akad. Verlag, Heidel- berg 2008",MSc Informatik/ Computer Science
5784,Codierungstheorie,463030,Unregelmäßig Irregular,1 Semester,Kreuzer,Kreuzer,Deutsch oder Englisch German or English,Modulgruppe „Alg Math“ Focus „Alg Math“,3 V + 2Ü,75 Std. Präsenz + 60 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 75 contact hours + 60 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 7,Keine None,Lineare Algebra I Linear Algebra I,Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden kennen den Aufbau und die Konstruktion li- nearer Codes und sind mit wichtigen Beispielklassen vertraut. Den Studierenden sind die mathematischen Grundlagen der Codierungstheorie bekannt, einschließlich der verwendeten al  gorithmischen Techniken und wichtiger Beweisverfahren. — Students know the structure and design of linear codes, andare familiar with important classes of examples. The stu dents know the mathematical foundations of coding theory, including algorithmic techniques and important proof method used. Fähigkeiten / Abilities Die Studierenden sind in der Lage, für praktische Anwendun gengeeignete Codierungsverfahrenzubestimmenundaufihre Korrektheit hin zu untersuchen. Sie können verschiedene Codierungsverfahren am Computer implementieren und auf ih re Effizienz analysieren. Sie sind in der Lage, grundlegende Berechnungsaufgaben selbständig zu bearbeiten und einfache Beweise zu führen. — Students are able to determine appropriate encoding methods and examine their correctness for practical applications. You canimplementdifferentencodingmethodsonacomputerand analyzetheirefficiency. Youareabletoeditbasiccomputation tasks independently and perform simple proofs. Kompetenzen / Competencies Die Studenten erwerben evaluative Kompetenzen in Bezug auf die Verknüpfung der theoretischen Inhalte ihres Studiumsmit praxisnahen Problemstellungen, organisatorische Kompetenzen in Bezug auf ihr Zeit- und Arbeitsmanagement, so wie selbstreflexive Kompetenzen in Bezug auf interdisziplinäre Verbindungenzwischendermodernen Datentechnik, dertheo retischen Informatik und der algorithmischen Mathematik. — The students acquire evaluative skills in relation to linking the theoretical contents of their studies with practical problems, organizational skills in relation to their time and work management, and self-reflective skills in relation to interdisciplina ry connections between the modern information technology, theoretical Computer Science and computational mathema tics.","Basierend auf der Einführung des grundlegenden Modells ei- nes binären symmetrischen Übertragungskanals werden ins- besondere Grundbegriffe wie Datenrate, Fehlerkorrektur und -kapazität, Hamming-Abstand und lineare Codes diskutiert. Für letztere werden wichtige Schranken wie die Singleton Schranke bewiesen und bedeutende Beispielklassen vorgestellt, z. B. Hamming-Codes, zyklische Codes, B CH und Reed Solomon-Codes. Neben der Diskussion der Eigenschaften und  Parameter dieser Codes werden auch Verfahren bereitgestellt wie man weitere, an eine Anwendung angepasste, Codes aus den bekannten erzeugen kann. Die Studenten erhalten aucheinen Einblick in moderne geometrische Methoden der Co dierungstheorie, z. B. Reed-Muller Codes und Goppa-Codes. Ferner werden die Codes in den Übungen in einem Compu teralgebrasystem (z. B. Co Co A) konkret implementiert und an praxisnahen Beispielen getestet. —Based on the introduction of the basic model of a binary sym metric transmission channel, in particular basic concepts suchas data rate, error correction, and - capacity, Hamming distance and linear codes are discussed. For the latter, import ant barriers are shown as the Singleton bound and presented significant sample classes, e. g. Hamming codes, cyclic codes, Reed-Solomon and B CH codes. Besides the discussion of the properties and parameters of these codes also methods areprovided on how to generate more codes adapted to an ap plication from the known. The students also get an insightintomoderngeometricalmethodsofcodingtheory, e. g. Reed Muller codes and Goppa codes. Furthermore, the codes are actually implemented in the tutorials in a computer algebra system (e. g. Co Co A) and tested on practical examples.",90-minütige Abschlussklausur 90-minute final written examination,"Tafelanschrieb, Beamer-Präsentation Blackboard, Projector presentation","J. H. van Lint, Introduction to Coding Theory, Springer, New York 1982",MSc Informatik/ Computer Science
5790,Struktur und Implementierung von Programmiersprachen,405010,Unregelmäßig Irregular,1 Semester,Größlinger,Größlinger,Deutsch German,Modulgruppe „Prog Soft“ Focus „Prog Soft“,3 V + 2Ü,75 Std. Präsenz + 60 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 75 contact hours + 60 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 7,Keine None,Keine None,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden sind mit den Techniken der syntaktischenund semantischen Sprachbehandlung von Übersetzern und In terpretern vertraut. Fähigkeiten / Abilities Die Studierenden sind in der Lage, prototypische sprachverar  beitende Systeme eigenständig zu erstellen. Kompetenzen / Competencies Die Studierenden sind in der Lage, Software Entwicklungsarbeiten mit der Erstellung kleinerer, domänenspezifischer Programmiersprachen zu unterstützen oder Anpassungen an grö ßeren sprachverarbeitenden Systemen vorzunehmen.","Behandlung der verschiedenen Phasen eines Übersetzers: Scanning (Erstellung eines Tokenstroms), Parsing (Erstellungeines Parsebaums), semantische Analyse (vornehmlich Ty püberprüfung), Zwischencodegenerierung und –optimierung, Aufgaben des Laufzeitsystems (vornehmlich Speicherzugriff und -verwaltung).",90min Klausur(zur Klausurzulassung BearbeitungvonÜbun- gen) 90-minute examination,"Beamer, Tafel, Overheadprojektor Projector, blackboard","Aho, Lam, Sethi, Ullman: Compilers - Principles, Techniques and Tools. Addison-Wesley.",MSc Informatik/ Computer Science
5791,Funktionale Programmierung,405053,Unregelmäßig Irregular,1 Semester,"Griebl, Fraser","Griebl, Fraser",Deutsch oder Englisch German or English,Modulgruppe „Prog Soft“ Focus „Prog Soft“,2 V + 2Ü,60 Std. Präsenz + 50 Std. Übungen + 70 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 50 hrs exercises + 70 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Keine None,Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden sind mit dem Paradigma der funktionalen Programmierung vertraut und können es anwenden und anderen Programmierparadigmen, insbesondere dem der imperati ven Programmierung, gegenüberstellen.  — The students will be familiar with the paradigm of functionalprogramming and can apply it for other programming para digms, particularly the imperative programming face. Fähigkeiten / Abilities Die Studierenden sind in der Lage, funktionale Programme zu schreiben und die Theorie der funktionalen Programmierung zur Optimierung von Programmen zu nutzen. Insbesonderehaben sie detaillierte Kenntnis der Programmiersprache Has kell. — Students will be able to write functional programs and to usethe theory of functional programming for optimization of pro grams. In particular, they will have detailed knowledge of the programming language Haskell. Kompetenzen / Competencies Mit der funktionalen Programmierung erschließt sich den Studierenden ein wichtiges, weiteres Programmierparadigma (ne benderimperativenundobjektorientierten Programmierung). Die Studierenden sind in der Lage, dieses artgerecht einzu setzen und somit ihren Software-Entwurfsaufgaben effizienter und verlässlicher gerecht zu werden. — Functional programming opens up an important additionalprogramming paradigm (next to the imperative and object oriented programming) to students. They will be able to meet their software design tasks more efficiently and reliably.","Grundkonzepte der Programmiersprache; theoretische Grund- lagen des Lambda-Kalküls; Programmierung mit Kombinato- ren (Operatoren, mit denen Programme kombiniert werdenkönnen); Programmbeweise und -herleitungen; Transforma tionsgesetze (zur Optimierung von Programmen); Monaden (zur quasi- imperativen Programmierung in Haskell) — Basicconceptsofprogramming, theoreticalfoundationsofthe lambda calculus; programming with combinators (operators with which programs can be combined); program proofs and derivations; transformation laws (for optimizing programs); monads (for quasi-imperative programming in Haskell)",90 min. Klausur 90-minute written examination,"Beamer, Tafel, Overheadprojektor Projector, blackboard, overhead projector","Folien / Lecture slides Simon Thompson: Haskell: The Craft of Functional Program- ming, Addison-Wesley Diverse andere Quellen / diverse other sources",MSc Informatik/ Computer Science
5795,Virtuelle Maschinen und Laufzeitsysteme,405197,Unregelmäßig Irregular,1 Semester,Größlinger,Größlinger,Deutsch German,Modulgruppe „Prog Soft“ Focus „Prog Soft“,2 V + 2Ü,60 Std. Präsenz + 45 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 45 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Keine None,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Teilnehmer kennen die unterschiedlichen Typen von virtu- ellen Maschinen und deren Einsatzgebiete, sowie verschiedene Implementierungsmethoden. Die Teilnehmer kennen gängige Optimierungs- und Profilingtechniken, sowie die Grundlagen der Speicherbereinigung und Ausnahmebehandlung. Außer dem kennen sie das C-Laufzeitsystem und seine Eigenschaftenim Hinblick auf Virtualisierung und gemeinsamer Betriebsmit telnutzung. Fähigkeiten / Abilities Die erfolgreichen Teilnehmer können eine virtuelle Maschinefür einen gegebenen Befehlssatz implementieren, sowohl mit tels eines Interpreters als auch eines Just-In-Time-Compilers. Die Teilnehmer beherrschen wichtige Optimierungs-techniken der Just-In-Time-Kompilation und können diese umsetzen. Kompetenzen / Competencies Die Studierenden werden in die Lage versetzt, Einsatzgebiete für virtuelle Maschinen zu erkennen, die Vor- und Nachteileverschiedener Typen von virtuellen Maschinen für einen gegebenes Einsatzgebiet unter verschiedenen Aspekten zu beurteilen und einen geeigneten Typ von virtueller Maschine auszuwählen. Weiterhinkönnendie Teilnehmer Optimierungspoten ziale beim Einsatz virtueller Maschinen beurteilen.","Grundlagen der Virtualisierung Speicherverwaltung und gemeinsame Betriebsmittelnutzung im C-Laufzeitsystem Typen von virtuellen Maschinen Implementierungstechniken für virtuellen Maschinen, Speicherbereinigung und Ausnahmebehandlung Profiling und Optimierung der Programmausführung in einer virtuellen Maschine",90 min Klausur 90-minute examination,"Präsentation mit Beamer und Tafel, Übungsaufgaben Projector presentation and blackboard, exercises","J. Smith, R. Nair, Virtual Machines: Versatile Platforms for Systems and Processes, Morgan Kaufmann, 2005 Eigene Vorlesungsfolien / Lecture slides",MSc Informatik/ Computer Science
5796,Domänenspezifische Sprachen,405204,Unregelmäßig Irregular,1 Semester,Größlinger,Größlinger,Deutsch oder English German or English,Modulgruppe „Prog Soft“ Focus „Prog Soft“,2 V + 2Ü,60 Std. Präsenz + 50 Std. Übungen + 70 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 50 hrs exercises + 70 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Programmierung I + I I, Grundlagen der Informatik Programming I + I I, Fundamentals of Computer Science",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden kennen die Einsatzgebiete sowie Vor- und Nachteile domänenspezifischer Sprachen (D SLs) und Techni ken zur Implementierung von D SLs. — Students will be familiar with the application fields, advanta ges and disadvantages of domain-specific languages (D SLs) and techniques for implementing D SLs. Fähigkeiten / Abilities Die Studierenden haben die Befähigung, D SLs anzuwenden, Compiler/Interpreter(inkl. Optimierer)für DS Lsmitverschiedenen Ansätzen zu implementieren sowie D SLs im Software Engineering vorteilhaft einzusetzen. —Students will have the ability to implement D SLs compi ler/interpreter (including optimizer) for D SLs with differentapproaches and D SLs in software engineering used advanta geously. Kompetenzen / Competencies Die Studierenden erkennen Anwendungsfälle, die für D SLs geeignetsind, entwickelnggf. einegeeignete DS Lundimplemen tieren diese mit aktuellen Technologien. —Students acquire the skills to identify use cases that are suita ble for D SLs, possibly develop a suitable D SL and implement this with current technologies.","Abgrenzung zwischen D SLs und universellen Programmier- sprachen, Beispiele für D SLs (u. a. eingebetteter Parser, S QL, C++ Templates, U ML, X ML, G UI- Beschreibungssprachen). Anwendungsgebietevon DS Ls, u. a. Software-Engineering(Be ziehung u. a. zu U ML, Model-Driven Architecture, „Language Workbenches“, Intentional Programming), visuelle Program mierung, Compilerbau, Hochleistungsrechnen. Kosten-Nutzen-Abwägung beim Einsatz von D SLs, „gutes“ Design von D SLs. Kritische Diskussion der Vor- und Nachteile des Einsatzes von D SLs. Implementierung von D SLs als interne und externe Sprache. Herausforderungen bei der Implementierung von D SLs (u. a. semantische Analyse, Fehlermeldungen), Implementierungdo mänenspezifischer Optimierer und Codegeneratoren. —Demarcation between D SLs and purpose programming lan guages, examples of D SLs (including embedded parsers, S QL, C++ templates, U ML, X ML, G UI description languages). Applicationsof DS Ls, amongothers, Softwareengineering(relationship among other things to U ML, Model-Driven Archi tecture, ""Language WorkbenchesÏntentional Programming), visual programming, compilers, and high performance com puting.  Cost-benefit assessment in the use of D SLs, ""good""design of D SLs. Critical discussion of the advantages and disadvantages of the use of D SLs. Implementation of D SLs as internal and external language. Challenges in the implementation of D SLs (e. g. semantic analysis, error messages), implementation of domain-specific op timizer and code generators.",90 min Klausur 90-minute examination,"Präsentation und Beamer, Tafel Blackboard, Projector presentation, overhead projector","Vorlesungsfolien / Lecture slides Domain-specific languages. Martin Fowler, Addison-Wesley, 2011",MSc Informatik/ Computer Science
5800,Mixed Reality,405216,Wird vermutlich nicht mehr angeboten Probably not offered anymore,1 Semester,Grubert,Grubert,Deutsch oder English German or English,Modulgruppe „Inf Komm“ Focus „Inf Komm“,2 V + 1Ü,"45 Std. Präsenz + 105 Std. Übungsaufgaben, Nachbearbei- Workload tung des Vorlesungsstoffs und Prüfungsvorbereitung 45 contact hours + 105 hours exercises, independent study and exam preparation",ECTS/Credits: 5,Keine None,"S EPoder ME SPraktikum, Bildverarbeitung, Programmierung in Java oder Programmierung 1+2, Grundlagen der Mensch- Maschine-Interaktion S EP or M ES Practical, Image Processing, Programming in Java or Prorgramming 1+2, Basics of Human-Computer Interaction",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden kennen Grundlagen und Anwendungen von  Mixed Reality Systemen. Insbesondere sind die Studierendenbefähigt Unterschiede und Gemeinsamkeiten von Augmented Reality und Virtual Reality Systemen, sowie artverwandten Techniken zu erklären. Weiterhin können Registrierungsund Trackingverfahren, Displaysysteme, Renderingalgorithmenund Interaktionsmethodencharakterisiertwerden. Besonderheiten der mobilen Augmented Reality und immersiver Vir tual Reality erklärt werden. Fähigkeiten / Abilities Die Studierendenbeherrschentheoretischeundpraktische Fra gestellungen von Mixed Reality Systemen. Insbesondere sind sie befähigt ein rudimentäres Augmented Reality Systemebestehend aus Tracking-, Rendering-, und Interaktionskom ponenten programmiertechnisch umzusetzen. Dazu benötigte grundlegende Algorithmen können sie erklären und ggf. mitalternativen Algorithmen vergleichen (z. B. Einsatz von ver schiedenen Merkmalsdeskriptoren). Siesindweiterhinbefähigt relevante Aspekte der Mensch-Maschine-Interaktion in Mixed Reality Umgebungen anzuwenden (z. b. Objektselektierungs verfahren). Kompetenzen / Competencies Die Teilnehmer erlernen theoretische und praktische Kompetenzeninder Konzeption, Umsetzungund Evaluierungvon Mi xed Reality Systemen. Insbesonderewerden Kompetenzenzum modulbasierten Erstellen einer komplexen Augmented Reality Softwareerlernt. Weiterhinsinddie Studierendenbefähigtein zelne Module auch auf andere Problemstellungen anzuwenden (z. B. Objekterkennung).","Grundlagen und Geschichte der Mixed Reality Mixed Reali- ty Kontinuum. Unterschiede zwischen Augmented Reality und Virtual Reality. Augmented Reality Kernmodule. Augmented Reality Plattformen. Registrierungs- und Tracking Grundlagen. Unterschiede zwi schen räumlicher und visueller Registrierung. Unterschiedezwischen Registrierung und Tracking. Mixed Reality Anforderungen and Trackingsysteme. Taxonomie von Trackingsys temen. Überblick über ausgewählte Trackingsysteme. Kamerakalibrierung. Bedeutung der Kamerakalibrierung für Mixed Reality Systeme. Lochkameramodell. Extrinsische und Intrinsiche Kameraparameter. Verzeichnung. Algorithmen zur Kamerakalibrierung. Grundlagen des Markertracking. Markertracking Pipeline. Natural Feature Tracking. Grundlagen. Was sind gute Features? Merkmalsdetektion, -beschreibung, und –matching. Ausgwählte Merkmalsdetektoren und – deskriptoren. Template basiertes Tracking. Erweiterte Trackingverfahren (Deformier bare Oberflächen, S LA M). Szenengraphen. Unterschiede low-level A PIs (Open GL) und Szenegraphen. 3 D Engines. Knoten. Modelieren von Szenen mittels Knotenhierarchien. Graphentraversierung. Intersection und Picking. Grundlagen des Mixed Reality Renderings. Erstellung von Video-See-Through Augmented Reality Szenen mittels Sze nengraphen. Displaysysteme. Displayeigenschaften. Mensch-zentrierte Displaytaxonomie. Head-Mounted Displays. Optische vs. Video See-Through Displays. Immersive V R Displays. Handheld Displays. Projektive Displays. Formveränderbare Displays. Multi Display Umgebungen. Optische See-Through Kalibrierung. Unterschiede und Gemeinsamkeiten zur Kamerakalibrierung. Datensamlungsmethoden. Bestätigungsmethoden. Evaluierungsmethoden. Reka librierung. (Semi-) automatische Kalibrierung. Erweitertes Mixed Reality Rendering. User Perspectivevs. De vice Perspective Rendering. Simulierenvon Kameraartefakten. Schätzung der Umgebungsbeleuchtung. Augmented Reality Visualisierungstechniken. X-Ray. Ghosting. Cut Aways. Explosionsdiagramme. Labeling. Cluttermanage ment. Informationsfilterung. Mixed Reality Interaktionstechniken. Interaktionsaufgaben. Interaktionsgeräte. Touchbasierte Interaktion. Räumliche Inter aktion. Multimodale Interaktion.","90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten) oder Portfolio-Prüfung; Mögliche Portfoliobestandteile sind: • Schriftliche Teilprüfung • Technischer Bericht• Dokumentierter und funktionsfähiger Quelltext für ein zelne Module • Live Systemdemonstration • Erstellung von Videodemonstrationen• Präsentationdererstellten Materialienunter Einsatzge eigneter Präsentationstechniken, z. B. Power Point • Teilpräsentationen zu Einzelleistungen • Laufende, fortzuschreibende technische Teilberichte zur Zusammenfassung zu einem Gesamtdokument. • Abschlusspräsentation Die Bearbeitung der Portfolio-Leistungen erfolgt begleitendzur Lehrveranstaltung. Die Bearbeitungszeit der einzelnen Be standteile der Portfolioprüfung darf dabei 4 Wochen nicht  übersteigen. Die letzte Leistung ist bis spätestens 4 Wochen nach Ende der Vorlesungszeit zu erbringen. Der Umfang eines einzelnen technischen Berichtes soll dabei 10 Seiten nicht übersteigen. Der Umfang eines Teilberichts soll dabei 5 Seiten betragen. Der Umfang einer Teilpräsentation soll dabei 10 Minuten um fassen und durch geeignete Medien und Präsentationsformen unterstützt werden. Der Umfang der Abschlusspräsentation soll dabei 15 Minuten umfassen und durch geeignete Medien und Präsentationsformen unterstützt werden. Die genauen Anforderungen werden vom Dozierenden zu Be ginn der Veranstaltung bekanntgegeben. 90-minute written or 20-minute oral examination or portfolio; the precise mode of assessment will be announced at the start of the semester","Präsentation mit Projektor, Gruppenarbeit, Wiki Projector presentation, group work, wiki",wird in Abhängigkeit der konkreten Aufgaben- stellung ausgewählt und bekanntgegeben.,MSc Informatik/ Computer Science
5802,Spatial Augmented Reality,405215,Wird vermutlich nicht mehr angeboten Probably not offered anymore,1 Semester,Grubert,Grubert,Deutsch oder Englisch German or English,Modulgruppe „Inf Komm“ Focus „Inf Komm“,"3 P Für die Vorlesung und die Übung im Rahmen der Lehrveran-staltung besteht keine Anwesenheitspflicht. Jedoch wird Anwesenheit empfohlen. Dies begründet sich aus den Anforde rungen an die benötigte Hardware um die Aufgabenstellungenerfolgreich abschließen zu können (Tiefenkamera + Projek tor). Diese Hardware ist nur im Labor verfügbar und kann nichtausgeliehenwerden. Die Lehrveranstaltungistauf Grund ihrer didaktischen Konzeption, des Betreuungsaufwands undder verfügbaren technischen Ausrüstung auf maximal 12 Studierende beschränkt und umfasst Studiengruppen von 3 Per sonen.","10 Std. Vorbereitungstreffen + 20 Std. Teammeetings + 10 Workload Std. Projektmanagement+90 Std. Entwurf, Implementierungund Validierung von Anwendungen + 10 Std. Berichterstel lung + 10 Std. Präsentationen und Vorbereitung Gesamt: 150 Std. 10 hrs. preperation meeting + 20 hrs. team meeting + 10 hrs. project management + 90 hrs. design, implementationand validation of applications + 10 hrs. report + 10 hrs. pre sentation and preparation Overall: 150 hrs.",ECTS/Credits: 5,Keine None,"S EPoder ME SPraktikum, Bildverarbeitung, Programmierung in Java oder Programmierung 1+2, Grundlagen der Mensch- Maschine-Interaktion, Mixed Reality S EP or M ES Practical, Image Processing, Programming in Java or Prorgramming 1+2, Basics of Human-Computer Interaction, Mixed Reality",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden kennen technische Grundlagen und Anwen-dungen von räumlichen Augmented Reality Systemen. Insbesonderesindsiemitdengrundlegendenerforderlichen Kalibrierungsverfahrenfür Projektor-Kamera Systemenvertraut. Weiterhinerhaltensie Kenntnisüberden Einsatzvon Trackingver fahren, insbesondere auf Basis von Tiefenkameras. Sie kennendie Herausforderungenbei Projektionenmit Multiprojektorsys temen, sowie der Projektion auf nicht planare Oberflächen. Fähigkeiten / Abilities Die Teilnehmer können grundlegende Algorithmen zur Projektor-Kamera Kalibrierung umsetzen. Insbesondere kön nen sie eine R GB-Kamera Kalibrierung und geometrische Projektor-Kamera Kalibrierungdurchführen. weiterhinkönnen Sierelevante Rederingalgorithmenwie Projektive Texturierung und einfache 3 D Trackingverfahren anwenden. Kompetenzen / Competencies Auf Basis der erlernten Verfahren können die Studierende räumliche AR Systemeerstellen. Siekönnen Projektor-Kamera Einheiten mit 3 D Trackingsystemen kombinieren. Dies bildetdie Basis um interaktive Systeme umzusetzen, z. b. zur Steue rung von projizierten Bildschirminhalten auf einer Leinwand oder die perspektivisch korrekte Darstellung von 3 D Modellen aus unterschiedlichen Nutzerperspektiven. Die Studierenden könnenweiterhin Herausforderungenbeimpraktischen Einsatz von räumlichen Augmented Reality Systemen erkennen und adressieren.",Das Praktikumbestehtauseinemeinführendentheoretischem und einem praktischen Teil. Theoretischer Teil: Grundlagen projektionsbasierter Augmented Reality.  Anwendungen projektionsbasierter Augmented Reality. Die Rolle von Tiefenkameras für räumliche Augmented Reality. Trackingverfahren für projektionsbasierte Augmented Reality. Projektion auf nicht planare Oberflächen. Radiometrische Kompensation. Multi-Projektor Systeme. Projektive Texturie rung. Praktischer Teil:Grundlangen (für alle Studierenden verpflichtend): Geometrische R GB-Kamerakalibrierung. Geometrische Projektor Kamera Kalibrierung (R GB + Tiefenkamera). Projektive Tex turierung Neben der Implementierung der oben genannten Grundlegenden Algorithmen können Studierende optional eine Anwen dung oder weitere grundlegende Algorithmen implementieren:Anwendungen: Perspektivisch korrekte Projektion aus ver schiedenen Nutzerpositionen. Augmentierung menschlicher Körperteile. Einevonden Studierendendefiniertemitder Lehr veranstaltungsleitung abgestimmte Beispielanwendung (z. b. augmentiertes Pong Spiel auf Leinwand) Alternative grundlegende Algorithmen: Projektion auf nichtplanare Oberflächen. Multi-Projektor Kalibrierung. Radiome trische Kompensation,"90-minütige Klausur oder mündliche Prüfung (ca. 60 Minu- ten) oder Portfolio-Prüfung; Mögliche Portfoliobestandteile sind:• Dokumentierter und funktionsfähiger Quelltext für einzelne Module (sowohl im Quelltext als auch als lauffä hige Anwendung) • Live Systemdemonstration • Erstellung von Videodemonstrationen • Schriftliche Teilprüfung • Technischer Bericht• Dokumentierter und funktionsfähiger Quelltext für ein zelne Module • Erstellung von Videodemonstrationen• Präsentationdererstellten Materialienunter Einsatzge eigneter Präsentationstechniken, z. B. Power Point • Teilpräsentationen zu Einzelleistungen • Laufende, fortzuschreibende technische Teilberichte zur Zusammenfassung zu einem Gesamtdokument. • Abschlusspräsentation Die Bearbeitung der Portfolio-Leistungen erfolgt begleitendzur Lehrveranstaltung. Die Bearbeitungszeit der einzelnen Be standteile der Portfolioprüfung darf dabei 4 Wochen nicht übersteigen. Die letzte Leistung ist bis spätestens 4 Wochen  nach Ende der Vorlesungszeit zu erbringen. Der Umfang eines einzelnen technischen Berichtes soll dabei 10 Seiten nicht übersteigen. Der Umfang eines Teilberichts soll dabei 5 Seiten betragen. Der Umfang einer Teilpräsentation soll dabei 10 Minuten um fassen und durch geeignete Medien und Präsentationsformen unterstützt werden. Der Umfang der Abschlusspräsentation soll dabei 15 Minuten umfassen und durch geeignete Medien und Präsentationsformen unterstützt werden. Die genauen Anforderungen werden vom Dozierenden zu Be ginn der Veranstaltung bekanntgegeben. Die Leistungskontrollekannim Rahmeneinermündlichen Prü fung als vertiefte fachliche Diskussion erfolgen. 180-minute written or 60-minute oral examination or portfo lio; the precise mode of assessment will be announced at the start of the semester","Präsentation mit Projektor, Gruppenarbeit, Wiki Projector presentation, group work, wiki",wird in Abhängigkeit der konkreten Aufgaben- stellung ausgewählt und bekanntgegeben.,MSc Informatik/ Computer Science
5803,Context Recognition Architectures,405237,Jedes Sommersemester Every summer semester,1 Semester,Kranz,"Hölzl, Kranz",Englisch English,Modulgruppe „I TS“ Focus „I TS“,2 V + 1Ü,"45 Std. Präsenz + 105 Std. Übungsaufgaben und Vor- und Workload Nachbereitung 45 contact hours + 105 hours exercises, independent study and exam preparation",ECTS/Credits: 5,Keine None,"S EPoder ME SPraktikum, Programmierungin Javaoder Pro- grammierung 1 und Programmierung 2, Einführung in die Kontexterkennung, Grundlagen der Mensch-Maschine Inter aktion S EPor ME SPractical, Programmingin Javaor Prorgramming1+2, Introduction to Context Recognition, Basics of Human Computer-Interaction",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge  Die Studierenden kennen die grundlegenden Entwurfsparadig- men, repräsentative und wichtige Vorhaben auf dem Gebietder Lehrveranstaltung und Evaluationskriterien für Kontext Erkennungsarchitekturen („context recognition architectu res“). Die Studierenden wissen wie Erkennungsmethodiken in Echtzeitsystemen unter Zuhilfenahme von aktuellen Methoden des maschinellen Lernens und der mathematischen Mus tererkennung implementiert werden. Die Studierenden kennen die grundlegenden, theoretischen und praktischen Probleme beim Design einer Kontext-Erkennungsarchitekturen. — Students know the basic design principles, representative andimportent projects in the area oft the course, and evaluati on criteria’s for Context Recognition Architectures. Students know how recognition methodologies are implemented in real time systems by applying state of the art machine learning and pattern classification methodologies. Students know the fundamental theoretic and practical problems when designing context recognition architectures. Fähigkeiten / Abilities Die Studierenden können das erworbene Wissen für die einzel nen Teilschrittedersogenannten„Activity Recognition Chain“(Sensor Selektion, Sensor Sampling, Segmentierung, Merkmals Extraktion, Klassifikation, Fusionierung, und symboli sches Schließen) anwenden, diskutieren, und implementieren. — Studentscanusetheirknowledgeaboutthesinglestepsofthe so called “Activity Recognition Chain” ( i. e. sensor selection, sensor sampling, segmentation, feature extraction, classification, fusion, and symbolic processing/reasoning) to apply, dis cuss, and implement it. Kompetenzen / Competencies Die Studierenden erwerben theoretische und praktische Kom petenzen (i) in der Konzeptionierung, (ii) im Design, (iii) in der Implementierung und (iv) Umsetzung und Evaluierungvon Kontext-Erkennungsarchitekturen. Während der Aufgabenstellung wird besonderes Augenmerk auf die Wiederver wendbarkeit der entwickelten Softwarekomponenten gelegt, um diese für zukünftige Anwendungsszenarien flexible einset zen zu können. — Studentslearntheoreticalandpracticalcompetencies(i)inthe conception, (ii) in the design, (iii) in the implementation and (iv) in the evaluation of Context Recognition Architectures. During the practical tasks, special focus is put on the reu  sability of the developed software components to make them easily (re-)usable in future application scenarios.","e: The Spiritof Context Aware Com- puting Historischer Hintergrund, Pionierarbeiten- und einflussrei che Arbeiten, Anwendungsszenarien, Forschungsrichtungen & Trends, Ausblick Sensors Übersicht über verfügbare Sensorik mit dem Fokus auf Kontext- Erkennungsarchitekturen (z. B. : I MUs (Inertial Measurement Units zur Aktivitätserkennung), Umgebungssen soren, Biosensoren, Smartphone als Sensorplattform, etc. ). Design von Sensorknoten & Kommunikationsarchitekturen (Bluetooth, Zigbee, etc. ). Context Aware System Design Principles I Einführung in die Aktivitäts- und Kontexterkennungskette zur Transformation von rohen Sensordaten hin zu semantischer Information. Context Aware System Design Principles I I Detailliertetheoretische Behandlungdereinzelnen Schritteder Aktivitäts- und Kontexterkennungskette sowie Diskussion der notwendigen einzelnen Schritte. Context Aware System Design Principles I II Kombination der erlerntem Methoden hin zu einer echtzeitfähigen, Aktivitäts- und Kontexterkennungsarchitektur. Identifizierung von spezifischen Architekturschwächen der Designan sätze (Top-Down / Bottom-Up) und deren möglicher Lösung.  Identification, Presence & Tracking Identifizierung von Menschen & Dingen; Technologien zur Identifikation (R FI D, N FC), Positionierung, Orientierung, “Smart Dust”, Surfacewave Transponder, Visuelle Codes (Q R), Artificial Noses, ausgewählte Anwendungsfälle (z. B. : Fahrererkennung, Aktivitätserkennung, etc. ) Social Aware Systems & Patterns Social Computing im Allgemeinen, graphenbasierte Algorith men zur Community Erkennung. Smartphone als skalierende Sensor-Plattform zur “Crowd” Kontexterkennung. Looking into the future Einführung in Zeitreihenvorhersage (Multiplicative Time Se ries Model, A RM A, A RI MA); Kontextvorhersagebasierendauf State Space Models (H MM). Security Matters? Definition von Security und Privacy vor allem im Bereich des Ubiquitous Computing; Solove’s Privacy Taxonomy; Fair Information Principles, gesetzliche Regularien, Implikationen für Ubi Comp, Shamir Tags, kritische Beispiele von R FI D und “Smarten” Geräten. Wearable Computing Technologie Reviewund Diskussionvon Anwendungsszenarien (Brillen, Smart Phones, Smart Watches, Fitness Trackers, etc. ) Energy Efficient Design Methodologies Diskussion spezifischer Designs zur Verringerung des Energieverbrauches (Hard- & Software) um lange (optimierte) Sys temlaufzeiten zu erhalten. — The Spirit of Context Aware Computing Historical Background, Pioneering and Influential Work, App lication Cases, Current Research Trends, Outlook Sensors Overview of available sensors especially suited for the use in context recognition Architectures. (e. g. , inertial measurement unitsforwearableactivityrecognition; Environmental Sensors, Biosignal, Smartphoneasasensing Platform, etc. ). Sensor No de Design & Communication (Bluetooth, Zig Bee, etc. ) Context Aware System Design Principles I Introducing the Activity and Context recognition chain to transform raw sensor data towards semantic information. Context Aware System Design Principles I I Detailed walkthrough and methodological explanation of the necessary steps in the Activity and Context recognition chain. Context Aware System Design Principles I II Combination of learned methodologies towards a realtime, ac  tivity and context recognition architecture. Identification ofspecific shortcommings of bottom-up vs. top-down architec tures and their possible solution. Identification, Presence & Tracking Identifying Human & Things; Technologies for Identification(R FI D, N FC), Positioning, Orientation, Smart Dust, Surfacewave Transponder, Visual Codes (Q R), Artificial Noses, Selected Application Cases (e. g. , Driver Identity-/Activity Reco gnition) Social Aware Systems & Patterns Social Computingingeneral, Algorithmsbasedongraphtheory for community detection, Smart Phone as a Sensing Plat form on multiple scale and for Crowd Context Detection Looking into the future Introduction into Time Series Prediction, Multiplicative Time Series Model, A RM A, A RI MA, Context Prediction based on State Space Models (H MM) Security Matters? Security and Privacy Definitions, Solove’s Privacy Taxanomy, Legal Issues, Fair information principles, Ubi Comp Implications, Shamir Tags, Critical Examples of R FI D and Smart De vices. Wearable Computing Off the shelf technology review and application scenarios dis cussion (Glasses, Smart Watches, Fitness Trackers). Energy Efficient Design Methodologies Design specifics to ensure low power consumption (in terms of soft- and hardware techniques) resulting in long (and/or optimized)","90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten) oder Portfolio-Prüfung; Portfoliobestandteile sind: • Schriftliche Teilprüfung • Praktischer Teil – Systemimplementierung – Dokumentierter und funktionsfähiger Quelltext– Laufende, fortzuschreibendetechnische Teilberichte zur Zusammenfassung zu einem Gesamtdoku ment. – Abschlusspräsentation Die Bearbeitung der Portfolio-Leistungen erfolgt begleitendzur Lehrveranstaltung. Die Bearbeitungszeit der einzelnen Be standteile der Portfolioprüfung darf dabei 3 Wochen nicht übersteigen. Die letzte Leistung ist bis spätestens 4 Wochen nach Ende der Vorlesungszeit zu erbringen.  Der Umfang der Abschlusspräsentation soll dabei 15 Minutenumfassen und durch geeignete Medien und Präsentationsfor men unterstützt werden. Die genauen Anforderungen werden vom Dozierenden zu Be ginn der Veranstaltung bekanntgegeben. 90-minute written or 20-minute oral examination or portfolio; the precise mode of assessment will be announced at the start of the semester","Präsentation mit Projektor, Gruppenarbeit, Wiki Projector presentation, group work, wiki",wird in Abhängigkeit der konkreten Aufgaben- stellung ausgewählt und bekanntgegeben.,MSc Informatik/ Computer Science
5804,Scientific Methods and Technical Writing,479810,Unregelmäßig Irregular,1 Semester,Kranz,Kranz,Deutsch oder Englisch German or English,Modulgruppe „I TS“ Focus „I TS“,2 V + 1Ü,"45 Std. Präsenz Vorlesung + 30 Std. Präsenz Übung + 75 Workload Std. Übungsaufgaben/Referate, Vor- und Nachbearbeitung, Gesamt: 150 Std. 45 + 30 contact hours + 75 hrs exercises/presentation, inde pendent study and exam preperations (total: 150 hrs)",ECTS/Credits: 5,Keine None,Keine None,Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden kennen die grundlegenden Bestandteile wis- senschaftlicher Arbeiten. Die Studierendenkennen Werkzeugefür die wissenschaftliche Recherche, Quellenarbeit und Daten analyse.  — Theparticipantsarefamiliarwithbasicpartsofscientificwork. They know tools for scientific research, working with sources and data analysis. Fähigkeiten / Abilities Die Studierenden können Publikationsmetriken interpretieren. Die Studierenden können wiederkehrende Typen von Daten geeignet mittels statistischer Verfahren und Tests auswerten und aufbereiten. — The students are able to interprete publication metrics. They are able to process and analyse recurring types of data with suitable statistical methods and tests. Kompetenzen / Competencies Die Studierenden sind in der Lage selbständig unter Einsatzgängiger Suchmaschinenund Werkzeugewissenschaftliche Ar beiten zu recherchieren und miteinander in Bezug zu setzen. Die Studierenden können technische Berichte von begrenztem Umfang nach wissenschaftlichen Kriterien schreiben. — The students are able to research the relevant literature using common search engines and tools and to establish and assess therelationshipofthesources. Theyareabletowritetechnical reports of limited size on the basis of scientific criteria.","Methodik: Qualitative Methoden, Quantitative Methoden, Messtheorie, Statistische Verfahren Technisches Schreiben und wissenschaftliche Berichte: Re cherche nach wissenschaftlichen Beiträgen, Vorwärts- und Rückwärtssuche, Datenbanken, Zitierrichtlinien und -stile, Struktur und Aufbau wissenschaftlicher Arbeiten in der Infor matik, Publikationsprozesse, Veröffentlichungsmöglichkeiten, Pre-Print Archive, Open Access, Impact Factors, Publikati onskulturen Begutachtungsverfahren:Peer-Review System, Open Reviews, Review Policies (open, blind, double-blind), technische Lösungen, Ethische Aspekte Werkzeuge für wissenschaftliches Arbeiten und Schreiben, Software, Tools, Ressourcen, Werkzeu ge für die Datenauswertung, -analyse und -visualisierung. Informationsvisualisierung und Visual Communication Praktische Hilfestellungen für das Erstellen englischer Berich te Vortragstechniken, Präsentationstechniken — Methodology: Qualitative methods, quantitative methods, foundations of measurement, statistical methods  Technical writing and scientific reports Review procedure Tools for research and scientific writing Information visualization and visual communication Practical assistance for compilation of reports in English Communication and presentation techniques","Klausurod. mündl. Prüfungod. Portfolio(techn. Bericht, Prä- sentation) Diegenaue Prüfungsartwirdzu Beginndes Semestersbekannt gegeben. Mögliche Portfoliobestandteile sind• Eigenständige Zusammenfassungvonrelevantenwissenschaftlichen Arbeitenzuden Themender Lehrveranstal tung • Präsentationen • Datensätze und deren Auswertung • Präsentation der erstellten Materialien unter Einsatz geeigneter Präsentationstechniken, z. B. Power Point, Desktopreviews, Postern, Flipchart, Whiteboard, Tafel Die genauen Anforderungen werden vom Dozenten zu Beginn der Veranstaltung bekanntgegeben. Written examination or oral examination or portfolio The pre cise mode of assessment will be announced at the start of the semester.","Präsentation mit Projektor, Tafelanschrieb, Gruppenarbeit Projector presentation, blackboard, group work",Wird vom Dozenten bekanntgegeben Will be announced by the lecturer,MSc Informatik/ Computer Science
5809,Mobile Human-Computer Interaction,479510,Unregelmäßig Irregular,1 Semester,Kranz,Kranz,Deutsch oder Englisch German or English,Modulgruppe „I TS“ Focus „I TS“,3 V + 2Ü,45 Std. Präsenz Vorlesung + 30 Std. Präsenz Übung + 30 Workload Std. Übungsaufgaben/Referate + 135 Std. Vor- und Nachbe arbeitung45 + 30 contact hours + 30 hrs exercises + 135 hrs indepen dent study and exam preparations,ECTS/Credits: 8,Keine None,Grundlagen der Mensch-Maschine Interaktion Programming Applications for Mobile Interaction,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden kennen grundlegende Techniken zur Mensch-Maschine Interaktion mit mobilen Systemen. Die Studierenden können verschiedene Eingabe- und Ausgabe Technologienbeschreibenundkenneninsbesondere Techniken zur Text-, Gesten- und Sprachein- und -ausgabe. Die Studierenden können Techniken zur Anzeige von visuellen Informa tionenaufeinem Gerätbzw. geräteübergreifenderläutern. Die Studiernden verstehen die grundlegenden Interaktionskonzep te mobiler Plattformen. Fähigkeiten / Abilities Die Studierenden sind in der Lage, Benutzungsschnittstellen für konkrete Anwendungsfälle und -szenarien zu entwerfen, prototypisch umzusetzen und zu evaluieren. Die Studierendensind in der Lage, die Fähigkeiten und Potentiale einer mobi len Plattform für die Entwicklung konkreter Anwendungen zu nutzen. Kompetenzen / Competencies Die Studierenden sind in der Lage einzelne Technologien und Techniken hinsichtlich Einsatzgebiet, Effektivität, Effizienz, Fehleranfälligkeit und Benutzeraktzeptanz bewerten. Die Stu dierenden sind in der Lage Studien für die Ermittlung und Bewertung der qualitativen und quantitativen Eigenschaftenmobiler Systeme für die Mensch-Maschine Interaktion zu ent wickeln, entwerfen, durchzuführen und auszuwerten.","• Mobile Betriebssysteme, Anwendungs- entwicklung, Plattformabhängige Softwareentwicklung, Entwicklungswerkzeuge und –plattformen • Webservices und Cloud Services• Texteingabe, Gesteneingabe, Augmented Reality, Virtu al Reality, Projektion • Sensordatenverarbeitung • Informationsverarbeitung, Informationsvisualisierung, Informationswahrnehmung• Psychologische Grundlagen der menschlichen Informati onswahrnehmung und –verarbeitung • Qualitative Methoden, quantitative Methoden","Klausur od. mündl. Prüfung od. Portfolio (techn. Bericht, Quelltext u. Präsentation). Die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. Writtenexaminationororalexaminationorportfolio. Thepre cise mode of assessment will be announced at the start of the semester.","Präsentation mit Projektor, Tafelanschrieb, Gruppenarbeit Projector presentation, blackboard, group work",Wird vom Dozenten / von der Dozentin bekannt gegeben Will be announced by the lecturer,MSc Informatik/ Computer Science
5810,Statistische Datenanalyse,405187,Unregelmäßig Irregular,1 Semester,Müller-Gronbach,Müller-Gronbach,Deutsch oder Englisch German or English,Modulgruppe „Allg Ber“ Focus „Allg Ber“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Analysis I, Lineare Algebra I, Einführung in die Stochastik Analysis I, Linear Algebra, Introduction to Stochastic",Verwendbarkeit in weiteren Studiengängen,Grundkonzepte zur Konstruktion und Beurteilung von Verfah- ren zur Lösung statistischer Probleme. Einsetzen von statistischen Verfahren in praktischen Anwendungsproblemen. Interpretation der Ergebnisse und ihre Beur teilung anhand von Gütekriterien.  — Basicconceptsforthedesignandevaluationofvisualanalytics applications methods for solving statistical problems. Use ofstatistical methods in practical applicationproblems. Interpre tationoftheresultsandtheirevaluationbasedonperformance criteria,"• Elemente der deskriptiven Statistik • Statistische Beobachtungsmodelle • Konstruktion und Beurteilung von Schätzverfahren • Parametrische und nichtparametrische Testverfahren • Konfidenzbereiche• In Abhängigkeitvonlaufenden Projektenwahlweise Ele mente aus:• Regressionsmodelle, Zeitreihenanalyse, Klassifikations verfahren, Clusteranalyse, Multivariate Statistik — • Elements of descriptive statistics • Statistical observation models • Design and evaluation of estimation methods • Parametric and nonparametric tests • Confidence intervals • Depending on ongoing projects optional elements: • Regression models, time series analysis, classification process, cluster analysis, multivariate statistics","90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 90-minute written or 20-minute oral examination, the precisemode of assessment will be announced at the start of the se mester","Präsentation und Beamer, Folien oder Tafel Presentation and projector, transparencies or chalkboard","Lehn, Wegmann: Einführung in die Statistik Behnen, Neuhaus: Grundkurs Stochastik",MSc Informatik/ Computer Science
5814,Wahrscheinlichkeitstheorie,455341,Unregelmäßig Irregular,1 Semester,Müller-Gronbach,Müller-Gronbach,Deutsch oder Englisch German or English,Modulgruppe „Alg Math“ Focus „Alg Math“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Analysis I, I I, Lineare Algebra I, I I, Einführung in die Stochas- tik Analysis I, I I, Linear Algebra I, I I, Introduction to Stochastics",Verwendbarkeit in weiteren Bachelor Mathematik Studiengängen Bachelor Mathematics,Verständnis der Grundkonzepte und -techniken sowie der zen- tralen Ergebnisse der maßtheoretisch fundierten Wahrschein- lichkeitstheorie. Fähigkeit zur Modellierung und Analyse komplexer zufälliger  Phänomene,"Grundkonzepte der Maß- und Integrationstheorie, u. a. Maßräume und messbare Abbildungen, Konstruktion des Lebesgue-Maßes, Maßintegrale, Produktmaße, Maßkerne, Vertauschungssätze für Integrale. Grundkonzepte und zentrale Ergebnisse der W-Theorie, u. a. Konvergenz von Folgen von Zufallsvariablen, Unabhängigkeit und 0-1-Gesetze, Charakteristische Funktionen, Gesetze der grossen Zahlen, Zentraler Grenzwertsatz, Bedingte Verteilungen und bedingte Erwartungswerte","120-minütige Abschlussklausur oder mündliche Prüfung (ca. 30 Minuten). Die genaue Prüfungsart wird zu Beginn des Se- mesters bekannt gegeben. 120-minute written or 30-minute oral examination, the preci se mode of assessment will be announced at the start of the semester.","Präsentation und Beamer, Folien oder Tafel Presentation and projector, slides or blackboard",Bekanntgabedurch Dozenten/Announcedduringthelecture,MSc Informatik/ Computer Science
5815,Computational Stochastic Processes,451402,Unregelmäßig Irregular,1 Semester,Müller-Gronbach,Müller-Gronbach,Deutsch oder Englisch German or English,Modulgruppe „Alg Math“ Focus „Alg Math“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Analysis I + I I Lineare Algebra I + I I, Programmierung I, Ein- führung in die Stochastik, Stochastische Prozesse, Stochasti- sche Simulation Analysis I + I I Linear Algebra I + I I, Programming I, Introduction to Stochastics, Stochastic Processes, Stochastic Si mulation",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Kenntnisse grundlegender Algorithmen zur zeitdiskreten und zeitkontinuierlichen Simulation von Gauss-Prozessen und stochastischen Differentialgleichungen, ihre theoretischen Eigen schaften und typische Anwendungen. —Knowledge of basic algorithms for discrete- and continuoustime simulation of Gaussian processes and stochastic differen tial equations, their theoretical properties and applications. Fähigkeiten / Abilities Auswahl geeigneter Simulationsalgorithmen für konkrete Fragestellungen, zu ihrer effizienten Implementierung, zur praktischen Durchführung von entsprechenden Simulationsexperi menten sowie zur Darstellung und Bewertung der Ergebnisse. — Ability to select appropriate simulation algorithms for specificquestions to their efficient implementation, the practical im plementation of relevant simulation experiments, and for the presentation and evaluation of results.","• Grundbegriffe der Simulation stochastischer Prozesse: Fehlerkriterien, Kostenmaße, minimale Fehlerund Kom- plexität, Optimalität und asymptotische Optimalität. • Pfadweise Simulation von Gauss-Prozessen: Simulation multivariater Normalverteilungen, zeitkontinuierliche Verfahren, optimale L -Rekonstruktion, insbeson 2 dere Simulation Brownscher Bewegungundfraktioneller Brownscher Bewegung. • Pfadweise Simulation stochastischer Differentialgleichungen: zeitdiskrete Ito-Taylor Schemata, zeitkontinu ierliche Verfahren, Schrittweitensteuerung. • Schwache Approximationstochastischer Differentialgleichungen: Standard Monte-Carlo Verfahren, Multilevel Verfahren, Anwendungen in der Finanzmathematik. — • Basic concepts of simulation of stochastic processes:Failurecriteria, costmeasures, andminimumerrorcom plexity, optimality and asymptotic optimality. • Path way simulation of Gaussian processes: simulati onofmultivariatenormaldistributions, continuous-timeprocess, optimal L Reconstruction, particularly the si 2 mulation of Brownian motion and fractional Brownian motion. • Path way simulation of stochastic differential equati ons: discrete-time Ito-Taylor schemes, continuous-time method, time step control. • Weakapproximationofstochasticdifferentialequations:Standard Monte Carlomethods, multilevelmethods, ap  plications in financial mathematics.",90minütige Abschlussklausurodermündliche Prüfung(ca. 20 Minuten); die genaue Prüfungsart wird zu Beginn des Semes- ters bekannt gegeben90 minute written or 20-minute oral examination. The preci se mode of assessment will be announced at the start of the semester,"Präsentation und Beamer, Tafel Presentation and projector, blackboard",Nach Empfehlung des Dozenten Announced during the lecture,MSc Informatik/ Computer Science
5818,Stochastische Analysis,405214,Unregelmäßig Irregular,1 Semester,Müller-Gronbach,Müller-Gronbach,Deutsch oder Englisch German or English,Modulgruppe „Alg Math“ Focus „Alg Math“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Lineare Algebra I + I I, Analysis I + I I, Einführung in die Sto- chastik, Wahrscheinlichkeitstheorie Linear Algebra I + I I, Analysis I + I I, Introduction to Stocha stics, Probability Theory",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Verständnis der Grundkonzepte und -techniken sowie der zen- tralen Ergebnisse der Stochastischen Analysis.  Fähigkeiten / Abilities Modellierung und Analyse zeitabhängiger stochastischer Pro zesse, die von einer Brownschen Bewegung getrieben werden. Eigenständige Erarbeitung und Darstellung eines Themas der Stochastischen Analysis","Grundkonzepte der Stochastischen Analysis, u. a. Zeitstetige Martingale, Zeitstetige Markov Prozesse, Brownsche Bewegung, Stochastische Integration, Stochastische Differentialgleichungen.",Teilleistung 1 (80%): Mündliche Prüfung (ca. 30 Minuten) Teilleistung 2 (20%): Schriftliche Ausarbeitung (bis zu 10 Sei-ten) eines zusätzlichen Themas zu stochastischen Differentialgleichungen. Zum Bestehen des Moduls müssen beide Teil leistungen bestanden werden. Part 1 (80%): Oral examination (about 30 Minuten)Part 2 (20%): Written work (up to 10 pages) about an ad ditional topic of stochastic differential equations. To pass the examination both parts have to be passed.,"Präsentation und Beamer, Folien oder Tafel Presentation and projector, slides or blackboard",Bekanntgabe durch Dozenten Announced during the lecture,MSc Informatik/ Computer Science
5821,Wireless Security,405157,Jedes Wintersemester Every winter semester,1 Semester,Posegga,Posegga,Deutsch oder Englisch German or English,Modulgruppe „I T-Sec Rel“ Focus „I T-Sec Rel“,2 V + 1Ü,60 Std. Präsenz + 45 Std. Übungen + 45 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 45 hrs exercises + 45 hrs independent study and exam preparation,ECTS/Credits: 5,Keine None,I T-Sicherheit Advanced I T Security,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden lernen die Grundlagen der Funkwellenaus-breitung. Sie erwerben einen Überblick über technische Stan dardsinderdrahtlosenundmobilen Kommunikationsowiedas Verständnis der Sicherheitslösungen in drahtlosen und mobi len Kommunikationssystemen. Die Studierenden bekommen detailliertes Wissen über grundlegende Sicherheitskomponen ten (z. B. Smartcards) und -technologien (z. B. Protokolle und Dienste) vermittelt sowie Kenntnis der spezifischen, sicher heitsrelevanten Randbedingungen solcher Systeme (z. B. im Bereich der Funktechnologien). Die Studierenden haben einen Überblick über konkrete, exemplarische Lösungen und deren Eigenschaften (z. B. G SM, U MT S, W LA N, .. .). —Students become familiar with the basics of radio wave pro pagation. They acquire an overview of technical standards inwireless and mobile communications, as well as an understanding of security solutions in wireless and mobile communi cation systems. Students acquire detailed knowledge of basic safety components (e. g. smart cards) and technologies (e. g. protocols and services) and the specific security constraints ofsuch systems (e. g. in the field of wireless technologies). Stu dents will have an overview of concrete, exemplary solutions and their properties (e. g. G SM, U MT S, Wi-Fi, etc). Fähigkeiten / Abilities Die Studierenden sind in der Lage Lösungen, insbesondere im Bereich mobiler/drahtloser Systeme, selbst konzipieren zu können. —Thestudentsareabletoautonomouslydevelopsolutions, par ticularly in the area of mobile/wireless systems. Kompetenzen / Competencies Die Studentenkönnendie Bedeutungder Sicherheitfürdrahtlose Kommunikation einschätzen und vorhandene Sicherheits lösungen analysieren und bewerten. —Students are able to assess the importance of security for wi reless communication and to analyze and evaluate existing security solutions.","edes Vorlesungsteils stellt sich wie folgt dar: • Grundlagen der Wellenausbreitung • E MF-Sicherheit • Einführung in die Problematik der Sicherheit komplexer Systeme. Aufbau und Funktionsweise von Smartcards  und verwandten Technologien (R FI D)• Grundlegende, sicherheitsrelevante Aspektederdrahtlo sen Datenübertragung • Sicherheitsarchitekturen am Beispiel von G SM, U TM S und Wireless L AN • Sicherheit von Vo IP als Beispiel für die Unterstützung von Mobilität in Netzen auf Dienste-Ebene —In order to achieve the module objectives, advanced knowled ge going beyond the scope of the Bachelor’s degree is taught initially. This includes topics such as wave propagation, smartcard technology and security specifics of wireless data trans missions. Subsequently, several solutions are discussed using real-world examples, and then analyzed and compared. The rough outline of the contents of the lecture part is as follows: • Wave propagation • E MF Safety• Introduction to the problem of security of complex sys tems. Design and operation of smart cards and related (R FI D) technologies. • Fundamental security aspects of wireless data transmis sion. Security architectures using the example of G SM, U MT S and Wi- Fi. • Security of Vo IP as an example of the support of mobi lity in networks at the service level.","60-90 min. Klausur oder ca. 15 min. mündliche Prüfung, je- weils in deutscher oder englischer Sprache und je nach Anzahlder Hörer. Die genaue Prüfungsart wird zu Beginn des Semes ters bekannt gegeben. 60-90 min. written or approx. 15-minute oral examination, de pendingonthenumberofstudents, in Germanor English. The exact mode of assessment will be announced at the start of the semester.","Präsentation und Beamer, Tafel Presentation and projector, blackboard","Valtteri Niemi, Kaisa Nyberg: U MT S Security, November 2003: Wiley & Sons L TD Wolfgang Rankl, Wolfgang Effing: Smart Card Handbook, 2003: Wiley & Sons L TD T. Rappaport:Wireless Communications:Principlesand Prac tice, 1996: Prentice Hall Die entsprechenden Spezifikation von 3 GP P (G SM, U MT S), I EE E (802. *) Klaus Finkenzeller: R FI D-Handbook, ""Fundamentals and Ap plicationsin Contactless Smart Cardsand Identification"", April 2003: Wiley & Sons L TD",MSc Informatik/ Computer Science
5822,Security Insider Lab II - System and Application Security,453402,Jedes Sommersemester Every summer semester,1 Semester,Posegga,Posegga,Deutsch oder Englisch German or English,Modulgruppe „I T-Sec Rel“ Focus „I T-Sec Rel“,"6Ü Es besteht Anwesenheitspflicht. Die Anwesenheitspflicht besteht aus folgenden Gründen: Umden Erfolg der Veranstaltung zu gewährleisten ist eine ver stärkte Interaktion der Stundenten untereinander aber auchzwischen Studenten und Betreuern notwendig. Bei der Inter aktion mit den Betreuern oder den Kommilitonen, können die Studenten Probleme besprechen und Lösungsstrategienerarbeiten. Ein weiterer Grund sind die regelmäßig stattfin denden Präsentationen der Studenten. Jeder Student arbeitet sich frühzeitig verstärkt in ein Gebiet der Veranstaltung ein. In der Präsentation vermittelt der Student sein Spezialwissen den anderen Studenten. Damit sichergestellt wird, dass die Stundenten dieses Spezialwissen vermittelt bekommen, müs sensieanwesendsein. Derletzte GrundistdieÜberprüfungder praktischen Kompetenz der Studenten. Die Studenten werden während der Anwesenheitszeit befragt um ihren Lernerfolg zu beobachten. Die Veranstaltung wurde bisher als Praktikum durchgeführt. Folgende Merkmale klassifizieren die Veranstaltung jedocheheralsÜbungdennals Praktikum:regelmäßig(d. h. wöchent lich) stattfindende Termine für alle Teilnehmer, dauerhafte Aufsicht und Betreuung durch den Veranstalter und gegen seitige Vermittlung von Grundlagenwissen durch Vorträge. — Attendance is compulsory. This is for the following reasons: First, to ensure the success ofthecourse, itisnecessarytoenhancetheinteractionamong  students and between students and tutors. When interacting with the tutors or fellow students, the students can discuss problems and develop solution strategies. Second, there are the regularly scheduled presentations of the students. Each student works is assigned a topic area for the course which heor she treats in greater detail than the others. In the presen tation the student shares their detailed knowledge with theother students. To ensure the maximum benefit for all stu dents, it should be ensured that all students are present at the presentation. Third, one of the objectives of the course is to test the students’ practical skills. The students will be interviewed during their attendance to observe their learning success.",180 Std. Laborarbeit + 180 Std. Nachbearbeitung Workload 180 hours laboratory work + 180 hours follow-up,ECTS/Credits: 12,Keine None,"Advanced I T Security, System Security, Security Insider Lab I - Infrastructure Security",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden verstehen etablierte und aktuelle Verwund-barkeiten und sie besitzen einen Überblick über die Randbe dingungen für das Auftreten bekannter Schwachstellen. Sie erwerben Fachkenntnis der Ursachen und Auswirkungen von Angriffsvektoren. — Students understand established and new vulnerabilities and have gained an overview of the boundary conditions for the occurrence of known vulnerabilities. They acquire specialist knowledge of the causes and effects of attack vectors. Fähigkeiten / Abilities Die Studierenden lernen anspruchsvoller Informatik-Aufgaben unter praktisch experimenteller Anwendung des im Studium  vermittelten Theorie- und Methodenwissens der Informatik zu lösen. Sie können größerer konstruktiver und experimenteller Aufgaben bearbeiten und sind in der Lage Recherche aktueller Publikationen zum übergeordneten Projektthema durch zuführen. Die Studierenden können typische softwarebasierte Verwundbarkeiten aufspüren und vermeiden. —Students learn to solve challenging computer science assi gnments in practical experimental conditions, applying the theories and methods of computer science. They are able to work on larger constructive and experimental tasks and are able to perform research of recent publications to the projecttopic. Studentscantrackandavoidtypicalsoftware-basedvul nerabilities. Kompetenzen / Competencies Die Studierenden erwerben berufsbefähigende Praxiskompetenz durch Durchlaufen der typischen Phasen eines Ent wicklungsprojekts. Sie eignen sich Problemlösungskompetenz durch wissenschaftliches Arbeiten (unter Anleitung) mit dem Ziel, Probleme aus aktuellen Entwicklungen zu bewältigen an. Sie erarbeiten sich Transferkompetenz durch Anwendung des Theorie- und Methodenschatzes der Informatik auf komplexe Probleme und sie erlenen die Gegenseitige Vermittlung der in haltlichen Grundlagen eines ausgewählten Teilgebiets. — Through the typical phases of a development project. Theyacquire problem-solving skills through scientific work (with instructions) with the aim of tackling problems of recent deve lopments. They acquire knowledge transfer skills by applyingthetheoriesandmethodsofcomputersciencetocomplexpro blems and learning the mutual exchange of the basic content of a selected sub-area.","Das Modul beinhaltet im Bereich der Einführung in die Pro- bleme der Softwaresicherheit, z. B. Buffer Overflows, Format- Strings, Sicherheitvon Webservices(Cross-Site Scripting, S QL Injection, etc. ) und Fehler in der Programmlogik. Im Bereich Konzepte und Methoden zur Herstellung von si cherer Software beinhaltet das Modul z. B. statische Analyse und Sicherheit von Programmiersprachen/-konzepten. Im Bereich Anwendungund Herstellunggeeignetertechnischer Hilfsmittelund Umgangmit Betriebssystem-Bordmittelnbeinhaltet das Modul z. B. Shell-Befehle und –Skripte und Auto matisieren wiederkehrender Aufgaben. — The module covers the area of introduction to the problems  of security software, such as buffer overflow, format strings, security of web services (cross-site scripting, S QL injection, etc. ) and errors in program logic. In the area of concepts and methods for producing secure software module includes e. g. static analysis and security of programming languages/concepts. Intheareaofapplicationandpreparationofsuitabletechnical aids and working with operating system on-board tools, thismodule includes e. g. shell commands and scripts and automa tion of repetitive tasks.","Das Modul ist in Themenabschnitte unterschiedlicher Schwie- rigkeitsgrade unterteilt. Die Studierenden erarbeiten für jedendieser Abschnitte in vorgegebener Zeit ein Portfolio aus Protokollen (für das gesamte Modul ca. 6 Protokolle), die die Lösungendergestellten Problemeverständlichbeschreibenmüs sen. Das Portfolio wird nach dessen Fertigstellung präsentiert (Dauer der Präsentation: ca. 60 Minuten) Die Kombination aus Protokollen und zugehöriger Präsentation stellt sicher, dass die erarbeiteten Lösungen und das zugehörige Wissennicht nur schriftlich dargelegt, sondern auch praktisch ange wendet werden können. Zusätzlich müssen die Studierenden einen ca. 15-minütigen Vortrag zu einem der Themenabschnitte des Praktikums vor bereiten und halten. Begründung für diese zusätzliche Prüfungsleistung: Dieser Vortrag ist wichtiger Bestandteil der Ausbildung. Die Studierenden müssen einerseits in der Lage sein aktuelle und rele vante Literatureines Fachgebietesschnellzuidentifizierenundzu verstehen. Da Schulungen im I T-Sicherheitsbereich essen tiell sind, müssen die Studenten andererseits in der Lage sein, komplexes Wissen einem größeren Publikum in kurzer Zeitzu vermitteln. Im Praktikum bereiten die Vorträge die teilneh menden Studierendenaufdieeinzelnen Themenabschnittevor. Zusätzlich zur Bewertung durch den Dozenten, bekommt der Vortragende so direkte Rückmeldung von anderen Studenten, ob der Vortrag verständlich und ob wichtige Details enthalten waren. — Themoduleisdividedintotopicsegmentsofvaryingdifficulty. Students develop a portfolio of protocols (about 6 protocols fortheentiremodule), whichneedtodescribethesolutionsto theproblemsposedforeachofthesesegmentsinthespecified time. The portfolio is presented after its completion (duration of presentations: 60 minutes). The combination of protocols andassociatedpresentationensuresthatthesolutionsandthe  associated knowledge demonstrated can not only be written down but can also be applied practically. Moreover, students must prepare and hold a 15-minute pre sentation on the topic segment of the practicum. Justification for this additional assessment: this presentation is an important part of training. Students must, on the one hand, be able to identify and understand current and relevant literature of a subject area quickly. However, since training in I T security is essential they must, on the other hand, be able to convey complex knowledge to a wider audience in a short time. During the practicum the presentations prepare the participating students for the individual topic segments. In addition to the evaluation by the instructor, the lecturer gets direct feedback from the other students on whether thepresentation was comprehensible and whether important de tails were included.","Labor, Rechner, Beamer Laboratory, computer, projector",Richtet sich nach den (wechselnden) Aufgaben Depends on the (changing) tasks,MSc Informatik/ Computer Science
5823,Security Insider Lab I - Infrastructure Security,455002,Jedes Wintersemester Every winter semester,1 Semester,Posegga,Posegga,Deutsch oder Englisch German or English,Modulgruppe „I T-Sec Rel“ Focus „I T-Sec Rel“,"6Ü Es besteht Anwesenheitspflicht. Die Anwesenheitspflicht besteht aus folgenden Gründen: Umden Erfolg der Veranstaltung zu gewährleisten ist eine ver stärkte Interaktion der Stundenten untereinander aber auchzwischen Studenten und Betreuern notwendig. Bei der Inter aktion mit den Betreuern oder den Kommilitonen, können die Studenten Probleme besprechen und Lösungsstrategienerarbeiten. Ein weiterer Grund sind die regelmäßig stattfin denden Präsentationen der Studenten. Jeder Student arbeitet sich frühzeitig verstärkt in ein Gebiet des Veranstaltung ein. In der Präsentation vermittelt der Student sein Spezialwissen den anderen Studenten. Damit sichergestellt wird, dass die Stundenten dieses Spezialwissen vermittelt bekommen, müs sensieanwesendsein. Derletzte GrundistdieÜberprüfungder praktischen Kompetenz der Studenten. Die Studenten werden während der Anwesenheitszeit befragt um ihren Lernerfolg zu beobachten. Die Veranstaltung wurde bisher als Praktikum durchgeführt. Folgende Merkmale klassifizieren die Veranstaltung jedocheheralsÜbungdennals Praktikum:regelmäßig(d. h. wöchent lich) stattfindende Termine für alle Teilnehmer, dauerhafte Aufsicht und Betreuung durch den Veranstalter und gegen seitige Vermittlung von Grundlagenwissen durch Vorträge. — Attendance is compulsory. This is for the following reasons: First, to ensure the success of the practicum, it is necessary to enhance the interaction among students and between students and tutors. When in teracting with the tutors or fellow students, the students candiscussproblemsanddevelopsolutionstrategies. Second, the re are the regularly scheduled presentations of the students. Each student works is assigned a topic area for the practicum which he or she treats in greater detail than the others. In the presentation the student shares their detailed knowledge with the other students. To ensure the maximum benefit for all students, it should be ensured that all students are present at thepresentation. Third, oneoftheobjectivesofthepracticum is to test the students’ practical skills. The students will be interviewed during their attendance to observe their learning success.",90 Std. betreute Laborarbeit + 110 Std. nicht betreute La- Workload borarbeit + 160 Nachbearbeitung90 hours supervised laboratory work + 110 hours unsupervi sed lab work + 160 hours follow-up,ECTS/Credits: 12,Keine None,"I T-Sicherheit, System Security Advanced I T Security, System Security",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden lernen Netzwerktoppologien, Paketrouting, Adressierung in Netzwerken, Paketfilterung, vertrauenswürdi ge Kommunikation und grundlegende Sicherheitsprotokolle. —Students learn about network topologies, packet routing, ad dressing in networks, packet filtering, trusted communications and basic safety protocols. Fähigkeiten / Abilities Lösen anspruchsvoller Informatik-Aufgaben aus dem Bereich I T Sicherheit unter praktisch experimenteller Anwendung desim Studiumvermittelten Theorie-und Methodenwissens. Ana lyse von Networktraffic und Beurteilung der Sicherheitsre levanz. Aufbau, Modifikation und Analyse von Virtuellen Sicherheits-Infrastrukturen, die aktuelle Sicherheitsstandards berücksichtigen. Absicherung von Sicherheits-Infrastrukturen, gegenüber Intrudern. Recherche aktueller Publikationen zum übergeordneten Projektthema. Zudem lernen die Studenten die gegenseitige Vermittlung der inhaltlichen Grundlagen. —Solve challenging computer science tasks in the field of I T se curity under practical experimental application of operationsinthestudyoftheoriesandmethods. Analysisofnetworktraf fic and assessment of its relevance to security. Construction, modification and analysis of virtual security infrastructures in consideration of the latest security standards. Protection ofsecurity infrastructures against intruders. Research in the la test scientific literature on the project topic. Finally, students learn to relate the theoretical underpinnings to each other. Kompetenzen / Competencies Beurteilung der Sicherheitseigenschaften von Sicherheits Infrastrukturen. Problemlösungskompetenz und Transferkom petenz, der Theorie-und Methodenschatzder Informatikkannaufkomplexe, praktische Problemeder IT Sicherheitangewendet werden. Bearbeitung komplexer, konstruktiver und experimenteller Aufgaben aus dem Bereich Netzwerk- und Infra struktursicherheit. —Assessment of the security properties of security infrastructures. Problem-solving skills and knowledge transfer skills; abili ty to apply the theories and methods of computer science to complex, practical problems of I T security. Ability to process complex, constructive and experimental problems in the field of network and infrastructure security.","e eines Zertifikats, Generierung und Validierungvon Zertifikaten, Content-Revocation-Lists und Einsatzmöglichkeiten von zertifikatgestützter Kommunikation. Der Bereich Firewalls/Paketfilter umfasst auch die Installation, Kon figuration, Testen, das Aufstellen, Verstehen und Anpassen von Regelwerken und die strategische Planung.  Der Bereich Virtual Private Networks umfasst zum Beispieldas Aufsetzen/Einrichten von V PNs, der Definition von Sub netzen, Konfigurationdes Routingunddie Validierungsicherer Tunnel. — The module includes, e. g. in the in Linux/Windows Operating Systems & Network Basics segment, the installation of Win dows, Linux, V MWare and setting up virtual networks with VMware. Among other things, in the field of network monito ring and analysis tools, the operation, capabilities, differences and limitations of the tools are investigated. The Public Key Infrastructures segment, for example, includes the contents ofa certificate, generation and validation of certificates, revocationlistsandcontentofapplicationsforcertificate-basedcommunications. The firewall/packet filter segment of the modu le includes the installation, configuration, testing, installation, understanding and adapting regulations and strategic plan ning. The range includes virtual private networks such as setting up V PNs, the definition of subnets, routing configration and secure-tunnel validation.","Das Modul ist in Themenabschnitte unterschiedlicher Schwie- rigkeitsgrade unterteilt. Die Studierenden erarbeiten für jedendieser Abschnitte in vorgegebener Zeit ein Portfolio aus Protokollen (für das gesamte Modul ca. 6 Protokolle), die die Lösungendergestellten Problemeverständlichbeschreibenmüs sen. Das Portfolio wird nach dessen Fertigstellung präsentiert (Dauer der Präsentation: ca. 60 Minuten) Die Kombination aus Protokollen und zugehöriger Präsentation stellt sicher, dass die erarbeiteten Lösungen und das zugehörige Wissennicht nur schriftlich dargelegt, sondern auch praktisch ange wendet werden können. Zusätzlich müssen die Studierenden einen ca. 15-minütigen Vortrag zu einem der Themenabschnitte des Praktikums vor bereiten und halten. Begründung für diese zusätzliche Prüfungsleistung: Dieser Vortrag ist wichtiger Bestandteil der Ausbildung. Die Studierenden müssen einerseits in der Lage sein aktuelle und rele vante Literatureines Fachgebietesschnellzuidentifizierenundzu verstehen. Da Schulungen im I T-Sicherheitsbereich essen tiell sind, müssen die Studenten andererseits in der Lage sein, komplexes Wissen einem größeren Publikum in kurzer Zeitzu vermitteln. Im Praktikum bereiten die Vorträge die teilneh menden Studierendenaufdieeinzelnen Themenabschnittevor. Zusätzlich zur Bewertung durch den Dozenten, bekommt der  Vortragende so direkte Rückmeldung von anderen Studenten, ob der Vortrag verständlich und ob wichtige Details enthalten waren. — Themoduleisdividedintotopicsegmentsofvaryingdifficulty. Students develop a portfolio of protocols (about 6 protocols fortheentiremodule), whichneedtodescribethesolutionsto theproblemsposedforeachofthesesegmentsinthespecified time. The portfolio is presented after its completion (duration of presentations: 60 minutes). The combination of protocols andassociatedpresentationensuresthatthesolutionsandthe associated knowledge demonstrated can not only be written down but can also be applied practically. Moreover, students must prepare and hold a 15-minute pre sentation on the topic segment of the practicum. Justification for this additional assessment: this presentation is an important part of training. Students must, on the one hand, be able to identify and understand current and relevant literature of a subject area quickly. However, since training in I T security is essential they must, on the other hand, be able to convey complex knowledge to a wider audience in a short time. During the practicum the presentations prepare the participating students for the individual topic segments. In addition to the evaluation by the instructor, the lecturer gets direct feedback from the other students on whether thepresentation was comprehensible and whether important de tails were included.","Labor, Rechner, Beamer Laboratory, computer, projector",Richtet sich nach den (wechselnden) Aufgaben Depends on the (changing) tasks,MSc Informatik/ Computer Science
5824,Cloud Security,455359,Wird vermutlich nicht mehr angeboten Probably not offered anymore,1 Semester,Reiser,Reiser,Deutsch oder Englisch German or English,Modulgruppe „I T-Sec Rel“ Focus „I T-Sec Rel“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,I T-Sicherheit Advanced I T Security,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden lernen Sicherheits-Attribute (Authentizität, Vertraulichkeit, Integrität, Verfügbarkeit), verschiedene Systemmodelle und deren Sicherheits-Risiken, Ansätze und Verfahren zur Realisierung von Zugriffssteuerung in Informationssystemen, Verfahren und Modelle für Berechtigungsmanage ment, Strategien zur Datenspeicherung und Metriken der Da tensicherheit. —Students learn about security attributes (authenticity, confi dentiality, integrity, availability), various system models and their security risks, approaches and methods for implementing access control in information systems, procedures and models for authorization management, strategies for data storageand metrics of data security. Fähigkeiten / Abilities Sie lernen Kryptographische Techniken in der Praxis einzusetzen, Sicherheitskonzepte für Informationssysteme zu entwerfen und zu implementieren, Autorisierungs- und Authentisierungsinfrastrukturen zu entwerfen und zu nutzen sowie Syste me in Bezug auf ihre Sicherheit zu bewerten. —They learn to use cryptographic techniques in practice to de sign and implement security policies for information systems, to design and to use authorization and authentication infra structures, and to evaluate systems in terms of their safety. Kompetenzen / Competencies Sie erlernen die Sicherheit von vorhandenen Informationssys temen analysieren und beurteilen zu können, Alternativen bei der Planung von Sicherheitslösungen für Informationssystemeabwägen zu können sowie Vor- und Nachteile von Sicherheitskonzeptenfürverteilte Informationssystemeabhängigvon Ein satzzweck und Systemarchitektur bewerten zu können. —They learn to analyze and evaluate the safety of existing in formation systems and to be able to weigh alternatives in the design of security solutions for information systems as well asevaluating the advantages and disadvantages of security con cepts for distributed information systems depending on the application and system architecture.","Das Modul beinhaltet die Themen Authentisierungsverfah- ren, Zugriffskontrolle wie Mandatory Access Control (M AC), Discretionalry Access Control (D AC), Access Control Lists(A CLs), Role-based Access Control (R BA C); Benutzerverwaltung, Identity Management, Praktisches Sicherheitsmanage ment wie Schutzziele, Risiken, Sicherheitspolitiken; Aktuelle Trends wie veränderte Rahmenbedingungen für I T-Sicherheit durch zunehmende mobile Vernetzung, Cloud-Computing und Dezentralisierung. — The module includes the topics of authentication methods,  access control, such as Mandatory Access Control (M AC) Discretionalry Access Control (D AC), Access Control Lists(A CLs), Role-based Access Control (R BA C), user manage ment, identity management, Practical safety management as protection objectives, risks, security policies; Current trendssuch as changing conditions of I T security by increasing mo bile networking, cloud computing and decentralization.","Portfolioprüfung: Bearbeitungeinesetwa6-wöchigen Semesterprojekts, nachge-wiesen durch ein ca. 10-minütiges Kolloquium mit Präsenta tion der eigenen Konzepte und Ergebnisse 60 Minuten Klausur oder ca. 20 Minuten mündliche Prüfungjeweils in deutscher oder englischer Sprache und je nach An zahl der Hörer. Die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben — Portfolio: Project (approx. 6 weeks), assessed in a presentation (approx. 10 min) of the concepts and the results60-minute written examination or approx. 20-minute oral ex amination, depending on the number of listeners, in German or English. The exact mode of assessment will be indicated at the beginning of the semester","Präsentation und Beamer, Tafel Presentation and projector, blackboard",Nach Ansage in der Vorlesung Announced during the lecture,MSc Informatik/ Computer Science
5832,Algebra und Zahlentheorie I,405149,Jedes Sommersemester Every summer semester,1 Semester,Kreuzer,"Kaiser, Kreuzer, Zumbrägel",Deutsch German,Modulgruppe „Alg Math“ Focus „Alg Math“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Lineare Algebra I + I I, Analysis I + I I Linear Algebra I + I I, Analysis I + I I",Verwendbarkeit in weiteren Bachelor Mathematik Studiengängen Bachelor Mathematics,Kenntnisse / Skills/Knowledge Die Studierenden kennen algebraische Strukturen und Homo- morphismen im Sinne der universellen Algebra. Sie verfügenüber zahlreiche Beispiele algebraischer Strukturen und ken nen einige ihrer grundlegenden Eigenschaften. Sie kennen die  Axiomatikdernatürlichen Zahlenunddensukzessiven Aufbau anderer Zahlbereiche aus den natürlichen Zahlen. — Students get familiar with algebraic structures and morphismsinthesenseofuniversalalgebra. Theyknownumerousexamp les of algebraic structures and some of their basic properties. They know the axioms of natural numbers and the gradual development of other numerical ranges of natural numbers. Fähigkeiten / Abilities Die Studierenden können in elementaren algebraischen Struk turen einfache Beweise führen. — Students can perform simple proofs in elementary algebraic structures. Kompetenzen / Competencies Die Studierenden erkennen übergeordnete Konzepte in der Al gebra und können spezielle algebraische Strukturen in einen größeren Kontext einordnen. — The students recognize higher-level concepts in algebra and algebraic structures can place them in a larger context.,"Algebraische Strukturen werden mit den Methoden der uni- versellen Algebra allgemein eingeführt. Generische Methoden, etwa Termmodellewerdenerläutert. Eswerdenzahlreichespe zielle Klassen algebraischer Strukturen vorgestellt. Eingehend wird der Aufbau des Zahlsystems (natürliche Zahlen, ganze Zahlen, rationale Zahlen, reelle Zahlen, komplexe Zahlen) be schrieben. Die Strukturanalyse algebraischer Strukturen wird anhand der endlichen Gruppentheorie erläutert. — Algebraic structures are generally introduced by the methods of universal algebra. Generic methods, such term models are explained. Various special classes of algebraic structures arepresented. Inbound, the structure of the number system (naturalnumbers, integers, rationalnumbers, realnumbers, com plex numbers) is described. Structural analysis of algebraic structures is illustrated by the finite group theory.",120 Minuten Klausur 120 minutes written exam,"Beamer, Overhead-Folien oder Tafel Presentation and overhead projector, blackboard","z. B. P. M. Cohn, Universal Algebra (Springer) und M. Artin, Algebra (Birkhäuser)",MSc Informatik/ Computer Science
5835,Ringe und Moduln,455364,Unregelmäßig Irregular,1 Semester,Zumbrägel,Zumbrägel,Englisch English,Modulgruppe „Alg Math“ Focus „Alg Math“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,Algebra und Zahlentheorie I + I I Algebra and Number Theory I + I I,Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierendenkennengrundlegende Begriffeausder Theo- rie der Ringe und Moduln. — The students know fundamental notions from the theory of  rings and modules. Fähigkeiten / Abilities Konzepte der Modultheorie können einsetzt werden, um die Struktur von Ringen zu untersuchen. — Concepts from module theory can be utilised for investigating the structure of rings. Kompetenzen / Competencies Die Studierenden sind mit Methoden und Anwendungen der Modultheorie vertraut. —Thestudentsarefamiliarwithnotionsandapplicationsofmo dule theory.","Die Vorlesung behandelt Grundlagen der Theorie der (nicht- kommutativen) Ringe und ihrer Moduln, sowie einige Anwen- dungen. Folgende Themen sind geplant: Ringe, Moduln und Homomorphismen. Direkte Summen und Produkte. Halbeinfache Moduln. Endlichkeitsbedingungen für Moduln. Klassi sche Resultate über die Ringstruktur. Projektive und injektive Moduln. Aspekte der ringlinearen Codierungstheorie. —The course deals with foundations of the theory of (noncommutative) rings and their modules, as well as some applications. Thefollowingtopicsareplanned:Rings, modulesandhomomorphisms. Direct sums and products. Semisimple modu les. Finiteness conditions for modules. Classical ring-structuretheorems. Projective and injective modules. Aspects of ring linear coding theory.",Klausur(120 Min. )odermündliche Prüfung(ca. 30 Min. ). Die Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 120 minutes written exam or 30 minutes oral exam. The pre cise mode of assessment will be announced at the start of the semester.,"Beamer, Tafel Presentation, blackboard","Frank W. Anderson, Kent R. Fuller, Rings and Categories of Modules, Springer (1992) Tsit-Yuen Lam, Lectures on Modules and Rings, Springer (1999) Friedrich Kasch, Moduln und Ringe, Teubner (1977)",MSc Informatik/ Computer Science
5836,Elliptic Curves,422120,Unregelmäßig Irregular,1 Semester,Zumbrägel,Zumbrägel,Englisch English,Modulgruppe „Alg Math“ Focus „Alg Math“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,Algebra und Zahlentheorie I + I I Algebra and Number Theory I + I I,Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"The students acquire basic notions from algebraic geometry and algebraic curves. They learn about the theory of elliptic curves, in particular their arithmetic. The students are able to utilise these concepts for cryptography applications.","Thiscoursedealswiththetheoryofellipticcurvesfromageo-  metry, arithmetic and cryptography viewpoint. The following topics are planned: Algebraic varieties. Alge braiccurves, Riemann-Rochtheorem. Thegeometryofelliptic curves. Isogenies. Elliptic curves over finite fields. Algorithmic aspects, discrete logarithm, pairing-based cryptography.",Klausur(120 Min. )odermündliche Prüfung(ca. 30 Min. ). Die Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 120 minutes written exam or 30 minutes oral exam. The pre cise mode of assessment will be announced at the start of the semester.,Tafel Blackboard,"Joseph H. Silverman, The Arithmeticof Elliptic Curves, Sprin- ger (1986) Lawrence C. Washington, Elliptic Curves:Number Theoryand Cryptography, C RC Press (2003)",MSc Informatik/ Computer Science
5842,Programming Styles,455377,Jedes Wintersemester Every winter semester,1 Semester,Fraser,Gambi,Englisch English,Modulgruppe „Prog Soft“ Focus „Prog Soft“,2 V + 1Ü,"45 Std. Präsenz + 105 Std. Übungsaufgaben, Nachbearbei- Workload tung des Vorlesungsstoffs und Prüfungsvorbereitung 45 contact hours + 105 hours exercises, independent study and assignment preparation",ECTS/Credits: 5,Keine None,"Software Engineering, S EP, Programmierung I + I I Software Engineering, S EP, Programming I + I I",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Studierende erlernen fundamentalle Programmierkonzepte, welche die wichtigsten Programmierstile wie Prozedurale, Objekt-Orientierte, Funktionale, Verteilte, Daten-zentrierte, und Reaktive Programmierung. —  Thestudentslearnfundamentalconceptsofprogrammingthatdefine the most important programming styles such as pro cedural, object-origented, functional, distributed/concurrent, data-centric and reactive. Fähigkeiten / Abilities Teilnehmer erkennen Programmierstile und darunterliegendetheoretische Konzepte. Teilnehmende können in verschiede nen Stilen programmieren, die Unterschiede benennen, und die Stile an Randbedingungen anpassen. —The participants learn to identify the style(s) used to implementvariousprograms, explaintherationalesbehindthischoice, and write programs in different styles such that the programs respect the constraints imposed by programming lan guage and the runtime environment (e. g. , memory constraint, distributed systems, unreliable infrastrucure). Kompetenzen / Competencies Die Teilnehmer erlernen theoretische und praktische Kompetenzen in der Programmierung und im Programmentwurf un abhängig von der Programmiersprache. — The participants will learn theoretical and practical skills in programming independently of the programming language used.","• Encapsulation • Publish-subscribe • Inversion of Control, Dependency Injection • Abstract, higher-order, pure, lamba functions • Monads, Currying • Dynamic Lookup • Composition, Continuation • Class-based and Prototype-based • Styles: – Things – Bulletting Board – Hollywood – Pipeline – Letterbox – Closedmaps – The One – Quarantine","90-minütige Klausur oder Porfolio-Prüfung. Mögliche Port- foliobestandteile sind technische Berichte, dokumentierterund funktionsfähiger Quelltext für Softwareanalysen, Live  Systemdemonstration, Teilpräsentationenzu Einzelleistungen, laufende, fortzuschreibende technische Teilberichte zur Zusammenfassungzueinem Gesamtdokument, Abschlusspräsen tation. Die genauen Anforderungen werden vom Dozierenden zu Beginn der Veranstaltung bekanntgegeben. 90-minute exam or portfolio-exam. The exact mode of assess ment will be announced at the start of the semester.","Präsentation, Beamer, Übungsblätter Presentation, projector, exercises","Lopes, Cristina Videira. Exercisesinprogrammingstyle. Chap- man and Hall/C RC, 2016.",MSc Informatik/ Computer Science
5850,Mobile Security,455411,Jedes 2. Sommersemester Every other summer semester,1 Semester,Hammer,Tiwari,Englisch English,Modulgruppe „Prog Soft“ Focus „Prog Soft“,2 V + 2Ü,"60 Std. Präsenz + 120 Std. Übungsaufgaben, Nachbereitung Workload und Prüfungsvorbereitung 60 contact hours + 120 hours exercises, independent study and exam preparation",ECTS/Credits: 6,Keine None,"Programmierung I + I I, S EP, Software Engineering Programming I + I I, S EP, Software Engineering",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge The students learn the internals of Android apps. These con-cepts include a thorough understanding of the Android frame work, safe practices of designing the Android apps, potentialcauses of Security Vulnerabilities in Android apps, and poten tial ways to detect and avoid these attacks.  Fähigkeiten / Abilities The participants will know the Android app’s internals andthe state-of-the-art software techniques to analyze the An droid apps. They will create tools to detect various security attacks and privacy leaks in Android apps. Kompetenzen / Competencies The participants learn theoretical and practical skills of the Android framework. The participants can reuse state-of-art and write their analyses to detect and tackle vulnerabilities and privacy leaks in Android apps.",This course aims to provide a solid foundation on Android application security. The key highlights of the course are: • Understanding the Android app’s internals • Understanding the state-of-the-art software techniques to analyze an Android app • Finding Android malware and vulnerable apps • Designing secure Android apps The following is the detailed catalog: • Android app Internals • Reverse engineering tools • Introduction to static analysis • I FC on Android apps • Security attacks and their mitigation • Modular Inter app communication analysis • Hybrid apps and their privacy implications,"90-minütige Klausur oder Portfolio-Prüfung. Mögliche Port- foliobestandteile sind technische Berichte, dokumentierterund funktionsfähiger Quelltext für Softwareanalysen, Live Systemdemonstration, Teilpräsentationenzu Einzelleistungen, laufende, fortzuschreibende technische Teilberichte zur Zusammenfassungzueinem Gesamtdokument, Abschlusspräsen tation. Eckpunkte einer Portofolio-Prüfung:• 3-4 Projektteile zur Implementierung (teilweise in Grup penarbeit) • 3-4 Teilpräsentationen max 15 min • 1 Abschlusspräsentation max 20 min • technische Berichte max 20 Seiten Die genauen Anforderungen werden vom Dozierenden zu Be ginn der Veranstaltung bekanntgegeben. 90-minute exam or portfolio-exam. The exact mode of assess ment will be announced at the start of the semester.","Präsentation, Beamer, Übungsblätter Presentation, projector, exercise sheets",wirdin Abhängigkeitderkonkreten Aufgabenstellung ausgewählt und bekanntgegeben.,MSc Informatik/ Computer Science
5851,Software Process Engineering,455369,Wird vermutlich nicht mehr angeboten Probably not offered anymore,1 Semester,Kuhrmann,Kuhrmann,Englisch English,Modulgruppe „Prog Soft“ Focus „Prog Soft“,2 V + 2Ü,60 Std. Präsenz + 50 Std. Übungen + 70 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 50 hrs exercises + 70 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Software Engineering, Programmierung I + I I Software Engineering, Programming I + I I",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden erlernen die Grundlagen des Softwareent- wicklungsprozesses, die unterschiedlichen Basisprozesse undagilen Methoden, die Konzepte hinter dem Softwareentwicklungsprozess und die Methoden zur Entwicklung und Einführung organisationsweiter und projektspezifischer Entwick  lungsprozesse. Auf der Basis eines Lifecycle-Modells erlernen die Studierenden die Analyse von Prozessanforderungen, das Design von Prozessmodellen, Techniken zur Evaluation der Prozessperformanz und die Entwicklung von prozessverbes sernden Maßnahmen. — Students learn the foundations of the software process, thedifferent base processes and agile methods, the concepts be hind software processes, and the methods used to define and to deploy organization-wide and project-specific development models. Using a process life cycle model, students learn to analyze process requirements, to design processes, to evaluate process performance and to design process improvements. Fähigkeiten / Abilities Die in der Vorlesung vermittelten Kenntnisse über die Methoden und Techniken des Prozessentwurfs werden in den Übun gen in Einzel- und Kleingruppenaufgaben vertieft, die sowohl theoretische als auch praktische Aufgaben enthalten. — Knowledge from the lectures will be trained and refined in exercises. Exercises include theoretical tasks and mini-projects performed in small groups. Kompetenzen / Competencies Die Studierenden sind in der Lage, Methoden und Praktiken für spezifische Projektsituationen auszuwählen und diese in projektspezifischenhybriden Projektprozessenzukombinieren. Weiterhin verstehen die Studierenden Unternehmensanforde rungen an die Prozesse und sind in der Lage, Konzepte des Qualitätsmanagements anzuwenden, um unternehmensweite Prozessstandards einzuführen, Prozessperformanz zu messenund Prozessverbesserungsprojekte durchzuführen. Die Studierenden sind in der Lage, Prozesse zu analysieren, individualisierte Prozesse zu entwerfen und Vorschläge zur Prozessver besserung zu entwickeln. Weiterhin sind die Studierenden inder Lage, einfache Messinstrument zur Ermittlung der Pro zessperformanz und zur Analyse der Stärken und Schwächen zu entwickeln und anzuwenden. — Students are able to select methods and practices for specificproject setups and to combine them in project-specific hy brid development methods. Furthermore, students understandorganization-levelrequirementsandcanapplyqualitymanagement concepts and methods for company-wide process standards, process measurement and process improvement. Stu dents are able to analyze processes, to design individualized processes, and to design process improvement proposals. Fur thermore, students are able to set up a basic measurement instrument to evaluate process performance and to analyze strengths and weaknesses of software processes.","This course includes the basic as well as advanced concepts, methods and techniques in process engineering, notably: • Basic software process models, e. g. , phase/ stage-gate models, Waterfall, Spiral model • Agile and lean software development methods, e. g. , Scrum, Kanban • Agile Scaling Models, e. g. , S AFe, Less• Hybrid development methods, e. g. , the Water-Scrum Fall • Process quality and maturity models, e. g. , C MM I, I SO 15504 • Software Process Lines • Software Process Improvement (S PI) • Software process metamodels • Techniques to tailor software processes to organizations and projects • Advanced techniques to analyze, design, realize, and evolve software processes • Quality management concepts and methods to measure project performance and to improve company-wide and project-specific development methods",90-Min. -Klausur oder Portfolioprüfung 90-minute written examination or portfolio exam,"Präsentation mit Beamer und Tafel, Übungsaufgaben Presentation with projector and blackboard, exercise sheets","Münch, Armbrust, Kowalczyk, Soto: Software Process Defini- tion and Management. Springer, 2012. Kuhrmann, Münch, Richardson, Rausch, Zhang: Managing Software Process Evolution. Springer, 2016 Kneuper:Software Processesand Life Cycle Models:An Intro duction to Modeling, Using and Managing Agile, Plan-Driven and Hybrid Processes. Springer, 2018",MSc Informatik/ Computer Science
5851,Program Repair,455407,Jedes 2. Sommersemester Every other summer semester,1 Semester,"Hammer, Tiwari","Hammer, Tiwari",Englisch English,Modulgruppe „Prog Soft“ Focus „Prog Soft“,2 V + 2Ü,60 Std. Präsenz + 120 Std. selbstständige Arbeit und Prü- Workload fungsvorbereitung 60 contact hours + 120 hours independent study and exam preparation,ECTS/Credits: 6,Keine None,"Software Engineering, Programmierung I + I I, S EP, Algebra und Logik Software Engineering, Programming I + I I, S EP, Algebra and Logic",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge The students learn the basic foundation of the program repair process. These concepts include a thorough understanding of bug detection, patch creation, and risk involved during the  program repair process. This course also exposes the studentsto understand and analyze the bugs in industrial software. Va rious repairs for specific problems and their applicability in the bug-specific situation are discussed. Fähigkeiten / Abilities The participants will know the state-of-the-art software tech niques to P R. They will create tools to employ current and new techniques of Program Repair. Kompetenzen / Competencies The participants will obtain the theoretical and practical skills required to develop automated program repair techniques. They can reuse state-of-art and write their own techniques to tackle known problems with Program Repair techniques.","The reliance on open-source software exposes our infrastruc- tures to software bugs. Many software systems are shippedwith both know and unknown bugs/vulnerabilities. Particularly, identifying and repairing bugs/vulnerabilities presents considerable hurdles. “Put simply: Bugs are ubiquitous, and findingandrepairingthemaredifficult, time-consuming, andma nual processes. ” Program repair is a relatively new technique that aims to automatically find and correct flaws in software. This course aims to provide a solid foundation on various Pro gram Repair techniques. Following are the key insights:• Understandingthecomponentsinvolvedin Program Re pair techniques. • Learn the challenges and open-ended problems in Pro gram Repair. • Learnfromtheapplication—Applyvarious Program Re pair techniques to open-sourced projects. • Create and design practical Program Repair techniques. The following is the detailed catalogue:• Introduction to program analysis and automated pro gram repair • Fault localization— Spectrum based & Semantic-based • Search-based (Generate & Validate) Program repair — Genetic mutation-based & Historical based P R • Semantic-based Program repair — Symbolic Execution based & Static analysis based P R • Challenges in Program Repair — Overfitting & Ranking • Learning-based program repair — Neural Repair • Real World applicability of P R tools — Solution and challenges","90-minütige Klausur oder Portfolio-Prüfung. Mögliche Port- foliobestandteile sind technische Berichte, dokumentierter und funktionsfähiger Quelltext für Softwareanalysen, Live Systemdemonstration, Teilpräsentationenzu Einzelleistungen, laufende, fortzuschreibende technische Teilberichte zur Zusammenfassungzueinem Gesamtdokument, Abschlusspräsentation. Eckpunkteeiner Portofolio-Prüfung(einige Teilefakul tativ):• 3-4 Projektteile zur Implementierung (teilweise in Grup penarbeit) • 3-4 Teilpräsentationen max 15 min • 1 Abschlusspräsentation max 20 min • technische Berichte max 20 Seiten Die genauen Anforderungen werden vom Dozierenden zu Be ginn der Veranstaltung bekanntgegeben. 90-minute exam of portfolio-exam. The exact mode of assess ment will be announced at the start of the semester.","Präsentation, Beamer, Übungsblätter Presentation, projector, exercise sheets",wirdin Abhängigkeitderkonkreten Aufgabenstellung ausgewählt und bekanntgegeben.,MSc Informatik/ Computer Science
5852,Reverse and Reengineering,455418,Jedes 2. Wintersemester Every other winter semester,1 Semester,Hammer,Hammer,Englisch English,Modulgruppe „Prog Soft“ Focus „Prog Soft“,2 V + 2Ü,"60 Std. Präsenz + 120 Std. Übungsaufgaben, Nachbereitung Workload und Prüfungsvorbereitung 60 contact hours + 120 hours exercises, independent study and exam preparation",ECTS/Credits: 6,Keine None,Compiler Construction or Software Analysis,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden sind mit den Techniken der Analyse und Re-factoring von nicht-spezifizierten oder gealterten Softwaresystemen, sowohl mit als auch ohne Verfügbarkeit von Sourceco de, insbesondere mit Hilfe von (halb-)automatischen Analyse vertraut.  Fähigkeiten / Abilities Die Studierenden sind in der Lage, prototypische Systeme zur Rekonstruktionder Programmsemantikund Transformationinein softwaretechnisch verbessertes System eigenständig zu er stellen. Kompetenzen / Competencies Die Studierenden sind in der Lage, Software Entwicklungsarbeiten mit der Erstellung kleinerer, domänenspezifischer Systeme zur Rekonstruktion der Programmsemantik zu unter stützenoder Verbesserungder Programmstrukturangrößeren Softwaresystemen vorzunehmen.","Reverse Engineering von Programmen aus dritter Hand in prozessorspezifischen Binärformaten als auch Zwischencodes. Auswirkungen von Verschleierungstechniken auf diesen Pro zess. Transformation in eine zur Weiterverarbeitung passende Repräsentation, Rekonstruktionvonhöhersprachlichen Daten und Kontrollstrukturen. Programmanalysen zur Verbesserungdes Programmverstehens. Automatisches Refactoringzur Ver besserung der Programmstruktur.","90-minütige Klausur oder Portfolio-Prüfung. Mögliche Port- foliobestandteile sind technische Berichte, dokumentierterund funktionsfähiger Quelltext für Softwareanalysen, Live Systemdemonstration, Teilpräsentationenzu Einzelleistungen, laufende, fortzuschreibende technische Teilberichte zur Zusammenfassungzueinem Gesamtdokument, Abschlusspräsentation. Eckpunkteeiner Portofolio-Prüfung(einige Teilefakul tativ):• 3-4 Projektteile zur Implementierung (teilweise in Grup penarbeit) • 3-4 Teilpräsentationen max 15 min • 1 Abschlusspräsentation max 20 min • technische Berichte max 20 Seiten Die genauen Anforderungen werden vom Dozierenden zu Be ginn der Veranstaltung bekanntgegeben. 90-minute exam or portfolio-exam. The exact mode of assess ment will be announced at the start of the semester.","Präsentation, Beamer, Übungsblätter Presentation, projector, exercise sheets",wirdin Abhängigkeitderkonkreten Aufgabenstellung ausgewählt und bekanntgegeben.,MSc Informatik/ Computer Science
5853,Empirische Methoden des Software Engineering,455375,Wird vermutlich nicht mehr angeboten Probably not offered anymore,1 Semester,Kuhrmann,Kuhrmann,Englisch English,Modulgruppe „Prog Soft“ Focus „Prog Soft“,2 V + 2Ü,60 Std. Präsenz +Workload 120 Std. selbstständige Arbeit/Projektarbeit und Prüfungs vorbereitung 60 contact hours + 120 hours independent study and exam preparation and project work,ECTS/Credits: 6,Keine None,"Software Engineering, Programmierung I + I I Software Engineering, Programming I + I I",Verwendbarkeit in weiteren Studiengängen,"Nach der Beendigung dieser Lehrveranstaltung werden Stu- dierende:• Empirische Methodenzur Evaluierungvonwissenschaft lichen Fragestellungen kennen und anwenden können • Wissenschaftliche Aussagen kritisch hinterfragen kön nen und deren Zuverlässigkeit einschätzen können • Befähigt sein eine geeignete Evaluierungsmethode füreine wissenschaftliche Fragestellung begründet auszu wählen• In Abschlussarbeiten eine geeignete Evaluierung durch führen können — After the course, students: • Know and can use empirical methods for evaluating scientific problems. • Can challenge scientific statements and can evaluate their reliability. • Can select proper scientific methods to work on a scien tific problem. • Can provide a proper evaluation for their thesis and other study-related work.","e der Vorlesung: • Wissenschaftliche Methode, Beweise, Empirie • Rigorose Messung von Performance, Benchmarks • Fallstudien und Umfragen• Quantitative Messungen: Metriken, Software Reposito ries • Kontrollierte Experimente mit Entwicklern • Notwendige statistische Grundlagen —New results in computer science, notably in software enginee ring, aim at increasing the quality of a system, reducing thecosts, improving performance and maintainability, or impro ving the understandability and usability of software systems. Yet, how can respective statements be evaluated, especiallyif user (Humans) are involved? This course introduces a col lection of empirical methods and discusses their suitability for evaluating given problems. Examples are primarily taken from the software engineering domain.  The content of the course includes: • Scientific method, proofs, empiricism • Rigorous measurement, benchmarking • Case studies and survey research • Quantitative methods: metrics, software repositories • Controlled experiments • Required statistical methods",90-Min. -Klausur 90-minute written examination,"Tafel, Beamer, Flipchart Blackboard, projector, flip chart","Wohlinetal. :Experimentationin Software Engineering, Sprin- ger, 2012 Runeson et al. : Case Study Research in Software Engineering, Wiley, 2012 Shull et al. (Eds. ): Guide to Advanced Empirical Software En gineering, Springer, 2008 Kitchenham et al. : Evidence-based Software Engineering and Systematic Reviews, C RC Press, 2016 Field et al. : Discovering Statistics with R, Sage Publications, 2012 Further complementing (scientific articles) literature will be named in the course.",MSc Informatik/ Computer Science
5853,Programming Paradigms,455435,Unregelmäßig Irregular,1 Semester,Hammer,"Hammer, Tiwari",Englisch English,Modulgruppe „Prog Soft“ Focus „Prog Soft“,2 V + 2Ü,"60 Std. Präsenz + 120 Std. Übungsaufgaben, Nachbearbei- Workload tung des Vorlesungsstoffs und Prüfungsvorbereitung 60 contact hours + 120 hours exercises, independent study and exam preparation",ECTS/Credits: 6,Keine None,"Software Engineering, Programmierung I + I I, Software Engi- neering Praktikum, Algebra und Logik Software Engineering, Programming I + I I, Software Enginee ring Internship, Algebra and Logic",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge The students learn the foundation of various programming paradigms. In particular, the concepts in the lecture includedifferent ways or styles in which a given program or program  ming language can be organized. Besides, students will gothrough recent research articles to understand the current advancements in the programming paradigms. The course ena blesstudentstomakeoptimaluseofaparticularprogramminglanguage and identify the most appropriate language for va rious development setups. Fähigkeiten / Abilities The participants comprehend the numerous applications and use cases for a programming language. They will grasp the consequences of selecting a language’s execution model. Kompetenzen / Competencies Participants will obtain programming concepts shared amongvarious programming languages, hence facilitating the acquisition of new language models. Students will review objectoriented programming principles and be introduced to func tional programming. In addition, they will acquire practical programming experience in various programming languages.","Programming paradigms categorize programming languages according to their characteristics. Programming paradigms, in particular, aredistinctmethodsorstylesinwhichaprogramor programming language can be structured. Multiple paradigmsexist for classifying languages. Some paradigms are primari ly concerned with consequences for the language’s execution model, such as whether side effects are permitted or if theexecution model dictates the order of operations. Other pa radigms are primarily concerned with how code is arranged, such as arranging code into units with the state that the code modifies. This course aims to provide a solid foundation on various programming paradigms and teaches students how to make op timal use of a particular programming language and identifythe most appropriate language for a specific development as signment. Following are the key highlights of the course: • Declarative paradigms • Imperative paradigms • Structured • Concurrent computing • Data-driven • Event-Driven • Nondeterministic programming • Current Research Articles","Portfolio-Prüfung. Mögliche Portfoliobestandteile sind tech- nische Berichte, dokumentierter und funktionsfähiger Quell-text für Softwareanalysen, Live-Systemdemonstration, Teil präsentationen zu Einzelleistungen, laufende, fortzuschreibende technische Teilberichte zur Zusammenfassung zu einem Gesamtdokument, Abschlusspräsentation. Eckpunkte ei ner Portofolio-Prüfung (einige Teile fakultativ):• 3-4 Projektteile zur Implementierung (teilweise in Grup penarbeit) • 3-4 Teilpräsentationen max. 15 min, u. a. zu aktuellen Forschungsartikeln • 1 Abschlusspräsentation max. 20 min • technische Berichte max. 20 Seiten Die genauen Anforderungen werden vom Dozierenden zu Be ginn der Veranstaltung bekanntgegeben. Portfolio-exam. Theexactmodeofassessmentwillbeannoun ced at the start of the semester.","Präsentation, Beamer, Übungsblätter Presentations, projector, exercise sheets",wird in Abhängigkeit der konkreten Aufgaben- stellung ausgewählt und bekanntgegeben.,MSc Informatik/ Computer Science
5854,Secure Information Flow,455384,Jedes 2. Sommersemester Every other summer semester,1 Semester,Hammer,Hammer,Englisch English,"Modulgruppe „Prog Soft“, Modulgruppe „I T-Sec Rel“ Focus „Prog Soft“, Focus „I T-Sec Rel“",2 V + 2Ü,"60 Std. Präsenz + 120 Std. Übungsaufgaben, Nachbereitung Workload und Prüfungsvorbereitung 60 contact hours + 120 hours exercises, independent study and exam preparation and project work",ECTS/Credits: 6,Keine None,"Software Engineering, Programmierung I + I I, S EP, Algebra und Logik Software Engineering, Programming I + I I, S EP, Algebra and Logic",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden erlernen Basiskonzepte der Informations-flusskontrolle und der Nichtinterferenz. Die Konzepte umfas sen statische Methoden der Sourcecode-Analyse, dynamische Methoden der Laufzeitanalyse, sowie manuelle Korrektheits beweise. Fähigkeiten / Abilities Die Teilnehmer kennen die wichtigsten Methoden zum Ana lysieren des Informationsflusses in Softwaresystemen und sindin der Lage, Analysemethoden programmiertechnisch umzu setzen. Dazu benötigte grundlegende Algorithmen können sie erklären und mit alternativen Algorithmen vergleichen. Kompetenzen / Competencies Die Teilnehmer erlernen theoretische und praktische Kompetenzeninder Konzeption, Umsetzungund Evaluierungvon Informationsflussanalysen. Weiterhin sind die Studierenden be fähigt, einzelne Analysen auch auf andere Problemstellungen und Analyseziele anzupassen.","Typsysteme um Vertraulichkeit in imperativen Programmiersprachen zu garantieren Analyse von multi-threading Programmen Statische Programmanalyse (basierend auf Program Slicing) Declassification, Integrität Dynamische vs. statische Informationsflusskontrolle I FC für realistische Sprachen (O OP, dynamische Srachen) Quantitative I FC","90-minütige Klausur oder Portfolio-Prüfung. Mögliche Port- foliobestandteile sind technische Berichte, dokumentierterund funktionsfähiger Quelltext für Softwareanalysen, Live Systemdemonstration, Teilpräsentationenzu Einzelleistungen, laufende, fortzuschreibende technische Teilberichte zur Zusammenfassungzueinem Gesamtdokument, Abschlusspräsen tation. Die genauen Anforderungen werden vom Dozierenden zu Beginn der Veranstaltung bekanntgegeben. 90-minute exam or portfolio-exam. The exact mode of assess ment will be announced at the start of the semester.","Präsentation, Beamer, Übungsblätter Presentation, projector, exercise sheets",wirdin Abhängigkeitderkonkreten Aufgabenstellung ausgewählt und bekanntgegeben.,MSc Informatik/ Computer Science
5855,Object-Oriented Programming with C++,453002,Jedes 2. Sommersemester Every other summer semester,1 Semester,Hammer,Hammer,Englisch English,Modulgruppe „Prog Soft“ Focus „Prog Soft“,2 V + 2Ü,"60 Std. Präsenz + 120 Std. Übungsaufgaben, Nachbereitung Workload und Prüfungsvorbereitung 60 contact hours + 120 hours exercises, independent study and exam preparation",ECTS/Credits: 6,Keine None,"Programmierung I + I I, S EP, Software Engineering Programming I + I I, S EP, Software Engineering",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden lernen Basiskonzepte der objekt-orientierten Programmierung und weitere fortgeschrittene Konzepte der Programmiersprache C++ kennen. Die Konzepte umfassenz. B. (Mehrfach-)Vererbung, Ausnahmebehandlung, Templates, Operatorüberladung, Ein-/Ausgabe mit Streams, Lamb  das, das Speichermodell und Multi-Threading. Fähigkeiten / Abilities Die Teilnehmer kennen die wichtigsten Konzepte der objekt orientierten Programmierung in C++ und sind in der Lage, diese Konzepte korrekt umzusetzen. Sie können die Umsetzung in Compilern erklären und die daraus folgenden Konse quenzen analysieren sowie die passenden Anwendungsgebiete identifizieren und Sicherheitsaspekte einschätzen. Kompetenzen / Competencies Die Teilnehmer erlernen theoretische und praktische Kompe tenzen in der Konzeption, Umsetzung und Evaluierung vonmaschinennaher objekt-orientierter Programmierung. Weiter hin sind die Studierenden befähigt, die erlernten Konzepteauch auf andere Programmiersprachen und Systeme anzupas sen","• Objekt-orientierte Programmierung • Vererbung, Mehrfachvererbung (auch virtuell) • Ausnahmebehandlung • Template Programmierung • Operatorüberladung• Manuelles und semi-automatisches Speichermanage ment • Stream-basierte Ein-/Ausgabe • Lambdas • Mult-Threading • Speichermodell","90min Klausur oder Portfolio-Prüfung. Mögliche Portfoliobe- standteile sind technische Berichte, dokumentierter und funk- tionsfähiger Quelltext in C++, Live-Systemdemonstration, Teilpräsentationen zu Einzelleistungen, laufende, fortzuschrei bendetechnische Teilberichtezur Zusammenfassungzueinem Gesamtdokument, Abschlusspräsentation. Diegenauen Anforderungen werden vom Dozierenden zu Beginn der Veranstal tung bekanntgegeben. 90-minute exam or portfolio-exam. The exact mode of assess ment will be announced at the start of the semester.","Präsentation, Beamer, Übungsblätter Presentation, projector, exercise sheets",wirdin Abhängigkeitderkonkreten Aufgabenstellung ausgewählt und bekanntgegeben.,MSc Informatik/ Computer Science
5856,Compiler Construction,455402,Jedes 2. Sommersemester Every other summer semester,1 Semester,Hammer,Hammer,Englisch English,Modulgruppe „Prog Soft“ Focus „Prog Soft“,4 V + 2Ü,"90 Std. Präsenz + 180 Std. Übungsaufgaben, Nachbereitung Workload und Prüfungsvorbereitung 90 contact hours + 180 hours exercises, independent study and exam preparation",ECTS/Credits: 9,Keine None,Keine None,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden sind mit den Techniken der syntaktischenund semantischen Sprachbehandlung von Übersetzern und Interpretern sowie der Codegenerierung und -optimierung, ins besondere mit Hilfe von Programmanalyse vertraut. Fähigkeiten / Abilities Die Studierenden sind in der Lage, prototypische sprachverar beitende Systeme eigenständig zu erstellen. Kompetenzen / Competencies Die Studierenden sind in der Lage, Software Entwicklungsarbeiten mit der Erstellung kleinerer, domänenspezifischer Programmiersprachen zu unterstützen oder Anpassungen an grö ßeren sprachverarbeitenden Systemen vorzunehmen.","Behandlung der verschiedenen Phasen eines Übersetzers: Le- xikalische, syntaktischeundsemantische Analyseeines Source Programms, Codegenerierung und –optimierung für abstrakte und reale Maschinen, Grundlagen der Programmanalyse.","90-minütige Klausur oder Portfolio-Prüfung. Mögliche Port- foliobestandteile sind technische Berichte, dokumentierterund funktionsfähiger Quelltext für Softwareanalysen, Live Systemdemonstration, Teilpräsentationenzu Einzelleistungen, laufende, fortzuschreibende technische Teilberichte zur Zusammenfassungzueinem Gesamtdokument, Abschlusspräsentation. Eckpunkteeiner Portofolio-Prüfung(einige Teilefakul tativ):• 3-4 Projektteile zur Implementierung (teilweise in Grup penarbeit) • 3-4 Teilpräsentationen max 15 min • 1 Abschlusspräsentation max 20 min • technische Berichte max 20 Seiten Die genauen Anforderungen werden vom Dozierenden zu Be ginn der Veranstaltung bekanntgegeben. 90-minute exam or portfolio-exam. The exact mode of assess ment will be announced at the start of the semester.","Präsentation, Beamer, Übungsblätter Presentation, projector, exercise sheets","Aho, Lam, Sethi, Ullman: Compilers - Principles, Techniques and Tools. Addison-Wesley.",MSc Informatik/ Computer Science
5858,Engineering Dependable Software,455424,Jedes 2. Sommersemester Every 2nd summer semester,1 Semester,Hammer,Hammer,Englisch English,Modulgruppe „Prog Soft“ Focus „Prog Soft“,2 V + 2Ü,"60 Std. Präsenz + 120 Std. Übungsaufgaben, Nachbearbei- Workload tung des Vorlesungsstoffs und Prüfungsvorbereitung 60 contact hours + 120 hours exercises, independent study and exam preparation",ECTS/Credits: 6,Keine None,"Software Engineering, Programmierung I + I I, Software Engi- neering Praktikum, Logik Software Engineering, Programming I + I I, Software Enginee ring Internship, Logic",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden sind mit Techniken zur Verbesserung der Zuverlässigkeit von sequentieller und nebenläufiger Software vertraut.  Fähigkeiten / Abilities Die Studierenden sind in der Lage, prototypische Spezifikatio nen für Softwarekomponenten eigenständig zu erstellen unddiese manuell zu verifizieren oder (halb-)automatisch validie ren oder verifizieren zu lassen. Dazu benötigte grundlegende Algorithmen können sie erklären und mit alternativen Techni ken vergleichen. Kompetenzen / Competencies Die Studierendensindinder Lage, Softwareentwicklungsarbeiten mit der Annotation von Typen oder Vor- und Nachbedin gungen zu unterstützen und Modelle der Programmsemantik zur Sicherstellung von Programmeigenschaften zu erstellen. Dadurch sind sie in der Lage, Verbesserungen der Zuverlässig keit auch an größeren Softwaresystemen vorzunehmen.","Die Vorlesung behandelt wichtige Themenkomplexe zur Ver- besserungder Zuverlässigkeitvon Softwaresystemen, unteran-derem sind in dieser Veranstaltung die Themen Semantik, Typisierung und Typinferenz, Model Checking, Programmbewei se, sowie Parallelität und Prozessalgebren relevant.","90-minütige Klausur oder Portfolio-Prüfung. Mögliche Port- foliobestandteile sind technische Berichte, dokumentierterund funktionsfähiger Quelltext für Softwareanalysen, Live Systemdemonstration, Teilpräsentationenzu Einzelleistungen, laufende, fortzuschreibende technische Teilberichte zur Zusammenfassungzueinem Gesamtdokument, Abschlusspräsentation. Eckpunkteeiner Portofolio-Prüfung(einige Teilefakul tativ):• 3-4 Projektteile zur Implementierung (teilweise in Grup penarbeit) • 3-4 Teilpräsentationen max. 15 min • 1 Abschlusspräsentation max. 20 min • technische Berichte max. 20 Seiten Die genauen Anforderungen werden vom Dozierenden zu Be ginn der Veranstaltung bekanntgegeben. 90-minute exam or portfolio-exam. The exact mode of assess ment will be announced at the start of the semester.","Präsentation, Beamer, Übungsblätter Presentations, projector, exercise sheets",wird in Abhängigkeit der konkreten Aufgaben- stellung ausgewählt und bekanntgegeben.,MSc Informatik/ Computer Science
5859,Software Engineering Research Reproduction,455425,Jedes 2. Sommersemester Every 2nd summer semester,1 Semester,Hammer,"Hammer, Tiwari",Englisch English,Modulgruppe „Prog Soft“ Focus „Prog Soft“,"6Ü Es besteht Anwesenheitspflicht. Die Anwesenheitspflicht be-steht aus folgenden Gründen: Um den Erfolg der Veranstaltung zu gewährleisten, ist eine verstärkte Interaktion der Stu dierendenuntereinanderaberauchzwischen Studierendenund Betreuern notwendig. Bei der Interaktion mit den Betreuern oder den Kommilitonen, können die Studierenden Proble me besprechen und Lösungsstrategien erarbeiten. Ein weiterer Grund sind die regelmäßig stattfindenden Präsentationen der Studierenden. Jeder Studierende arbeitet sich frühzeitig verstärkt in ein Gebiet der Veranstaltung ein. In der Präsenta tion vermittelt der/die Studierende sein Spezialwissen an dieanderen Teilnehmer. Damit sichergestellt wird, dass die Stu dierenden dieses Spezialwissen vermittelt bekommen, müssen sie zu den Präsentationen anwesend sein. Der letzte Grund ist dieÜberprüfungderpraktischen Kompetenzder Studierenden. Sie werden während der Anwesenheitszeit befragt, um ihren Lernerfolg zu beobachten. Attendance is compulsory. This is for the following reasons:First, to ensure the success of the practicum, it is necessa ry to enhance the interaction among students and betweenstudents and tutors. When interacting with the tutors or fel low students, the students can discuss problems and develop solution strategies. Second, there are the regularly scheduled presentationsofthestudents. Eachstudentisassignedatopic area for the practicum which he or she treats in greater detail than the others. In the presentation the student shares theirdetailedknowledgewiththeotherstudents. Toensurethema  ximum benefit for all students, it should be ensured that all ofthem are present at the presentation. Third, one of the objec tives of the practicum is to test the students’ practical skills. The students will be interviewed during their attendance to observe their learning success.",90 Std. betreute Laborarbeit + 110 Std. nicht betreute La- Workload borarbeit + 160 Nachbearbeitung90 hours supervised laboratory work + 110 hours unsupervi sed lab work + 160 hours follow-up,ECTS/Credits: 12,Keine None,"Software Engineering Praktikum, Programmierung I + I I, Software Engineering Software Engineering Internship, Programming I + I I, Softwa re Engineering",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Students will understand the fundamentals and significance of reproducing research in this lab. This can be beneficial for future studies and a potential academic career. Students willlearn how to conduct research reproduction, meticulously do cument the data, compose a final report, and present their findings. Fähigkeiten / Abilities The participants will comprehend the importance of researchartifacts. Thereplicationprocesswillenablestudentstosyste maticallygrasptheresearchprocessandperformresearchthat is reproducible, useful, and accessible to a wide audience.","Thelabwillfollowthe AC M/I EE Eclassificationfortheavaila- bility and replicability of the research artifacts presented at premier software/programming language conferences, such as I CS E, E SE C/F SE, A SE, I SS TA, P LD I, O OP SL A, P OP L, and T AC AS. Recent years have seen a positive trend toward open science policy where all premier venues require researchers to  submit research artifacts for evaluation. The key idea is thatall study results should be available to the public, and empi rical investigations should be replicable. Inthislab, studentsreplicateaspecificcollectionofpreviously published papers. The key task is to read the article, verify if artifactsarestillaccessible, comprehendthefundamentalsand rationale of the relevant paper, replicate the study’s results, and then assess the artifact’s extensibility. The lab consists of three phases: • Reading Groups: Students acquire the information andskillsnecessarytoevaluateresearchartifactsviathereading and discussion of pertinent articles on research ar tifacts. • Students will be assigned a set of publications and arti facts individually. • Report and final presentation","Portfolio-Prüfung. Mögliche Portfoliobestandteile sind tech- nische Berichte, dokumentierter und funktionsfähiger Quell-text für Softwareanalysen, Live-Systemdemonstration, Teilpräsentationen zu Einzelleistungen, laufende, fortzuschreibende technische Teilberichte zur Zusammenfassung zu einem Gesamtdokument, Abschlusspräsentation. Eckpunkte ei ner Portofolio-Prüfung (einige Teile fakultativ): • 3-4 Projektteile zur Implementierung • 3-4 Teilpräsentationen max. 15 min • 1 Abschlusspräsentation max. 20 min • technische Berichte max. 20 Seiten Die genauen Anforderungen werden vom Dozierenden zu Be ginn der Veranstaltung bekanntgegeben. Portfolio-exam. Theexactmodeofassessmentwillbeannoun ced at the start of the semester.","Präsentation, Beamer, Übungsblätter Presentations, projector, exercise sheets",wird in Abhängigkeit der konkreten Aufgaben- stellung ausgewählt und bekanntgegeben.,MSc Informatik/ Computer Science
5871,Commutative Algebra,455387,Unregelmäßig Irregular,1 Semester,Kreuzer,Kreuzer,Englisch English,Modulgruppe „Alg Math“ Focus „Alg Math“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Algebra und Zahlentheorie I Algebra and Number Theory I,Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden lernen grundlegende Klassen kommutativer Ringe und ihre Eigenschaften kennen. Sie sind mit den Bezie hungendiverserringtheoretischer Eigenschaftenuntereinander sowiemitzentralen Struktursätzenderkommutativen Algebra vertraut.  — Students get to know basic classes of commutative rings and their properties. They are familiar with the relations of variousring theoretic properties to each other and with central struc ture theorems in Commutative Algebra. Fähigkeiten / Abilities Die Studierendenübenwichtige Beweistechnikenausderkom mutativen Algebra und sind in der Lage, diese zielsicher und korrekteinzusetzen. Siesindfähig, kommutative Ringegemäß ihren Eigenschaften zu analysieren und zu klassifizieren. — Studentspracticeimportantprooftechniquesin Commutative Algebraandareabletoapplytheminapurposefulandcorrectmanner. They succeed in analysing and classfiying commuta tive rings according to their structural properties. Kompetenzen / Competencies Die Studierenden lernen sich in komplexen abstrakten Pro blemsituationen zurecht zu finden. Sie finden Lösungswegeund können ihre Erkenntnisse mit exakten Beweisen unter mauern. —The students learn to manage complex abstract problem set tings. They find solutions and are capable of substantiating their insights with exact proofs.","Das Modul führt in wichtige Teile der Theorie der kommu- tativen Ringe ein. Nach dem ersten Studium grundlegender Typen solcher Ringe werden das Primspektrum, die Zariski Topologie, die Primärzerlegung und die klassische Dimensionstheorie betrachtet. Ferner werden die Technik der Lokali sierungundwichtige Klassenlokaler Ringe(wieregulärelokale Ringe, lokalevollständige Durchschnitteund Cohen-Macaulay Ringe) untersucht. —The module introduces important parts of the theory of com mutative rings. After an initial study of basic types of suchrings, the prime spectrum, the Zariski topology, primary de composition and classical dimension theory become the focus of attention. Furthermore, the technique of localisation and important classes of local rings (such as regular local rings, local complete intersections, and Cohen-Macaulay rings) are examined.",60 Minuten Klausur oder ca. 20 Minuten mündliche Prüfung inenglischer Spracheundjenach Anzahlder Hörer; diegenaue Prüfungsart wird zu Beginn des jeweiligen Semesters bekannt  gegeben. Written exam (60 minutes) or oral exam (about 20 minutes); the precise mode of assessment will be announced at the start of the semester.,"Präsentation und Beamer, Tafel Presentation and projector, blackboard",Nach Ansage in der Vorlesung Announced in the lecture course,MSc Informatik/ Computer Science
5873,Operatortheorie,401403,Alle vier Semester Every four semesters,1 Semester,Forster-Heinlein,Forster-Heinlein,Deutsch oder Englisch German or English,Modulgruppe „Alg Math“ Focus „Alg Math“,4 V + 2Ü,"60 + 30 Std. Präsenz, 90 + 90 Std. Eigenarbeitszeit Workload 60 + 30 contact hours, 90 + 90 hours self study",ECTS/Credits: 9,Keine None,"Lineare Algebra I + I I, Analysis I + I I Linear Algebra I + I I, Analysis I + I I","Verwendbarkeit in weiteren Master Computational Mathematics, Lehramt Mathematik Studiengängen Gymnasium Master Computational Mathematics, Teacher training pro-gramme for secondary education in Mathematics (Gymnasi um)","Kenntnisse / Skills/Knowledge Die Studierenden kennen die grundlegenden Techniken, um Operatoren in Banach- und Hilbert-Räumen zu analysieren. Fähigkeiten / Abilities Die Studierenden sind in der Lage, die Methoden der Opera tortheorie bei konkreten Fragestellungen zu aktuellen Themen der Mathematik und der Naturwissenschaften anzuwenden.","Inhalt in Stichpunkten: Focus „Algorithmics and Mathematical Modeling“ Banach- und Hilbert-Räume, Dualität Basen in Banach und Hilbert-Räumen Hauptsätze für Operatoren auf Banach-Räumen: Sätze von Hahn-Banach, Satz über die offene Abbildung, Satz von ab geschlossenen Graphen Spektraltheorie kompakter Operatoren Spektraltheorie selbstadjungierter Operatoren",90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. Written exam (90 minutes) or oral exam (about 20 minutes); the precise mode of assessment will be announced at the start of the semester.,"Tafel, Beamer, Übungsblätter Blackboard, projector, exercise sheets","W. Rudin, Functional Analysis, Mc Graw Hill, 1991. M. Reed/B. Simon, Functional Analysis, Academic Press, 1972. D. Werner: Funktionalanalysis, Springer, 2007. F. Hirzebruch, W. Scharlau: Einführung in die Funktionalana lysis, B I-Hochschulbücher, 1991",MSc Informatik/ Computer Science
5880,Dependable Distributed Systems,455403,Wird vermutlich nicht mehr angeboten Probably not offered anymore,1 Semester,Reiser,Reiser,Deutsch oder Englisch German or English,Modulgruppe „I T-Sec Rel“ Focus „I T-Sec Rel“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,I T-Sicherheit Advanced I T Security,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studenten erwerben die Kenntnis von Metriken für Zuver-lässigkeit, Grundlegende Modelle für verteilte Systeme, Verfahren zur Ausfallerkennung in verteilten Systemen, Redundanztechniken, Algorithmen für zuverlässige Gruppenkommunikation, Einbruchstolerante Systeme sowie Koordinierungs verfahren in verteilten Systemen und zuverlässige Datenspei cherung. —The students acquire the knowledge of metrics for reliabili ty, basic models for distributed systems, methods for failuredetection in distributed systems, redundancy techniques, al gorithms for reliable group communication, intrusion-tolerant systems, andcoordinationprocessesindistributedsystemsand reliable data storage. Fähigkeiten / Abilities Die Studenten verstehen komplexe Algorithmen für verteilte Systeme. Siekönnenalgorithmische Lösungenund Architektu ren bezüglich Komplexität und Zuverlässigkeit beurteilen undsie können geeignete Lösungen für verschiedene praxisbezoge ne Anwendungsfelder auswählen. — The students understand complex algorithms for distributedsystems. They can judge algorithmic solutions and architec tures with respect to complexity and reliability and they can choose appropriate solutions for different practical application fields. Kompetenzen / Competencies Die Studentenbeherrschendas Anwendenvontheoretischfun dierten Algorithmen in praxisbezogenen Lösungen sowie das Abwägen von Entwurfsalternativen bei der Planung von zu verlässigen verteilten Systemen. —The students master the application of theory-based algo rithms into practical solutions, and the arbitration of design alternatives in the design of reliable distributed systems.","Das Modul beinhaltet die Themen Grundlegende Metriken (Ausfallwahrscheinlichkeit, M TB F, M TT B, Verfügbarkeit); Modelle für Zeit, Kommunikation und räumliche Verteilung; Theoretische Modelle für Ausfallerkennung; Gruppenkommunikation: Problemstellung, Semantiken, Algorithmen; Kon zept der aktiven und passiven Replikation, jeweilige Vor- und Nachteile; Byzantinische Fehlertoleranz (B FT) und deren Anwendung bei einbruchstoleranten Systemen; Uhrensynchronisation, verteilten Koordinierung (Wahl- und Sperralgorithmen); Synchronisationsdienste (Chubby, Zoo Keeper) und zu verlässige Datenspeicherung in großen Systemen (Redundanz, Backup-Strategien, R AI D-Systeme). —The module includes the topics of Basic metrics (probabi lity of failure, M TB F, M TT B, availability); models for time,  communicationandspatialdistribution; theoreticalmodelsforfailure detection, group communication: issues, semantics, algorithms, concept of active and passive replication, their respective advantages and disadvantages; Byzantine fault tolerance (B FT) and their application to intrusion-tolerant systems, clock synchronization, distributed coordination (choi ce and barrier algorithms); synchronization Services (Chubby, Zoo Keeper) and reliable data storage in large systems (redun dancy, backup strategies, R AI D systems).","60 Minuten Klausur oder 20 Minuten mündliche Prüfung je- weils in deutscher oder englischer Sprache und je nach Anzahlder Hörer. Die genaue Prüfungsart wird zu Beginn des Semes ters bekannt gegeben. 60-minute exam or 20-minute oral examination, depending on the number of listeners, in German or English. The precisemode of assessment will be announced at the start of the se mester.","Präsentation und Beamer, Tafel Projector, presentation and blackboard","C. Cachine, R. Guerraoui, L, Rodrigues, Introduction to Relia- ble and Secure Distributed Programming, Springer, 2011 Israel Koren, C. Mani Krishna, Fault-Tolerant Systems, Mor gan Kaufmann, 2007. P. Veríssimoand L. Rodrigues, Distributed Systemsfor System Architects, Kluwer Academic Publishers, 2001, Parts I and I I. Wissenschaftliche Artikel nach Ansage in der Vorlesung / Scientific Articles to be announced in the lecture",MSc Informatik/ Computer Science
5881,Privacy Enhancing Techniques,405223,Jedes Wintersemester Every winter semesters,1 Semester,Posegga,Cuellar,Englisch English,Modulgruppe „I T-Sec Rel“ Focus „I T-Sec Rel“,2 V,"30 Std. Präsenz + 60 Std. Nachbearbeitung des Vorlesungs- Workload stoffs, Vorbereitung eines Referats und Prüfungsvorbereitung30 contact hours + 60 hours Follow-up, preparing a presenta tion, and exam preparation",ECTS/Credits: 3,Keine None,"I T-Sicherheit, Security Insider Lab I oder I I, System Security Advanced I T Security, Security Insider Lab I or I I, System Se- curity",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden lernen wichtigsten technische Konzepte und Schlüsselfragen zum besseren Schutz der Privatsphäre und Technologien (P ETs), und deren Wechselwirkung in Kombination mit konventionellen Sicherheitstechnologien, wie Ver schlüsselungund Zugangskontrolle. Sielernenwieweitverbreitete und neu entstehende Technologien Organisationen ermöglichen, verschiedene Arten von personenbezogenen Da ten zu sammeln, verknüpfen und verarbeiten. Sie werden die aktuelle Konzepte der datenschutzfreundliche Technologien(Privacy-Enhancing Technologies, P ET) und die Standard methoden von Privacy-by-Design kennenlernen, inklusive die neuere Entwicklungen, wie Privacy Enhancing Architekturen und L IN DD UN. — Students learn key technical concepts related to privacy, bothregarding the associated issues in current and emerging technologies, and the possibilities of protecting the privacy in tho se applications. Students learn generic principles, methods, and tools of privacyby-design (Pb D) and of privacy enhan cing technologies (P ETs), including data anonymization and perturbation techniques. They also learn which methods areadequate for particular situations, for data release, for big da ta applications (in clouds, for instance), and for applications based on sensors and actuators in constrained environments. On the other hand students will learn the basic limitations of P ETs. Fähigkeiten / Abilities Die Studierendenentwickeln Fertigkeiteninderfrühzeitige Erkennung, Identifizierung und Bewertung von Datenschutzgefahrenund Risikeninexistierendenodergeplanten Anwendungen. Darüber hinaus sind sie in der Lage, diese Risiken professionell zu begegnen indem sie Modifikationen in der Funktionalität der Anwendung vorschlagen, oder adäquaten datenschutzfreundlichen Lösungen auswählen oder entwickeln, im plementieren und instanziieren. —Students will develop skills in the early detection, identificati on, and evaluation of privacy threats and risks in existing or planned applications. In addition, they will be able to manage and respond to the risks, either suggesting modifications in the functionality of the application, or selecting or developingadequate privacy-friendly solutions, and implementing and in stantiating them. Kompetenzen / Competencies Die Studierenden sind in der Lage, bewährte Methoden und Technologien einzusetzen, wie z. B. Privacy-by-Design, L IN D D UN, an Hand der Anforderungen selbstständig einzusetzenund Lösungen zu konzipieren. Der Student kann die Wechsel wirkungerklärenzwischen Schutzder Privatsphäre, Sicherheit und Funktionalität und ist in der Lage in konkreten Situatio nen, Kompromisse zwischen diese Ziele zu finden. Dabei kanner die Stärken und Schwächen der verschiedenen P ETs ver gleichen. Der Student kann die aktuelle Forschungs-Literatur in diesem Bereich zu lesen und diskutieren. —Students will know how to apply best practices and establis hed technologies, such as Privacy by Design, L IN DD UN. The students can explain the tradeoffs between privacy protection, security and functionality and to find compromises between these competing goals. They can compare the strengths andweaknesses of different P ETs. The students can read and dis cuss the current research literature in this area.","In dem Modul werden folgende Inhalte behandelt: Die Vorlesung stellt datenschutzfreundliche Technologien(Privacy-Enhancing Technologies, P ET) systematisch dar, sowohl im Allgemeinen als auch und insbesondere in dem Kon textext von Datenbanken, Big Data (z. B. , in Clouds), und in ""constrained Environments"", in denen Geräte mit begrenzten Ressourcen eine entscheidende Rolle spielen, als Sensoren und Aktoren. Wir werden die Bedrohungen der Privatsphäre in den verschiedenen T CP/I P- und Anwendungs- Schichten präsentieren und diskutieren sowie die Anforderungen, Konzepte, Me thoden und Verfahren, um den Schutz der Privatsphäre zugewährleisten. Wir werden auch die Probleme und Beschrän kungender Privatsphäre-Frameworksundvontechnologischen Lösungen, um Daten oder Ereignissen anonymisieren zu dis kutieren. Indembesonderen Kontextbegrenzte Umgebungen, werden wir rechnerisch leichten Methoden zu diskutieren, umbesseren Schutz der Privatsphäre Anmeldeinformationen, Au torisierung, Integrität und Vertraulichkeit. — The course covers the following topics:- Attacks against privacy, including traffic analysis, deanony mization, and side-channel attacks-Systematicprivacyriskassessment(forinstance, using LI ND D UN)- Privacy issues and privacy enhancing technologies in par ticular environments, like clouds or mobile devices, and for particular applications, including location-based services-Special PE Ts, including Trusted-computing-based PE Ts, pri vacy preserving data mining and data release - Differential privacy - Privacy-preserving software systems and applications  - Relation between cryptography and privacy - Anonymous credentials - Anonymous routing and anonymity systems - Lightweight privacy-enhancing technologies for constrained environments, to provide user consent.","Teilprüfungsleistungen: • Referat: ca. 30-min. Referat mit Präsentation über selbsterarbeitetes Thema. Die Studierenden können am Semesterbeginn aus einer Auswahl von Themen wählen. • schriftliche/mündliche Prüfung: 60-min. schriftliche Prüfung oder ca. 20-min. mündliche Prüfung. Die Prüfungsart wird am Semesterbeginn durch den/die Do zent(in) festgelegt und bekanntgegeben. Eine Anmeldung zum Referat impliziert automatisch eine Anmeldung zu einem der angebotenen Termine zur schriftlichen/mündlichen Prüfung im Anschluss an den gleichen Vor lesungszeitraum. Um dieses Modul zu bestehen müssen beide Teilprüfungsleistungen bestanden werden. Dabei wird die schriftli che/mündliche Prüfung mit 80% gewichtet, das Referat mit 20%. This module is assessed in partial examinations: • Oral presentation: approx 20 min. Students in small groups will present selected topics chosen during the semester. • 60-minute written or 20-minute oral examination. The specific mode of assessment will be announced by the lecturer at the start of the semester. Registration for the presentation automatically implies a registration for any of the dates offered for written/oral exami nation following the same course of lectures. In order to pass this module, students must pass both partial examinations. The exam will count 80% of the grade, the oral presentation 20%.","Präsentation und Beamer, Tafel Projector, presentation and blackboard",Wird vom Dozenten bekanntgegeben To be announced in the lecture,MSc Informatik/ Computer Science
5882,Resilient Internet-of-Things Infrastructures,455389,Wird vermutlich nicht mehr angeboten Probably not offered anymore,1 Semester,Reiser,Reiser,Deutsch oder Englisch German or English,Modulgruppe „I T-Sec Rel“ Focus „I T-Sec Rel“,2 V + 2Ü,"60 Std. Präsenz + 120 Std. Übungsaufgaben/Referate, Vor- Workload und Nachbereitung60 contact hours + 120 hours exercises/presentations, inde pendent study",ECTS/Credits: 6,Keine None,Keine None,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden erwerben Kenntnisse über die Architek-tur von Infrastrukturen des Internets der Dinge (Internet of Things, Io T), über verschiedene in diesem Kontext relevante Kommunikationsprotokolle sowie über Io T Anwendungsplattformen. Sie erhalten einen Überblick über  aktuelle Forschungsarbeiten, die sich mit der Zuverlässigkeit, Sicherheit und Resilienz im Io T beschäftigen. — Students acquire knowledge about the architecture of Internet-of-Things (Io T) infrastructures, about various com municationprotocolsrelevantinthatcontext, aswellasabout Io Tapplicationplatforms. Theylearnaboutrecentresearchin the area of reliability, security, and resilience of Io T. Fähigkeiten / Abilities Die Studierenden entwickeln Fertigkeiten in der Analyse undim Entwurfvon Io T-Systemen. Siekönnengeeignete Protokol le, Plattformen und Werkzeuge auswählen und diese nutzen, um Io T-Systeme entsprechend eines Anforderungskatalogs si cher und zuverlässig in die Praxis umzusetzen. —Studentswilldevelopskillsinanalysinganddesigning Io Tsys tems. They are able to select adequate protocols, platforms, and tools and use them to develop Io T systems in a secure and reliable way according to a requirement specification. Kompetenzen / Competencies Die Studierenden erlernen soziale Kompetenz durch Arbeit im TeaminÜbungsaufgabenundorganisatorischesowiefachliche Kompetenzen bei der Entwicklung resilienter Io T-Systemen. —Students acquire social competence by team work in lab exer cises as well as organisational and technical competencies in the development of resilient Io T systems.","Grundlagen zu Io T-Architekturen Io T-Hardware Io T-Kommunikationstechnologien Io T-Vernetzungsinfrastrukturen Io T-Entwicklungsumgebungen Aktuelle Io T-bezogene Forschungsarbeiten zu den Themen Zuverlässigkeit, Sicherheit und Resilienz — Foundations of Io T architectures Io T hardware Io T communication technologies Io T networking infrastructures Io T development environments Recent Io T-related research on the topics reliability, security, and resilience","Portfolio (techn. Bericht, Präsentation) Mögliche Portfoliobestandteile sind • Eigenständige Zusammenfassung/Präsentation von relevanten wiss. Arbeiten zu den Themen der Lehrveran staltung • Abschlusspräsentation der Ergebnisse eines praktischen Übungsprojekts • Abschlussbericht zu einem praktischen Übungsprojekt Die Bearbeitung der Portfolio-Leistungen erfolgt begleitend zur Lehrveranstaltung. Die genauen Anforderungen werdenvom Dozenten zu Beginn der Veranstaltung bekannt gege ben. Portfolio (technical report, presentation) Possible parts of the portfolio are• Autonomous summary / presentation of relevant scien tific work on the topics of the course• Final presentation of results of a practical exercise pro ject • Final report on a practical exercise project The elaboration of portfolio examination work takes place du ringthecourseofthelecture. Theprecisemodeofassessment will be announced at the start of the semester.","Präsentation mit Projektor, Tafelanschrieb, Online-Meetings (Zoom), Gruppenarbeit Projector presentation, blackboard, online meeting (Zoom), group work",Wird vom Dozenten bekanntgegeben To be announced in the lecture,MSc Informatik/ Computer Science
5885,Hypervisor Design and Implementation,451015,Wird vermutlich nicht mehr angeboten Probably not offered anymore,1 Semester,Reiser,Reiser,Deutsch oder Englisch German or English,Modulgruppe „I T-Sec Rel“ Focus „I T-Sec Rel“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Bearbeitung und Abgabe der Workload Übungsaufgaben + 60 Std. Nachbearbeitung des Vorlesungs stoffs und Vorbereitung Abschlusspräsentation 60 contact hours + 60 hours preparation and submission of exercises + 60 hours lecture follow up and preparation of final presentation,ECTS/Credits: 6,Keine None,"Erfahrungmit Linux, einschließlich Verwendungder Komman- dozeile. Bereitschaft, sichselbständiginsystemnahe Program- mierung in C/C++/Assembler einzuarbeiten Experience in Linux, including using the command line. Wil lingness to autonomously acquire system-level programming skills in C/C++/assembly",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden lernen verschiedene Arten von Virtualisie- rung und Konzepte für den Entwurf eines Hypervisors kennen und erwerben vertiefte Kenntnisse über Systeminterna. —Students learn about different types of virtualization and con ceptsforthedevelopmentofahypervisorandacquirein-depth knowledge of system internals. Fähigkeiten / Abilities Die Studierenden beherrschen die Konzepte von Virtualisierung, können diese bewerten und erwerben die Fähigkeit, die se in systemnaher Software umzusetzen und im Kontext von I T-Sicherheit zu nutzen. — Students master the concepts of virtualization, are able to evaluate them, and acquire the ability to implement them in system software and use them for I T security purposes. Kompetenzen / Competencies Die Studierenden besitzen die Kompetenz, Systeme aus Per spektive eines Hypervisors zu betrachten und auch zukünftige Entwicklungenim Bereich Systemvirtualisierungzubeurteilen. — Students will have the competence to judge systems from the perspective of a hypervisor and assess future developments in the are of system virtualization.","In der Vorlesung werden verschiedene Ansätze der System- virtualisierung, darunter Emulation, Paravirtualisierung, Be- triebssystemvirtualisierung und Hardwarevirtualisierung sowieder Nutzen von Virtualisierung im Bereich I T-Sicherheit (Monitoring, Management, digitale Forensik, Analyse von Angrif fen)betrachtet. InbegleitendenÜbungenwerdendie Konzepte durch schrittweise Implementierung eines eigenen Hypervisors in Programmieraufgaben vertieft. —The lectures focuses on various aspects of system virtualizati on, including emulation, paravirtualization, operating system virtualization and hardware virtualization, and the applicationof virtualization in the area of I T security (monitoring, mana gement, digital forensics, attack analysis). The accompanying exercises strengthen the knowledge of concepts based on astep-by-step development of an own hypervisor in program ming exercises.","Abschlusspräsentation der im Rahmen der Übung erstellten Software und der verwendeten Konzepte mit anschließenden mündlichen Prüfungsfragen. Gesamtdauer maximal 45 Minu ten. Final presentation of the software developed in context of theexercisesandtheappliedconcepts, followedbyoralexamques tions. Total duration up to 45 minutes.","Präsentation mit Beamer und Tafel, Rechnerübungen im La- bor Projector presentation and blackboard, practical lab exercises",Wird vom Dozenten bekanntgegeben To be announced in the lecture,MSc Informatik/ Computer Science
5891,Software-Projektmanagement,405016,Jedes Sommersemester Every summer semester,1 Semester,Palm,Palm,Deutsch German,Modulgruppe „Prog Soft“ Focus „Prog Soft“,3 V + 1Ü,75 Std. Präsenz + 60 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 75 contact hours + 60 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 7,Keine None,Software Engineering,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden kennen sämtliche Schritte und Tätigkeitenum ein Softwareprojekt als Projektleiter erfolgreich durchzu führen. Fähigkeiten / Abilities Siekönnendiewichtigsten Schritteder Projektplanungfürein gegebenes Softwareprojekt anwenden: Phasenplanung, Projektstrukturierung, Termin-, Ablauf- und Einsatzmittelpla nung. Im Projektcontrolling beherrschen sie Techniken, um den aktuellen Projektfortschritt zu ermitteln, und können ggf. geeignete Maßnahmen anwenden. Dies sollte sowohl im Kon text klassischer Vorgehensmodelle als auch im agile Umfeld erfolgen. Kompetenzen / Competencies Sie sind in der Lage sämtliche Maßnahmen zu verstehen und zu bewerten, die im Rahmen des Projektmanagements bei der Planung und Durchführung von Softwareprojekten anfallen.","Die Vorlesung vermittelt sämtliche Prozesse, die für das Pro- jektmanagement von Softwareprojekten erforderlich sind. Da-bei wird weitgehend eine chronologische Vorgehensweise eingehalten. Zuerst werden – neben der Abgrenzung von wichti gen Begriffen wie Projekt, Projektarten, Projektmanagement – die Aktivitäten zu Beginn eines Projektes behandelt. Diese umfassen die Festlegung der Projektziele, die Erstellung und Bewertung von Lasten- und Pflichtenheft sowie die Analyse des Projektumfelds, der Stakeholder und der Projektrisiken. Im zweiten Abschnitt werden die grundlegenden Schritte der Projektplanungbetrachtet. Hierwirddasgewählte Vorgehensmodell der Softwareentwicklung auf das Projektvorgehen ab gebildet. Die Projektplanung umfasst im Wesentlichen die Phasenplanung mit der Meilensteinliste, die Projektstrukturierung in einem Projektstrukturplan, die Termin- und Ablaufplanung mittels Netzplantechniken, und die Einsatzmittelplanung. Weiterhin werden Schätzmethoden für die Softwareent wicklung vorgestellt und die Formulierung von Arbeitspaketenbetrachtet. Dabei werden neben dem klassischen, eher pla nungsorientiertem Projektmanagement auch agile Methoden betrachtet. Nach der Planung beschäftig sich der nächste Abschnitt mit dem Projektcontrolling. Dies beinhaltet die Kostenkontrolle, die Bestimmung des Projektfortschritts und die verschiedenen Methoden der Projektsteuerung. Im Verlauf eines Pro jekts sind zusätzlich noch weiter Tätigkeiten erforderlich umden Projekterfolg sicherzustellen. Dazu gehören, das Qualitätsmanagement, das Risikomanagement, das Konfigurations und Änderungsmanagement, das Berichtswesen sowie das Vertrags- und Claimmanagement. Für das Projektende werden der Projektabschluss und das Projektlernen betrachtet. Schließlich behandelt die Vorlesungauch einige S Softskills""wie etwa Kreativitätstechniken, Kommunikationstechniken, Teambildung und Führungsstile, Moti  vationstechniken, Umgang mit Konflikten und Krisen.","120 min Klausur oder ca. 30 min mündl. Prüfung; die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 120-minute exam or 30-minute oral examination, depending on the number of listeners, in German or English. The precisemode of assessment will be announced at the start of the se mester.","Präsentation mit Beamer, Softwaretools, Tafel Projector, software tools, blackbord","Caupin, Gilles et al. , I CB - I PM A Competence Baseline, Ver- sion 3. 0, International Project Management Association (I P- M A). Gessler, Michael (Hrsg. ), Kompetenzbasiertes Projektmana gement, Gesellschaft für Projektmanagement (G PM). Bernd Oesterreich et al. , A PM – Agiles Projektmanagement, dpunkt verlag Schwaber, Ken, Agile Project Management with Scrum, Mi crosoft Press. Walker Royce, Software Project Management, Addison Wesley",MSc Informatik/ Computer Science
5908,Wavelet-basierte Methoden in der Bildverarbeitung,405222,Unregelmäßig Irregular,1 Semester,Forster-Heinlein,Nagler,Deutsch German,Modulgruppe „Allg Ber“ Focus „Allg Ber“,2 V + 2Ü,"30+30 Std. Präsenz, 60+60 Std. Eigenarbeitszeit (Vor- und Workload Nachbearbeitung sowie Übungsaufgaben) 60 contact hours + 120 hours exercises, lecture follow-up and exam preparation",ECTS/Credits: 6,Keine None,Bildverarbeitung Image Analysis,Verwendbarkeit in weiteren Bachelor Mathematik Studiengängen Bachelor Mathematics,"Kenntnisse / Skills/Knowledge Die Studierenden kennen nach dieser Vorlesung die Konzepteder Multiskalenanalysemit Wavelets. Sieverstehendiediskrete Wavelet-Transformation in 1 D und 2 D und deren Anwendung auf Bilder. Insbesondere kennen und verstehen sie Ver  fahren zur Kompression und zum Entrauschen von Bildern. Fähigkeiten / Abilities Die Studierenden können Wavelet-basierte Verfahren imple mentieren, modifizieren und in gewissem Rahmen auch neuentwickeln. Insbesondere können sie Wavelet-basierte Verfahrenzur Kompressionundzum Entrauschenvon Bilderneinset zen und mit anderen Verfahren vergleichen und bewerten. Die Studierenden haben die Kompetenz, mit Wavelet-basierten Verfahren theoretisch und praktisch umzugehen.","Mathematische Grundlagen: Fourier-Transformation in L1 und L2 , Multiskalenanalyse mit Wavelets in L2 , Diskre- te Wavelet-Transformation, Kompressionsverfahren (J PE G, J PE G2000) und Entrauschen von Bildern (Wiener Filter, Wa velet Shrinkage)",60-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 60-minute written examination or 20-minute oral examinati on. The precise mode of assessment will be announced at the start of the semester.,"Präsentation, Beamer, Übungsblätter Projector presentation, blackboard","S. Mallat: A Wavelet Tour of Signal Processing, Academic Press, 3rd Edition, 2009 T. F. Chan, J. Shen: Image Processing and Analysis. S IA M, 2005 K. S. Thygarajan: Still Image and Video Compression with Matlab, Wiley-I EE E Press, 2010",MSc Informatik/ Computer Science
5946,Visual Analytics,452003,In der Regel jedes Sommersemester Usually every summer semester,1 Semester,Granitzer,Granitzer,Englisch English,Modulgruppe „Inf Komm“ Focus „Inf Komm“,2 V + 1Ü,"45 Std Präsenz + 105 Std. Übungsaufgaben/Referate, Vor- Workload und Nachbereitung45 contact hours + 105 hrs exercises, preparation and follow up",ECTS/Credits: 5,Keine None,Data Science,Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden kennen die Grundbegriffe von Visual Ana- lytics, und wissen, wann welche Techniken eingesetzt werden können. Außerdem besitzen sie Kenntnisse über die visuelle Kodierung von Daten sowie der Repräsentationen von Da ten. Sie besitzen einen Überblick über Visualisierungen und über Data Mining Algorithmen und kennen ausgewählte An wendungen. Sie wissen außerdem, wie man Visual Analytics Anwendungen evaluiert. — The students know the basic concepts of Visual Analytics, and know when to use which techniques. They also have anunderstandingofvisualdataencoding, aswellastherepresen tations of data. They have an overview of visualizations and data mining algorithms and know selected applications. They also know how to evaluate visual analytics applications. Fähigkeiten / Abilities Die Studierenden besitzen die Fähigkeit, Visual Analytics An wendungen zu erstellen und zu bewerten. Außerdem können sie einschätzen, welche Probleme und Herausforderungen ineinem für sie neuen Visual Analytics Szenario auftreten kön nen. —The students have the ability to create visual analytics appli cations and evaluate them. They can also assess the problems and challenges that can occur in a visual analytics scenario unknown. Kompetenzen / Competencies Die Studierenden erwerben die Kompetenzen für gegebene Daten und Aufgabenstellung selbständig Visual Analytics An wendungen zu entwickeln. —Students acquire the skills to develop visual analytics applica tions for given data and tasks independently.","Visual Analytics untersucht die Möglichkeiten der Wissener- schließung mit Hilfe interaktiver Visualisierungen. Der Visual Analytics Prozess stützt sich dabei auf eine Kombination vonautomatischen Prozessen (Data Mining) und interaktiven Vi sualisierung. Eine wichtige Rolle spielt dabei der Endnutzer der Applikation, der durch die interaktiven Visualisierungen in den Wissenerschließungsprozess eingebunden ist. Folgende Themen werden behandelt: • Visuelle Kodierug von Daten • Datenrepräsentations- und -transformation • Informationsvisualisierung • Data Mining Algorithmen für visuelle Analysen • Ausgewählte Anwendungen • Evaluierung von Visual Analytics Anwendungen —Visual Analytics examines the possibilities of knowledge dis covery through interactive visualizations. The visual analytics process relies on a combination of automatic processes (da ta mining) and interactive visualization. An important role is played by the end user of the application, which is integratedwith interactive visualization in the knowledge discovery pro cess. The following topics will be covered: • Visual data encoding • Data representation and transformation • Information Visualization • Data mining algorithms for visual analysis • Selected Applications • Evaluation of visual analytics applications",90 min Klausur oder ca. 15 min mündliche Prüfung. Die ge- naue Prüfungsart wird zu Beginn des Semesters bekannt ge- geben. 90-minute examination or 15-minute oral examination. The precise mode of assessment will be announced at the start of the semester,"Tafel, Beamer Blackboard, projector","Tamara Munzner, Visualization Analysis and Design. A K Pe- ters Visualization Series, C RC Press, 2014. Tan, Pang-Ning. Introduction to data mining, 2 nd Edition. Pearson Education India, 2018. Visual Analytics Digital Library, http://vadl. cc. gatech. edu/ (online)",MSc Informatik/ Computer Science
5954,Design and Implementation of Search Engines,455370,Wird vermutlich nicht mehr angeboten Probably not offered anymore,1 Semester,Krestel,Krestel,Deutsch oder Englisch German or English,Modulgruppe „I TS“ Focus „I TS“,4Ü,60 Std. Präsenzzeit+120 Std. Vor-und Nachbearbeitungder Workload Versuche60contacthours+120hrslaboratorypreparationandfollow up,ECTS/Credits: 6,Keine None,"Information Retrieval und Natural Language Processing, Pro- grammierung in Java Information Retrieval and Natural Language Processing, Pro gramming in Java",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden lernen die unterschiedlichen Module einermodernen Volltextsuchmaschine kennen. Sie lernen große Datenmengen zu verarbeiten und mit diesen Daten effizient um  zugehen. — Students get to know the various modules that constitute a modern full text search engine. They learn to process large datasets and handle them efficiently. Fähigkeiten / Abilities Die Studierendenübenden Entwurf, die Implementierungund die Evaluierung eines komplexen Softwaresystems. Sie lernen in kleinen Teams ein System zu entwickeln. — Students practice the design, implementation, and evaluation of a complex software system. They learn in small teams to develop a system. Kompetenzen / Competencies Die Studierenden lernen Designentscheidungen abzuwägen und eigenständig zu treffen. Sie begleiten den kompletten Softwareentwicklungsprozess anhand einer selbstentwickelten Suchmaschineundlernen Forschungsergebnissekritischzube werten und praktisch umzusetzen. — The students learn to evaluate design decisions. They passthrough the complete software development cycle by implementing their own search engine. They learn to evaluate rese arch papers and to include research results in their systems.",• Suchmaschinen Grundlagen / Search Engine Basics • Datengewinnung / Data aquisition • Texttransformierung / Text transformation • Informationsextraktion / Information extraction • Indexgenerierung / Index generation • Retrieval-Modelle /retrieval models • Benutzeroberfläche / user interfaces • Evaluierung /evaluation • Dokumentenrepräsentation / document representation • Machinelles Lernen für I R / machine learning for I R • Web Skalierung / Web scale • Performanz / performance • Linkanalyse / link analysis,Vorführung der Versuche Practical coursework and demonstration of the experiments.,"Präsentation mit Tafel und Beamer Presentation with a projector, blackboard","Büttcher, Clarke, Cormack:Information Retrieval–Implemen- ting and Evaluating Search Engines Croft, Metzler, Strohman: Search Engines – Information Re trieval in Practice",MSc Informatik/ Computer Science
5956,Deep Learning,455380,Hinweis:Das Modulwirddurch Introductionto Deep Learning ersetzt - keine Doppelanrechnung möglich Notice: Replaced by Introduction to Deep Learning cannot be credited twice.,1 Semester,Krestel,Krestel,Englisch English,Modulgruppe „I TS“ Focus „I TS“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Analysis I, Lineare Algebra I, Learning Theory Analysis I, Linear Algebra I, Learning Theory",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden lernen die theoretischen Grundlagen ver- stehen, insbesondere den Backpropagation-Algorithmus von Hand anzuwenden. Sie lernen die Grenzen von Deep Learning kennen und bekommen einen Überblick über die aktuelle For schung. Des Weiteren werden gesellschaftliche Folgen des D L abgeschätzt und diskutiert. —Students learn the theoretic basics and how the backpropaga tion algorithm works in detail. They learn the limitations of deep learning and get an overview of state-of-the-art researchin this area. Further, they learn to assess and discuss the im pact of deep learning on society. Fähigkeiten / Abilities Die Studierenden können unterschiedliche Netztypen für De ep Learning Anwendungen erklären und Anwendungsgebiete im Bereich Textminingund Bildverarbeitungidentifizieren. Sie sindinder Lagegeeignete Netzwerkarchitekturenauszuwählenund einzelne Komponenten von neuronalen Netzen zu erklä ren. —Students can explain different network types for deep learning applications and can identify text mining and image pro cessing tasks appropriate for deep learning. They are able to choose suitable network architectures depending on the task and are able to explain individual components of deep neural networks. Kompetenzen / Competencies Die Studierenden lernen Deep Learning in Python anzuwen denundeigene Anwendungenzuentwerfen, zuimplementieren und zu evaluieren. — The students learn how to design, implement, and evaluate deep learning applications in Python.",• Neural networks • Convolutional neural networks • Recurrent neural networks • Embeddings • Sequence-to-sequence models • Generative deep learning,90-minütige Abschlussklausur 90-minute written Examination,Präsentation mit Beamer Presentation with a projector,"Francois Chollet: Deep Lerning with Python Ian Goodfellow, Yoshua Bengio, Aaron Courville: Deep Lear- ning",MSc Informatik/ Computer Science
5963,Numerik von Differentialgleichungen,451012,"Unregelmäßig Irregular Notice: Same lecture number as 5963 Mathematical Systems Theory, but different lecture",1 Semester,Wirth,Wirth,Deutsch oder Englisch German or English,Modulgruppe „Alg Math“ Focus „Alg Math“,4 V + 2Ü,60 + 30 Std. Präsenz + 90 + 90 Std. Eigenarbeitszeit Workload 60 + 30 contact hours + 90 + 90 hours independent study,ECTS/Credits: 9,Keine None,"Lineare Algebra I + I I, Analysis I + I I, Gewöhnliche Differen- tialgleichungen Linear Algebra I+I I, Analysis I+I I, Ordinary Differential Equa tions",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Überblick über Methoden zur Schätzung, Bewertung und Steuerung von Approximationsfehlern  Klassifikation von Problemen bei DifferentialgleichungenÜberblick über verschiedene Verfahren zur numerischen Lö sung — An overview over methods for the estimation, evaluation and control of approximation errors Classification of problems of differential equations Knowledge of various methods for the numerical solution Fähigkeiten / Abilities Die Studierenden können Problemstellungen theoretisch ana lysieren und geeignete Rahmenbedingungen für numerische Verfahrenauswählen. Siekönnennumerische Verfahrenin Be zug auf Anwendbarkeit und Zweckmäßigkeit beurteilen. —The participants can analyze problems from a theoretical per spective and are able to choose appropriate parameters for numerical methods. They can evaluate numerical methods in terms of applicability and practicability.","Folgende Themen werden behandelt: • Verfahren für gewöhnliche Anfangs- und Randwertpro- bleme, • steife Differentialgleichungen, • Standardverfahren für partielle Differentialgleichungen. — The following topics are covered: • Methods for initial value and boundary value problems of ordinary differential equations, • stiff problems, • standard methods for partial differential equations.",Die Prüfung besteht aus zwei Teilleistungen Teilleistung 1 (80%): 120 min Klausur oder mündliche Prü- fung (ca. 30 min); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. Teilleistung2(20%):Ausarbeitung(biszu10 Seiten)überein zusätzliches Thema zur Numerik von Differentialgleichungen. Zum Bestehen des Moduls müssen beide Teilleistungen be standen werden. — The examination consists of two parts Part 1 (80%): 120 min written exam or oral exam of about 30 min. The precise mode of assessment will be announced at the start of the semester. Part 2 (20%): Written work (up to 10 pages) on a subject on the numerical solution of differential equations.  To pass the examination both parts have to be passed.,"Tafel, Beamer, Overhead Blackboard, projector, slides","P. Deuflhard, F. Bornemann Numerische Mathematik I I, De Gruyter 2002, Signatur: 80/S K 900 D485-2(4)P. Deuflhard, F. Bornemann Scientificcomputingwithordina ry differential equations, Springer 2002, Number 80/S K 520 D485 K. Strehmel, R. Weiner Numerikgewöhnlicher Differentialglei chungen, Springer Spektrum 2012, Signatur: 80/S K 920 S915 N9(2)M. Hanke-Bourgeois Grundlagen der Numerischen Mathema tik und des wissenschaftlichen Rechnens, Teubner 2002",MSc Informatik/ Computer Science
5963,Mathematische Systemtheorie,405241,"Unregelmäßig Irregular Notice: Same lecture number as 5963 Numerics of Differen tial Equations, but different lecture",1 Semester,Wirth,Wirth,Deutsch oder Englisch German or English,Modulgruppe „I TS“ Focus „I TS“,4 V + 2Ü,60 + 30 Std. Präsenz + 90 + 90 Std. Eigenarbeitszeit Workload 60 + 30 contact hours + 90 + 90 hours lecture and tutorials follow-up and exam preparation,ECTS/Credits: 9,Keine None,"Lineare Algebra I + I I, Analysis I + I I, Gewöhnliche Differen- tialgleichungen oder Mathematik in Technischen Systemen I - I II sowie Grundlagen Dynamischer Systeme Linear Algebra I+I I, Analysis I+I I, Ordinary Differential Equations or Mathematics in Technical Systems I-I II and Funda mentals of Dynamical Systems",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden kennen die Grundbegriffe der linearen Sys-temtheorie, wie Kontrollierbarkeit, Beobachtbarkeit, Stabili sierbarkeit. Sie kennen Methoden der Stabilisierung und des Beobachterentwurfs. Ferner kennen Sie den Zusammenhangzwischen Modellen in Zustandsraumbeschreibung und Frequenzbereichsdarstellungen, Elemente der Realisierungstheo rie und der Modellreduktion. — The participants are familiar with the fundamental concepts of linear systems theory, such as controllability, stabilizability, observability and they command methods for designing stabi lizingfeedbacksandobservers. Theyareawareoftherelationsbetween state space models and models in the frequency do main. They know elements of realization theory and model reduction. Fähigkeiten / Abilities Die Studierenden sind in der Lage, Regelungssysteme auf Stabilisierbarkeit und Beobachtbarkeit hin zu prüfen und sie können gegebenenfalls Regler und Beobachter entwerfen. Sie beherrschen die Grundlagen der Modellreduktion. Die Studierenden können unterschiedliche Regelungsaufgabe als linearquadratisches Problem der optimalen Steuerung formulie ren. Sie beherrschen die wesentlichen Lösungsansätze aus der Theorie der Riccatigleichungen. — The participants can analyze control systems and check for stabilizability and observability. If possible, they can designstabilizing feedbacks and observers. They can apply the fun damental techniques of realization theory. They are capableof formulating various control tasks as linear quadratic opti mal control problems and they can apply techniques from the theory of Riccati equations to solve these.","Zustandsraumsysteme, Stabilität und Lyapunovfunktionen, Stabilisierungdurch Rückkopplung, Polverschiebungssatz, Be-obachterentwurf und dynamische Rückkopplung, Eingangs Ausgangssysteme, Transferfunktionen, Realisierungstheorie, Modellreduktion, Das linear-quadratische optimale Steue rungsproblem, Riccatigleichungen, Folgeregelung. —State space systems, stability and Lyapunov functions, stabi lization by feedback, pole placement theorem, observer designand dynamic feedback, input-output systems, transfer functi ons, realization theory. Model reduction, the linear-quadratic  regulator problem, Riccati equations, tracking",90 min Klausur oder ca. 20 min mündliche Prüfung. Die ge- naue Prüfungsart wird zu Beginn des Semesters bekannt ge- geben. 90-minute written examination or 20-minute oral examinati on. The precise mode of assessment will be announced at the start of the semester.,"Tafel, Beamer, Vorlesungsskript, Übungsblätter Blackboard, projector presentation, lecture notes, exercise sheets","E. D. Sontag: Mathematical Control Theory, Springer-Verlag, New York 1998",MSc Informatik/ Computer Science
5964,Linear Systems Theory,405232,"Unregelmäßig Irregular Notice: Same lecture number as 5964 Dynamical Systems, but different lecture",1 Semester,Wirth,Wirth,Deutsch oder Englisch German or English,Modulgruppe „I TS“ Focus „I TS“,4 V + 2Ü,"60 + 30 Std. Präsenz, 90 + 90 Std. Eigenarbeitszeit Workload 60 + 30 contact hours, 90 + 90 hours independent study",ECTS/Credits: 9,Keine None,"Lineare Algebra I+I I, Analysis I+I I oder Mathematik in Tech- nischen Systemen I-I II Linear Algebra I+I I, Analysis I+I I or Mathematics in Techni cal Systems I-I II",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden kennen Zustandsraumbeschreibungen linea- rer Systeme, Normalformenund Koordinatentransformationenund die zugehörige Lösungstheorie. Sie kennen die Grundbe griffe der linearen Systemtheorie, wie Kontrollierbarkeit, Be obachtbarkeit, Stabilisierbarkeit. Sie kennen Methoden der Stabilisierung und des Beobachterentwurfs. Ferner kennen Sie die Laplace-Transformation und den Zusammenhang zwischen Modellen in Zustandsraumbeschreibung und Frequenz bereichsdarstellungen. — The participants are familiar with state space representations of linear systems, normal forms, coordinate transforms andthe corresponding solution theory. They know the fundamen tal concepts of linear systems theory, such as controllability, stabilizability, observability and they command methods for designing stabilizing feedbacks and observers. They know the Laplace transform and the relations between state space mo dels and models in the frequency domain. Fähigkeiten / Abilities Die Studierenden sind in der Lage, lineare Systeme zu lösen, sieauf Stabilitätseigenschaftenzuuntersuchen, Regelungssys teme auf Stabilisierbarkeit und Beobachtbarkeit hin zu prüfenund sie können gegebenenfalls Regler und Beobachter entwer fen. Sie können Regler im Frequenzbereich entwerfen. —The participants can solve linear systems and analyze the stabilitypropertiesofsuchsystems. Thecancheckforstabilizabi lity and observability of control systems. If possible, they can design stabilizing feedbacks and observers. They can design stabilizing feedbacks in the frequency domain.","Lineare Differential- und Differenzengleichungen, Lösungs- theorie, Zustandsraumsysteme, Stabilität und Lyapunovfunk-tionen, Stabilisierung durch Rückkopplung, Polverschiebungs satz, Beobachterentwurf und dynamische Rückkopplung, Eingangs-Ausgangssysteme, Laplace-Transformation, Impul santwort, Transferfunktionen. P ID-Regelung — Linear differential and difference equations, solution theory, state space systems, stability and Lyapunov functions, stabili zation by feedback, pole placement theorem, observer designand dynamic feedback, input-output systems, Laplace trans form, impulse response, transfer functions, P ID control",90 min Klausur oder ca. 20 min mündliche Prüfung. Die ge- naue Prüfungsart wird zu Beginn des Semesters bekannt ge- geben. 90-minute written examination or 20-minute oral examinati on. The precise mode of assessment will be announced at the  start of the semester.,"Tafel, Beamer, Vorlesungsskript, Übungsblätter Blackboard, projector presentation, lecture notes, exercise sheets","Dorf R. C. and Bishop R. H. , Modern Control Systems, 9th Ed. , Prentice Hall, 2011 K. Ogata, Modern control engineering, Prentice Hall, 2009",MSc Informatik/ Computer Science
5964,Dynamische Systeme,405027,"Unregelmäßig Irregular Notice:Samelecturenumberas5964 Linear Systems Theory, but different lecture",1 Semester,Wirth,Wirth,Deutsch oder Englisch German or English,Modulgruppe „Alg Math“ Focus „Alg Math“,4 V + 2Ü,"60 + 30 Std. Präsenz, 90 + 90 Std. Eigenarbeitszeit Workload 60 + 30 contact hours, 90 + 90 hours independent study",ECTS/Credits: 9,Keine None,"Lineare Algebra I+I I, Analysis I+I I Linear Algebra I+I I, Analysis I+I I",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden kennen die grundlegenden Begriffe, Konzep-teund Phänomeneim Bereichtopologischerdynamischer Sys teme mit kompakten Zustandsräumen. —  The participants are familiar with the fundamental notions, concepts and phenomena associated with topological dynami cal systems on compact state spaces. Fähigkeiten / Abilities Kompetenzen in der selbständigen Bearbeitung von Problem stellungen, Fertigkeitenzur Formulierungund Bearbeitungvontheoretischen Fragestellungen mit Hilfe der erlernten Metho den. —Competencies in the independent work on mathematical pro blems, abilities to formulate and solve theoretical problems by using the acquired methods.","Folgende Themen werden behandelt: Topologische dynamische Systeme, Rekurrenz, symbolische Dynamik, Chaos, topologische Entropie — The following topics are covered:Topological dynamical systems, recurrence, symbolic dyna mics, chaos, topological entropy",90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 90-minute written or oral exam of about 20 minutes. The pre cise mode of assessment will be announced at the start of the semester.,"Tafelanschrieb, Overhead, Beamer Slides, projector, blackboard","Katok, Anatole Hasselblatt, Boris - Titel: Introduction to the modern theory of dynamical systems Robinson, Clark -Titel: Dynamical systems Guckenheimer, John - Titel: Nonlinear oscillations, dynamical systems, and bifurcations of vector fields Lasota, Andrzej -Titel: Chaos, fractals, and noise: stochastic aspects of dynamics Amann, Herbert - Titel: Gewöhnliche Differentialgleichungen Wiggins, Stephen - Titel: Introduction to applied nonlinear dynamical systems and chaos Arrowsmith, David K. - Titel: Dynamical systems: differential equations, maps and chaotic behaviour",MSc Informatik/ Computer Science
5967,Vernetzte Dynamische Systeme,405234,Unregelmäßig Irregular,1 Semester,Wirth,Wirth,Deutsch oder Englisch German or English,Modulgruppe „I TS“ Focus „I TS“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Mathematische Systemtheorie oder Grundlagen Dynamischer Systeme Mathematical Systems Theory or Fundamentals of Dynamical Systems,Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden verfügen über die graphentheoretischen und systemtheoretischen Kenntnisse zur Modellierung vernetzter  Systeme. Siesindmit Verfahrenzur Analyseundzum Entwurf von Regelungs- und Kommunikationsstrukturen in vernetzten Systemen vertraut. —The participants are familiar with the graph theoretic and sys tems theoretic foundations of the Modeling of interconnectedand networked control systems. They know the methodolo gy for the analysis and design of control and communication structures in networked control systems. Fähigkeiten / Abilities Die Studierenden können ein vernetztes dynamisches System modellieren, die Graphenstruktur analysieren und wich tige systemtheoretische Eigenschaften wie Stabilisierbarkeitund Beobachtbarbarkeit anhand graphentheoretischer Metho denüberprüfen. Siekönnendiezur Lösungeiner Regelaufgabebenötigte Kommunikationskapazität abschätzen und beherrschen die Methoden zum Entwurf von Regler und Kommuni kationsprotokollen. —Participants are proficient at modeling networked control sys tems, are able to analyze the underlying graph structure andcapable of deriving systems theoretic properties such as stabi lizability or observability using graph theoretic methods. Theycan estimate the communication capacity required for the solution of control tasks and can apply techniques for the code sign of communication and control infrastructures.","Graphentheoretische Grundlagen, Adjazenz- und Inzidenzma- trizen, Graph-Laplacesche und spektrale Graphentheorie. Mo-dellierung vernetzter Systeme, Dynamik und Kommunikationsstruktur, Verteilte Regelung vernetzter Systeme, Kom munikationsprotokollefür Regelungsanwendungen, Diskussionvon Anwendungen z. B. in der Regelung von Fahrzeugkolon nen, V2 V-Kommunikation und sicherheitsrelevante Regelung. —Fundamentals of graph theory, adjacency and incidence ma trix, graph Laplacian and spectral graph theory, Modeling of networked control systems, dynamics and communication structures, decentralizedcontrolofnetworkedcontrolsystems, communicationprotocolsforcontrolapplications, exampleap plications such as vehicle platoons, V2 V communication, and safety critical control.",90 min Klausur oder ca. 20 min mündliche Prüfung. Die ge- naue Prüfungsart wird zu Beginn des Semesters bekannt ge- geben. 90-minute written examination or 20-minute oral examinati on. The precise mode of assessment will be announced at the start of the semester.,"Tafel, Beamer, Übungsblätter Blackboard, projector presentation, exercise sheets","Mehran Mesbahi, Magnus Egerstedt. Graph Theoretic Me- thods in Multiagent Networks. Princeton University Press 2010",MSc Informatik/ Computer Science
5968,Praktikum Regelung und Robotik,405399,Jedes Sommersemester Every summer semester,1 Semester,"Wirth, Schwarz","Wirth, Schwarz",Deutsch oder Englisch German or English,Modulgruppe „I TS“ Focus „I TS“,1 V + 1Ü + 2 P,15+15+30 Std. Präsenz + 90+60 Std. Eigenarbeitszeit Workload 60 contact hours + 150 hours lecture and tutorials follow-up and exam preparation,ECTS/Credits: 7,Keine None,"Analysis I + I I, Lineare Algebra I + I I oder Mathematik in Technischen Systemen I - I II sowie Grundlagen Dynamischer Systeme Analysis I+I I, Lineare Algebra I+I Ior Mathematicsin Tech nical Systems I - I II and Fundamentals of Dynamical Systems",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden kennen Grundlagen der mathematischen Modellierung autonomer Roboter, sie sind mit wichtigen Re gelungsprinzipien vertraut und kennen Methoden zur prakti schen Umsetzung, Implementierung und Evaluation. — The participants know the fundamentals of the Modeling ofautonomous robots. They are aware of basic principles of con trol and know methods for the design, implementation and evaluation of closed-loop systems. Fähigkeiten / Abilities Die Studierendenkönneneinfache Robotermodellezur Lösung konkreter Aufgaben entwickeln. Sie können Regler entwerfen und implementieren. Sie haben Erfahrung in der Evaluierung mittels simulativer Studien und praktischer Experimente. — The participants can develop dynamical systems models of simple robots aimed at the solution of concrete tasks. Theycan design and implement control algorithms. They have ex perienceintheevaluationofcontrolconceptsusingsimulation studies and through practical experiments.",Mathematische Modellierung und Fahrzeugdynamik Regelungskonzepte und –algorithmen Simulationsverfahren Konstruktion von Robotern zur Lösung konkreter Aufgaben • Analyse der Aufgabenstellung; • Ermittlung der notwendigen Sensoren und Aktuatoren; • Bau des Roboters und Implementierung; • Inbetriebnahme und Funktionsnachweis; — Mathematical Modeling and vehicle dynamics Control methods and algorithms Simulation tools Construction of robots for the solution of concrete tasks • Analysis of the task; • Identification of the required sensor and actuators; • Construction and software implementation; • Operation and demonstration of functionality;,Vollständige schriftliche Dokumentation (10-15 Seiten) und Präsentation mit Diskussion (ca. 30 min). Complete written documentation (10-15 pages) and presen tation with discussion (approx. 30 min).,"Tafel, Beamer, Vorlesungsskript, Übungsblätter Blackboard, projector presentation, lecture notes","Lecture Notes, documentation of manufacturer",MSc Informatik/ Computer Science
5981,Text Mining Project,405025,Jedes Semester Every semester,1 Semester,Granitzer,Mitrovic,Deutsch oder Englisch German or English,Modulgruppe „Inf Komm“ Focus „Inf Komm“,3 V + 3Ü,90 Std. Präsenz + 60 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 60 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 8,Keine None,"Lineare Algebra, Wahrscheinlichkeitsrechnung, Programmier- kenntnisse in Java oder Python Linear Algebra, probability theory, programming in java or py thon",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierendenlerneninderpraktischen Anwendunggrund- legende Konzepte und die wichtigsten Methoden zur Analyse von Textdaten.  — The students learn basic concepts and the most important methods for analyzing text data in a practical application. Kompetenzen / Competencies Die Studierenden erwerben die Grundkompetenzen in Python und der N LT K (Natural Language Toolkit) Bibliothek. Diese Kompetenz erlaubt die Extraktion nützlicher Information ausunstrukturierten Texten, umdamiteinebreite Palettevonrea len Anwendungen anzugehen. — Students acquire the basic competencies in Python and the N LT K library. With these competencies the students are able to extract useful information from unstructured texts from a broad scope of real-life applications.",e werden im Detail geboten: • Language Processing and Python • Accessing Text Corpora and Lexical Resources • Processing Raw Text • Categorizing and Tagging Words • Learning to Classify Text • Extracting Information from Text • Analyzing Sentence Structure • Building Feature-Based Grammars • Analyzing the Meaning of Sentences • Managing Linguistic Data,"Projektarbeit, bestehend aus Source-Code, schriftliche Ausar- beitung in Form eines technischen Berichts und Präsentation der Arbeit Project work: source code, technical report and presentation","Tafel, Projektor, Rechner Blackboard, projector, computer","Steven Bird, Ewan Klein and Edward Loper (2009), Natural Language Processing with Python, O’Reilly Media Eigenes Skriptum / Lecture Notes",MSc Informatik/ Computer Science
5982,Preference-based Information Retrieval,455365,Wird vermutlich nicht mehr angeboten Probably not offered anymore,1 Semester,Endres,Endres,Deutsch oder Englisch German or English,Modulgruppe „Inf Komm“ Focus „Inf Komm“,2 V + 2Ü,60 Std. Präsenz + 50 Std. Übungen + 70 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 50 hrs exercises + 70 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Datenbanken und Informationssysteme Databases and Information Systems,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden kennen die Grundbegriffe von Präferenz-basiertem Information Retrievalund Personalisierung. Siewis sen, welche Methoden und Techniken wann eingesetzt werden können. Darüber hinaus kennen sie diverse Anwendungen und die Vorteile und Nachteile der Personalisierung.  —The students know the basic concepts of preference-based in formation retrieval and personalization, and know when to use which technique. They also know different applications and the advantages and disadvantages of personalization. Fähigkeiten / Abilities Die Studierendenbesitzendie Fähigkeitdie Konzepteund Me thoden, Verfahren und Technologien von präferenz-basiertem Information Retrievalzuverstehen, zubewertenundanzuwen den. — The students have the ability to understand, evaluate, and tocreate applications using the concepts, methods, and techno logies of preference-based information retrieval. Kompetenzen / Competencies Die Studierenden erwerben die Kompetenzen für gegebene Daten und Aufgabenstellungen selbständig präferenz-basierte Information Retrieval Anwendungen zu entwickeln. Darüberhinauskönnendie Studierendenweiterführendekomplexe Problemstellungenaufdem Gebietder Datenbankenund Informationssysteme, insbesondere unter Verwendung von präferenzbasiertem Information Retrieval und Personalisierung analy sieren, bewerten und lösen. —Students acquire the skills to develop preference-based information retrieval applications for given data and tasks independently. In addition, the students are able to analyze, eva luate and solve complex problems in the field of databases and information systems, in particular using preference-based information retrieval and personalization.","Präferenzen sind ein fundamentales, multidisziplinäres Kon- zeptfürmannigfaltige Anwendungsgebiete, insbesondereauchim Bereich der Datenbanken und Suchmaschinen. Die Vorle sung behandelt grundlegende Konzepte von Präferenzen in Datenbanksystemen, Personalisierung, präferenzbasierte Suche und Information Retrieval. Insbesondere werden verschie dene Präferenzmodelle, Präferenz-Sprachen, algebraische undkostenbasierte Präferenzanfrage-Optimierung, sowie Auswer tungsalgorithmen besprochen. — Preferences are a fundamental, multidisciplinary concept fordiversified applications, in particular in the field of databa ses and search engines. This lecture deals with the basicconcepts of preferences in database systems, personalizati on, preference-based search and information retrieval. We will consider different preference models, preference query langua ges, algebraic and cost-based preference query optimization, as well as algorithms for preference evaluation.",60min Klausuroderca. 15minmündliche Prüfung. Diegenaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 60 min examination or 15 minute oral examination. The pre cise mode of assessment will be announced at the start of the semester.,"Tafel, Projektor Blackboard, projector","Kießling: Foundations of Preferences in Databases Kießling: Preference Queries with S V-Semantics Kießling, Endres, Wenzel: The Preference S QL System – An Overview Kaci: Working with Preferences: Less is More Stefanidis, Kutrika, Pitoura: A Survey on Representation, Composition and Application of Preferences in Database Sys tems Chomicki: Preference Formulas in Relational Queries Satzger, Endres, Kießling: A Preference-Based Recommender System Ciaccia: Processing Preference Queries in Standard Database Systems Braman, Domshlak:Preference Handling:An Introductory Tu torial Arvanitis, Koutirka:Towards Preference-Aware Relational Da tabases Roocks, Endres, Huhn, Kießling, Mandl: Design and Implementationofa Frameworkfor Context-Aware Preference Que ries Mandl, Kozachuk, Endres, Kießling: Preference Analytics in E XA Solution Endres, Weichmann: Index Structures for Preference Databa se Queries Endres, Preisinger: Beyond Skylines: Explicit Preferences Endres, Roocks, Kießling: Scalagon: An Efficient Skyline Al gorithm for all Seasons",MSc Informatik/ Computer Science
5983,Big Data Management,455374,Wird vermutlich nicht mehr angeboten Probably not offered anymore,1 Semester,Endres,Endres,Deutsch oder Englisch German or English,Modulgruppe „Inf Komm“ Focus „Inf Komm“,2 V + 2Ü,60 Std. Präsenz + 50 Std. Übungen + 70 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 50 hrs exercises + 70 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Kenntnisse in Relationaler Algebra, S QL, z. B. aus einer vor- herigen Datenbankvorlesung Comprehension of the relational data model, relational alge bra, and SQ Llanguage, obtained, e. g. ,fromadatabasecourse",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Studentsunderstandthedesigngoals, benefitsanddrawbacks of No SQ L database systems. They are able to decide which database system is appropriate foragivenapplicationdependingonsuitablecriteria. Theycan  design database structures for different No SQ L data models. They understand the implementation of internal components and storage structures of selected database systems.","This course covers recent trends in data management (e. g. , so-called No SQ Ldatabases)thatgobeyondthetraditionalre- lational data model. Such systems are designed to fulfill novelrequirements (e. g. , the ability to scale out or schema flexibi lity). They often relax requirements of traditional relational databases (e. g. , consistency). In the course, we will discuss different approaches to model, manage, store, and retrieve data.",90min Klausuroderca. 15minmündliche Prüfung. Diegenaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 90 min examination or 15 minutes oral examination. The pre cise mode of assessment will be announced at the start of the semester.,"Tafel, Projektor Blackboard, projector","Advanced Data Management, Lena Wiese Mongo DB:The Definitive Guide, Shannon Bradshaw, Kristina Chodorow Cassandra: The Definitive Guide, Jeff Carpenter Graph Algorithms: Practical Examples in Apache Spark and Neo4j High Performance Spark: Best practices for scaling optimizing Apache Spark, Holden Karau Learning Spark: Lightning-Fast Data Analysis, Holden Karau Advanced Analytics with Spark: Patterns for Learning from Data at Scal, Josh Wills",MSc Informatik/ Computer Science
5992,Stochastische partielle Differentialgleichungen,405245,Unregelmäßig Irregular,1 Semester,Müller-Gronbach,Müller-Gronbach,Deutsch oder Englisch German or English,Modulgruppe „Alg Math“ Focus „Alg Math“,4 V,60 Std. Präsenz + 150 Std. Nachbearbeitung des Vorlesungs- Workload stoffs und Prüfungsvorbereitung 60 contact hours + 150 hours independent study and exam preparation,ECTS/Credits: 7,Keine None,"Lineare Algebra I + I I, Analysis I + I I, Einführung in die Sto- chastik, Stochastische Analysis, Stochastische Differentialglei- chungen Linear Algebra I+I I, Analysis I+I I, Introductory Stochastics, Stochastic Analysis, Stochastic Differential Equations",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,Kenntnisse / Skills/Knowledge Grundlagen der Theorie semi-linearer stochastischer partieller  Differentialgleichungen und der zugrundeliegenden Konzepte aus der Funktionalanalysis und Wahrscheinlichkeitstheorie — Basic knowledge on semi-linear stochastic partial differentialequations and the underlying concepts from functional analy sis and probability theory Fähigkeiten / Abilities Beherrschung und Anwendung der Grundbegriffe aus der Theorie stochastischer partieller Differentialgleichungen und der zugrundeliegenden Konzepte aus der Funktionalanalysis und Wahrscheinlichkeitstheorie — Good command of and ability to apply the basic principles of semi-linear stochastic partial differential equations and the underlying concepts from functional analysis and probability theory,"Funktionalanalytische Konzepte: Nukleare Operatoren, Hilbert-Schmidt-Operatoren, Diagonal-operatorenauf Hilberträumen, Interpolationsräumefür Diago naloperatoren, Halbgruppenbeschränkterlinearer Operatoren. Wahrscheintlichkeitstheoretische Konzepte:Banachraumwertige Zufallsvariablen und stochastische Prozesse, unendlich-dimensionale Brownsche Bewegung, stochastische Integration bezüglich unendlich-dimensionaler Brown scher Bewegungen. Stochastische partielle Differentialgleichungen: Lösungskonzepte, Existenz und Eindeutigkeit, Eigenschaften von Lösungen. — Functionalanalytic concepts:Nuclear operators, Hilbert-Schmidt-operators, diagonal ope rator on Hilbert spaces, interpolation spaces associated with diagonal operators, semi-groups of bounded linear operators. Concepts from probability theory:Banach space valued random variables and stochastic processes, infinite-dimensional Brownian motion, stochastic integra tion wrt. infinite-dimensional Brownian motion. Stochastic partial differential equations:Types of solutions, existence and uniqueness, properties of so lutions.",Klausur (120 Minuten) oder mündliche Prüfung (ca. 30 Mi- nuten). Diegenaue Prüfungsartwirdzu Beginndes Semesters bekannt gegeben. Writtenexamination(120minutes)ororalexamination(about  30 minutes). The exact mode of assessment will be indicated at the beginning of the semester.,"Präsentation und Beamer, Tafel Presentation and projector, blackboard",Nach Empfehlung des Dozenten Announced during the lecture,MSc Informatik/ Computer Science
5996,Markovketten,455346,Unregelmäßig Irregular,1 Semester,Müller-Gronbach,Gilch,Deutsch German,Modulgruppe „Alg Math“ Focus „Alg Math“,3 V + 2Ü,"45 + 30 Std. Präsenz, 75 + 60 Std. Eigenarbeitszeit Workload 45+30hours, 75+60hoursexercisesandindependentstudy and exam preparation",ECTS/Credits: 7,Keine None,"Analysis I, Lineare Algebra I, Einführung in die Stochastik Analysis I, Linear Algebra I, Introduction to Stochastics",Verwendbarkeit in weiteren Bachelor Mathematik Studiengängen Bachelor Mathematics,"Die Studierenden erhalten einen Überblick über die Theorie von Markovketten. Das beinhaltet die Vermittlung der grund-legenden Konzepte von Markovketten, unterschiedlicher Ver halten von Irrfahrten auf unendlichen Zustandsräumen als auch verschiedener Anwendungsmöglichkeiten. Ferner wirdden Studierenden das Zusammenspiel verschiedener mathematischer Bereiche (Wahrscheinlichkeitstheorie, Analysis, Al  gebra, Graphentheorie) demonstriert. — The students shall get an overview on Markov chain theory. They shall acquire the basic concepts of Markov chains, dif ferent behaviours of random walks on infinite structures andtheir applications. Furthermore, the interplay of different ma thematicalfields(Probability Theory, Analysis, Algebra, Graph Theory) will be demonstrated.","Grundlagen der Theorie von Markovketten, Rekurrenz und Transienz, invariante Maße und Gleichgewichte, Stoppzeiten, Erzeugendenfunktionen, Irrfahrten auf Graphen und Gruppen, Asymptotisches Verhalten von Markovketten und Tail σ-Algebra, verzweigende Irrfahrten — Fundamental basics of Markov chain theory, recurrence and transience, invariant measures and equilibria, stopping times, generating Functions, random Walks on Graphs and Groups, asymptotic behaviour of Markov chains and tail-σ-algebra, branching random walks",90 minütige schriftliche Prüfung oder mündliche Prüfung (ca. 30 Minuten); die genaue Prüfungsart wird zu Beginn des Se- mesters bekannt gegeben. 90 minute written or 30 minute oral examination. The preci se mode of assessment will be announced at the start of the semester.,"Tafel, Beamer Blackboard, Beamer","P. Brémaud: „Markov Chains: Gibbs Fields, Monte Carlo Si- mulation, and Queues“, Springer, 1999. R. Durett: „Probability. Theory and Examples. (Fourth Editi on)“, Cambridge University Press, 2010. G. Grimmett and D. Welsh: „Probability: An Introduction“, Oxford University Press, 2014. W. Woess: „Denumerable Markov Chains“, European Mathe matical Society Publishing House, 2009.",MSc Informatik/ Computer Science
6001,Ideation & Prototyping for Industrial Innovation,479551,Unregelmäßig Irregular,1 Semester,Kranz,Kranz,Deutsch oder Englisch German or English,Modulgruppe „Inf Komm“ Focus „Inf Komm“,3Ü Während den Übungsterminen gilt Anwesenheitspflicht.,30 Std Präsenz und 120 Std. Vor- und Nachbereitung Workload Gesamt: 150 Std.,ECTS/Credits: 5,Keine None,"Programmierungin Java, Mensch-Maschine-Interaktion, M ES Praktikum oder S EP, zusätzlich ggf. Verteilte Systeme Programming in Java, Human-Computer-Interaction, M ES Practical, S EP, Distributed Systems",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierendenerwerbenvertiefte Fachkenntnisseundderen praktische Umsetzung im Bereich des Prototypings und der Ideation. Diverse Methodenund„bestpractices“der Ideation, von der Ideengenerierung, deren Entwicklung und Kommuni kation werden präsentiert und praktisch in Gruppenarbeiten umgesetzt. Unterstützt durch das im Lehrstuhleigenen Fab Lab können praxisnahe, physische Prototypen unter Aufsicht eines Coaches erstellt werden. Fähigkeiten / Abilities Die Studierenden sind in der Lage, kreative Ideation Prozes sepraktischaufgegebene Problemstellungenanzuwendenund umzusetzen. Die Studierendenvertiefen Ihr Wissenim Bereichder Ideation und des Rapid Prototypings und können im Fa b Lab erste Erfahrungen mit dem 3 D Druck und dem Einsatzeines Lasercutters für die Prototypgestaltung sammeln. Stu dierendesindinder Lagephysische Prototypenmitintegrierter Logik zu entwerfen und zu designen und zu programmieren. Kompetenzen / Competencies Die Studierenden können die gegebenen Problemstellungen kompetent analysieren, geeignete Methoden der Ideation und des Prototypings auswählen und dieser praktisch anwenden. An Hand der Ergebnisse können die Studierenden eine Bewer tung der Ergebnisse vornehmen und diese interpretieren und mit agilen Methoden schrittweise anpassen und verfeinern.","Methodendes Ideation&Prototypingswerdenden Studieren- den im Bezug zu realitäts(praxis)- bzw. forschungsnahe The-menstellungen vorgestellt. Während der Übungstermine wer denin Teamsausgewählte Methodenpraktischangewandtund Umgesetzt. Dies deckt den kompletten Bereich, von der krea tiven Ideenfindung bis hin zu einem fertigen, präsentierbaren (low/high)-fidelity Prototypen durch Einsatz von Werkzeugen im lehrstuhleigenen Fab Lab ab.","Portfolio-Prüfung, die genaue Prüfungsart wird zu Beginn des Semesters durch Aushang auf den Internetseiten der Fakultät bzw. in der Vorlesung bekannt gegeben. mögliche Portfoliobestandteile sind: • Anfertigung von geeigneten Prototypen und Entwürfenfür Benutzungsschnittstellen für vorgegebene Anwen dungskontexte und deren Dokumentation• Entwurf, Durchführung, Dokumentation und Auswer tung kleiner Benutzerstudien • Präsentation der erstellten Materialien unter Einsatz geeigneter Präsentationstechniken, z. B. Power Point, Desktopreviews, Postern, Flipchart, Whiteboard, Tafel Portfolio-exam, the exact mode of assessment will be announ ced at the start of the semester.",Präsentation Presentations,wird in Abhängigkeit der konkreten Aufgaben- stellung ausgewählt und bekanntgegeben.,MSc Informatik/ Computer Science
6003,"Science and Technology Project in Physical Making,",455342,Jedes Sommersemester Every summer semester,1 Semester,Kranz,Kranz,Englisch English,Modulgruppe „Inf Komm“ Focus „Inf Komm“,"8 P Für ausgewählte Kolloquien, Workshops, sowie für spezifische Laborarbeiten die im Rahmen einer spezifischen Themenstel lung notwendig sind, besteht Anwesenheitspflicht. Begründung der Anwesenheitspflicht bei Laborarbeiten: Die Aufgabenstellung kann besondere Ausstattung (Geräte, Arbeitsplätze, etc. ) erfordern, die nur in den Laboren und Räu men der Universität in geeigneter Weise zur Verfügung steht. Ferner ist ggf. eine direkte Betreuung und Unterweisung an speziellen Geräten notwendig bzw. eine Aufsicht der Nutzung der Labore. Daher ist in der Regel eine Bearbeitung außerhalbdieses Kontextes nicht möglich und die Anwesenheit Voraus setzung für die erfolgreiche Bearbeitung.",40 Std. Einarbeitung in wissenschaftliche Themenstellung + Workload 45 Std. Literaturrecherche + 25 Std. Projektmanagement + 70 Std. Analyse und Spezifikation + 110 Std. Entwurf und Implementierung + 40 Std. Validierung und Evaluation + 10 Std. Berichterstellung + 10 Std. Kolloquien und deren Vorbe reitung + 10 Std. Präsentation und deren Vorbereitung Gesamt: 360 Std.,ECTS/Credits: 8,Keine None,"Writing Technical and Scientific Reports, Mobile Human- Computer Interaction oder Grundlagen der Mensch-Maschine Interaktion Writing Technical and Scientific Reports, Mobile Human Computer Interaction or Basics of Human-Computer Interaction",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden lernen die grundlegenden Vorgehenswei- sen, Methoden und Werkzeuge eines Nutzer-zentrierten und Technologie-orientierten Making-Prozesses kennen. Die Studierenden erwerben Kenntnisse über Ideation und Kreativi tätsprozesse und unterstützende Methoden und Werkzeuge. Dazu zählt auch die Gestaltung der Arbeits- und Ideationumgebung. Die Studierenden kennen die notwendigen Basistech nologien und deren Vor- und Nachteile in den verschiedenen Einsatzbereichen, z. B. additive und subtraktive Fertigungsverfahren inklusive den notwendigen Grundlagen der verwen deten Werkstoffe und Materialien. Die Studierenden kennen grundlegende Technologien und Werkzeuge zur Entwicklungdigitaler Prototypen und Demonstratoren. Sie wissen sie vor gefertigte, kommerziell verfügbare elektronische Module zur Sensor- und Aktor-Steuerung an Standard-Plattformen (In tel Edison, A RM Cortex) anbinden um interaktive Systeme zu realisieren. Sie kennen einfache Programmierumgebungenund -werkzeuge diese Prototyping-Prozesse bestmöglich un terstützen. Im Bereich der mobilen Technologien kennen die Studierendendiegrundlegenden Ansätzezur Programmierung Android-basierter mobiler Endgeräte (Smartphones, Weara bles, Smart Home, Digital Health, . .. ). Fähigkeiten / Abilities Die Studierenden können ausgewählte Kreativitätstechnikenanwenden um in interdisziplinären Teams Ideen und Lösungs vorschläge unter Anwendung methodischer Vorgehensweisenzu erarbeiten. Sie kennen Prototyping-Werkzeuge und Maker Technologien zur Umsetzung von Konzeptstudien und Pro totypen. Sie können Software- und Hardware Werkzeuge an Hand der jeweiligen Anforderungen des Prototyps bewertenund auswählen und einfache Prototypen mit Hilfe geeigne  ter Maschinen umsetzen. Sie kennen Software-Werkzeuge zur Modellierung und können einfache Werkstücke erstellen bzw. bearbeiten, z. B. 3 DModellerfürden3 DDruckoder CN CFräsen für subtraktive Werkstückbearbeitung. Sie kennen grundlegende Prototyping-Umgebungenundkönneneinfacheeingebettete Systememit Sensoren, Aktorenund Kommunikations systemen programmieren und zu einem interaktiven Systemverknüpfen. Sie können einfache Programme für die Android Plattform schreiben um interaktive Prototypen für Smart phone, Wearable, Smart Home, Digital Health und andere Android-basierte Systeme umzusetzen. Die Studierendenerwerbenerstepraktische Erfahrungeninder Anwendung der entsprechenden Technologien und Methoden aus dem Kerngebiet dieser Lehrveranstaltung. Kompetenzen / Competencies Die Studierenden können die Themenstellung kompetent analysieren, Ideen dazu erstellen und bewerten, geeignete Prototyping-Methoden auswählen, Evaluationsmethoden be werten undwählensowiedie Datenerfassung und-auswertung planen und durchführen. An Hand der Ergebnisse können die Studierenden eine Bewertung der Ergebnisse vornehmen unddiese interpretieren. Die Studierenden können einfache Fall stellungen selbst umsetzen und bewerten.","e der Aufgabenstellung durch Arbeitspakete adäquat abgedeckt sein. In den einzelnen Arbeitspaketen kommen projekt- und domänenspezifische Werkzeuge, Methoden und Beschreibungs-sprachen zum Einsatz. Das Ergebnis eines je den Arbeitspaket ist ein eigenes Dokument, ggf. begleitet von Software, ggf. begleitet von Anhängen mit z. B. Software oder Beschreibungen von Hardwareblöcken in geeigneten Spezifi kationssprachen. Jedes Arbeitspaket schließt mit einem kurzen Kolloquium ab, in dem die Ergebnisse den Betreuern präsentiert und verteidigt werden. Das Kolloquium kann auch die Präsentation zusammen mit anderen Teams umfassen um eine reflektive Diskussion über die Ergebnisse und Vorgehensweisen zu ermög lichen. Zu jedem Kolloquium ist darüber hinaus ein Bericht abzugeben. Der Studierende wird durch regelmäßige Treffen mit dem Betreuer unterstützt, deren Häufigkeit der aktuellen Phase bzw. dem Bearbeitungsfortschritt angemessen ist. Das Praktikum schließt mit einem Abschlusskolloquium ab, indem das fertig entwickelte System präsentiert und abgenom men wird. Programmiersprachen sind hauptsächlich: C/C++ / Java /  Java Script / Phyton Darüberhinauswerdender Problemstellungangemessenespe zifische Werkzeuge und Methoden eingesetzt.","Schriftliche Dokumentation in Form eines technischen Be- richts, mündliche Kolloquien zu den Arbeitspaketen die durchgeeignete Medien (z. B. Folien) unterstützt werden, dokumen tierter und funktionsfähiger Prototyp inklusive Quelltext inkl. aller zur Demonstration notwendigen Informationen, sowie einer Systemdemonstration und Präsentation im Rahmen einer Ab schlussveranstaltung.","Präsentation mit Projektor, Gruppenarbeit, Wiki Presentation with projector, group work, wiki",wird in Abhängigkeit der konkreten Aufgaben- stellung ausgewählt und bekanntgegeben.,MSc Informatik/ Computer Science
6004,Embedded Systems Programming,479610,Unregelmäßig Irregular,1 Semester,Kranz,Kranz,Deutsch oder Englisch German or English,Modulgruppe „I TS“ Focus „I TS“,"4 P Fürdie Lehrveranstaltungbesteht Anwesenheitspflicht. Esfin-det eine wissenschaftlich-technische Einführung zu den Themender Lehrveranstaltungstatt, diesewerdenindenanschließenden Übungen direkt mit der Übungsleitung praktisch um gesetzt. Begründung: In der Lehrveranstaltung arbeiten die Teams von Studierenden an einem größeren Projekt über das ganze Semester hindurch. Es zu jedem Arbeitspaket bzw. Themengebiet ein Kolloquium statt, in denen über die Fortschritte berichtet, aufgetretene Probleme ausgetauscht und ihre Lösungen diskutiert werden; am Ende findet ein Abschlusskolloqui um statt. Wird keine umfassende Anwesenheit bei den Kolloquien gefordert, wird die Kompetenz nicht geübt, vor anderen Studie renden zu präsentieren und auf ihre Fragen und Anmerkungen(undnichtnurdiedes Dozenten)einzugehenunddiesezudiskutieren. Die Kompetenz, die präsentierten Inhalte zu analy sieren, bewertenundkritischzudiskutierenisteinewesentliche Anwendung der Lehrveranstaltungsinhalte die nur bei Präsenz eingeübt werden kann. Die vereinzelte Abwesenheit aus nichtvom Studierenden zu vertretenden und nachgewiesenen Grün den ist möglich. Darüber hinaus kann die spezifische Aufgabenstellung besondere Ausstattung erfordern, die nur in den Laboren und Räu men der Universität in geeigneter Weise zur Verfügung steht. Ferner ist ggf. eine direkte Betreuung und Unterweisung anspeziellen Gerätennotwendig. Daheristbeispezifischer Aufga  benstellungeine Bearbeitungaußerhalbdieses Kontextesnicht möglich und die Anwesenheit dann zwingende Voraussetzungfür die erfolgreiche Bearbeitung. Andernfalls ist die erfolgrei che Teilnahme an der Lehrveranstaltung gefährdet.",60 Std. Präsenz und 150 Std. Vor- und Nachbearbeitung Workload 60 hrs presence and 150 hrs self study,ECTS/Credits: 8,Keine None,"Programmierung in Java oder Grundlagen der Programmie- rung 1 und 2, M ES Praktikum oder S EP Programmingin Javaor Programming1and2, M ES Practical or S EP",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden lernen die Realisierung von umfangreichen Engineering-Projekten aus dem Kontext Eingebetteter Syste me und die dazu notwendigen Vorgehensweisen, Methoden und Werkzeugekennen. Theoretische Kenntnissevom Entwurfhardwarenaher Systeme, der Entwicklung spezialisierter Anwendungen und allgemeiner Software-Systeme werden praktischangewendetunddurchdie Systementwicklungeineskom plexeren Gesamtsystems vertieft. Fähigkeiten / Abilities Die Studierenden beherrschen die praktischen Fragestellungen der Entwicklung und Umsetzung von Systemen bestehend auseingebetteten Systemen in technischen Kontexten. Die Stu dierendenbeherrschendierelevanten Werkzeugeund Systeme für die Entwicklung und Testung eingebetteter Systeme und Entwicklungsparadigmen. Die Studierenden können in einem kleinen Team effektive Lösungen erarbeiten und durchführen und erfolgreich ein vorlesungsbegleitendes Projekt im Team realisieren. Kompetenzen / Competencies Die Teilnehmer erlernen soziale Kompetenz durch die Team  arbeit und die notwendigen organisatorischen und fachlichen Kompetenzen zur Durchführung von Projekten aus dem Kon text der eingebetteten Anwendungsentwicklung erfolgreich zu bearbeiten. Teil des Lernziels besteht in der Abschätzung und Kontrolle des Arbeitsaufwandes, sowie der Entwicklung von Strategien zum erfolgreichen Projektmanagement. Dazu wer den Stundenzettel geführt.","umfasst das Systemmodell als Über-sicht, die geeignete Beschreibung der Systemumgebung mittelsgeeigneter Werkzeuge, sowiedie Erfassungund Dokumen tation funktionaler und nicht-funktionaler Anforderungen. 2. Entwurf Hauptbestandteil ist ein systematischer Grobentwurf eines Systems, das die in der Analyse ermittelten Anforderungenbestmöglich erfüllt. Auf dieser Basis wird ein detaillierter Entwurf ausgearbeitet, der mit der Problemstellung angemesse nen, domänenspezifischen Werkzeugen und Vorgehensweisen das umzusetzende System spezifiziert und dokumentiert. 3. Umsetzung Im Rahmen der Umsetzung erfolgt die tatsächliche Realisie rung des entworfenen Systems. Das System besteht in der Regel aus Software- und Hardware-Komponenten. Zur Rea  lisierung sind bestehende, konfigurierbare Softwarebausteine mit eigener Software zu ergänzen und zu einem lauffähigen Gesamtsystem zu integrieren. Hierzu werden Methoden aus dem Bereich der verteilten Systeme, z. B. Architekturentwurf, oder der vernetzten Systeme, z. B. Socket-Programmierung, verwendet. 4. Validierung und Verifikation Validierung und Verifikation der Ergebnisse von Entwurf und Umsetzung auf Grundlage der durch Analyse bestimmten An forderungen. Jedes Arbeitspaket kann eine oder mehrere dieser Aktivitä ten umfassen und jede Aktivität kann Gegenstand eines oder mehrerer Arbeitspakete sein. Dabei müssen alle Aktivitätendurch Arbeitspakete adäquat abgedeckt sein. In den einzel nen Arbeitspaketen kommen projekt- und domänenspezifische Werkzeuge und Methoden zum Einsatz. Zu allen Arbeitspaketen werden Arbeitseinheiten definiert, de ren Aufwand abgeschätzt und deren Realisierung z. B. anhand einer Gantt-Chart organisiert und durchgeführt. Das Ergebnisjedes Arbeitspakets wird durch einen kurzen Bericht doku mentiert, ggf. begleitet von Software. Aus dem Bericht sindauch Aufwandsabweichungen und Korrekturen vorangegange ner Arbeitspakete ersichtlich. Jedes Arbeitspaket schließt mit einem Kurzvortrag in dernächsten Einheit ab. Die Teams werden durch ein festes wö chentliches Treffen mit dem Betreuer unterstützt. Die Lehrveranstaltung schließt mit einem Abschlusskolloqui um ab, in dem das fertig entwickelte System präsentiert und abgenommen wird.","Schriftliche Dokumentation in Form eines technischen Be- richts, mündliche Präsentationen zu den Arbeitspaketen diedurch geeignete Medien (z. B. Folien) unterstützt werden, do kumentierter und funktionsfähiger Quelltext inkl. aller zur Demonstration notwendigen Informationen, sowie einer Sys temdemonstration im Rahmen des Abschlusskolloquiums.","Präsentation mit Projektor, Gruppenarbeit, Wiki Presentation with projector, group work, wiki",wird in Abhängigkeit der konkreten Aufgaben- stellung ausgewählt und bekanntgegeben.,MSc Informatik/ Computer Science
6021,Mathematische Statistik,451013,Unregelmäßig Irregular,1 Semester,Müller-Gronbach,Gilch,Deutsch oder Englisch German or English,Modulgruppe „Alg Math“ Focus „Alg Math“,3 V + 1Ü,"45 + 15 Std. Präsenz, 90 + 30 Std. Eigenarbeitszeit Workload 45 + 15 hrs presence, 90 + 30 hrs self study",ECTS/Credits: 6,Keine None,"Analysis I, Einführung in die Stochastik Analysis I, Introduction to Stochastic",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,Die Studierenden erhalten eine Einführung in die Mathemati- sche Statistik. Diesbeinhaltetdie Vermittlungdergrundlegen-den Konzepte der Statistik. Die besprochenen Hauptschwerpunkteliegenhierbeiinder Parameterschätzungsowiebei Hy pothesentests. —The students shall get an introduction on the theory of ma thematical statistics. They shall acquire the basic concepts of statistics. The main topics include the estimation of parame ters and testing of hypotheses.,"Parameterschätzung (Momenten-, M L-Schätzer), beste Schätzer, U MV U-Schätzer, Suffizienz, wichtige Statistik-Sätze (Rao-Blackwell, Lehmann Scheffé, Cramér-Rao), exponentielle Familien, asymptotische Eigenschaften von Schätzern, Konsistenz, Konfidenzbereiche, ein-/ zweiseitige Hypothesentests, Unabhängigkeitstests, Li neare Modelle — Estimation of Parameters (moment and M L estimators), bestestimators, U MV U estimators, sufficiency, important statisti caltheorems(Rao Blackwell, Lehmann-Scheffé, Cramér-Rao), exponentialfamilies, asymptoticpropertiesofestimators, con sistency, confidenceintervals, one-/two-sidedhypothesistests, tests on independence, linear models",Zwei Teilleistungen: Teilleistung 1 (80%): 120-minütige schriftliche Prüfung oder mündliche Prüfung(ca. 30 Minuten); die genaue Prüfungsart wird zu Semester beginn bekannt gegeben. Teilleistung 2 (20%): Ausarbeitung (bis zu 10 Seiten) über ein zusätzliches Thema der Mathematischen Statistik. Zum Bestehen des Moduls müssen beide Teilleistungen be standen werden. Examination in two parts: Part 1 (80%):120 minutes written or 30 minute oral examination. The pre cise mode of assessment will be announced at the start of the semester. Part 2 (20%):Written work (up to 10 pages) on a subject from Mathemati cal Statistics. To pass the examination both parts have to be passed.,"Tafel, Beamer Projector, blackboard","Shao: „Mathematical Statistics“, 2nd edition. Springer, New York, 2007. Witting: „Mathematische Statistik I“. Teubner, Stuttgart, 1985.",MSc Informatik/ Computer Science
6029,Numerik stochastischer Differentialgleichungen,451004,Alle vier Semester Every fourth semester,1 Semester,Müller-Gronbach,Müller-Gronbach,Deutsch oder Englisch German or English,Modulgruppe „Alg Math“ Focus „Alg Math“,3 V + 1Ü,"60 Std. Präsenz, 60 Std. Übungsaufgaben, 60 Std. Nachbe- Workload reitung und Prüfungsvorbereitung 60 contact hours, 60 hours excercises, 60 hours independent study and exam preparation",ECTS/Credits: 6,Keine None,"Lineare Algebra I+I I, Analysis I+I I, Einführungindie Stochas- tik, Wahrscheinlichkeitstheorie, Stochastische Analysis Linear Algebra I+I I, Analysis I+I I, Introductionto Stochastics, Probability Theory, Stochastic Analysis",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Grundlegender Algorithmen zur Approximation von (Erwar- tungswerten von Funktionalen von) Lösungen stochastischer  Differentialgleichungen, ihre theoretischen Eigenschaften und typische Anwendungen. —Knowledge of basic algorithms for approximation of (expec tations of functionals of) solutions of stochastic differentialequations, their theoretical properties and typical applicati ons. Fähigkeiten / Abilities Auswahl geeigneter Approximationsalgorithmen für konkrete Fragestellungen, ihre effiziente Implementierung, die praktische Durchführung von entsprechenden Simulationsexperi menten und die Darstellung und Bewertung der Ergebnisse. —Abilitytoselectappropriateapproximationalgorithmsforspe cific questions, their efficient implementation, the practical implementation of relevant simulation experiments, and the presentation and evaluation of results.","• Grundbegriffeder Approximationstochastischer Prozes- se: Fehlerkriterien, Kostenmaße, minimale Fehler und Komplexität, Optimalität und asymptotische Optima lität. • Pfadweise Approximationder Lösungstochastischer Dif ferentialgleichungen: zeitdiskrete Ito-Taylor Schemata, zeitkontinuierliche Verfahren, adaptive Schrittweiten steuerung. • Quadraturverfahren für stochastische Differentialgleichungen: Standard Monte-Carlo Verfahren, Multilevel Verfahren, Anwendungen in der Finanzmathematik. — • Basicconceptsofapproximationofstochasticprocesses: error criteria, cost measures, minimal error, complexity, optimality and asymptotic optimality. • Pathwise approximation of solutions of stochastic dif ferential equations: discrete-time Ito-Taylor schemes, continuous-time methods, adaptive time step control. • Quadrature of stochastic differential equations: Standard Monte Carlo methods, multilevel methods, appli cations in mathematical finance.",90-minütige Abschlussklausurodermündliche Prüfung(ca. 20 Minuten); die genaue Prüfungsart wird zu Beginn des Semes- ters bekannt gegeben. 90 minute written or 20-minute oral examination. The preci se mode of assessment will be announced at the start of the semester.,"Tafelanschrieb, Overhead, Beamer slides, projector, blackboard",Bekanntgabe durch Dozenten / Anouncement by lecturer,MSc Informatik/ Computer Science
6034,Graphen- und Netzwerkalgorithmen Praktikum,451005,Unregelmäßig Irregular,1 Semester,Rutter,Rutter,Englisch English,Modulgruppe „Alg Math“ Focus „Alg Math“,3Ü,"45 Std. Präsenz + 135 Std. Vor- und Nachbereitung des Prak- Workload tikums45 contact hours + 135 hrs independent study, implementa tion and discussions with the teams",ECTS/Credits: 6,Programmierkenntnisse in C oder Java Programming skills in C or Java,"Algorithmenund Datenstrukturen, Effiziente Algorithmen, Al- gorithmen zur Visualisierung von Graphen Algorithms and Data Structures, Efficient Algorithms, Algo rithms for Visualizing Graphs",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Die Studierenden besitzen ein systematisches Verständnis der Entwurfs- und Analyseprinzipien eines komplexen Projekts im Bereichder Graph-und Netzwerkalgorithmen. Sie kennenver  schiedene Ansätze zur Lösung von schweren Problemen (z. B. Approximationen, Heuristiken) und sind in der Lage zu einer Problemstellung geeignete Entwurf- und Analysetechniken auszuwählen. Sie können algorithmische Lösungen für un terschiedliche Teilaspekte von Problemstellungen miteinander kombinieren, sind in der Lage die Effizienz der resultierenden Lösungen zu analysieren, deren Leistungsfähigkeit zu evaluie ren, und diese auf eine konkrete Anwendung anzupassen. —The students acquire a systematic understanding of the de sign and analysis principles for a complex project in the areaofgraphandnetworkalgorithms. Theyknowdifferentapproaches for solving hard problems (e. g. , approximations, heuri stics) and they are able to choose suitable design and analysistechniques for a given problem. They are able to combine al gorithmic solutions for different aspects of a problem and can analyze the efficiency of the resulting solutions. They further have the competence to evaluate the performance of theirsolutions and to further adapt their methods to concrete pro blems.","Um schwierige Probleme in der Praxis zu lösen, ist es häu- fig nötig eine Vielzahl von unterschiedlichen Ansätzen mitein- ander zu kombinieren (z. B. Approximationen, parametrisierte Algorithmen, heuristische Verfahren) und zudem generische Verfahren möglichst gut auf die in der Praxis auftretenden Instanzen anzupassen um dort vorhandenen Strukturen auszunutzen. In dieser Veranstaltung wird dieses Vorgehen an hand von ausgewählten Problemstellungen aus dem Bereich der Graph-und Netzwerk-Algorithmenvermitteltunderprobt. Diekonkreten Problemstellungenspeisensichaus Wettbewerben, die von führenden Algorithmen-Konferenzen järhlich ver anstaltetwerden, insbesondereder Graph Drawingcontest(1), mit einem Hauptaugenmerk auf Fragestellungen in der Graphenvisualisierung, der Wettbewerb des Symposium on Computational Geometry (2), mit einem Schwerpunkt auf geo metrischen Problemen und der Parameterized Algorithms and Computational Experiments Challenge (3), die einen Schwerpunkt auf parametrisierte Probleme legt. Ziel der Veranstal tung ist, dass die Studierenden in kleinen Teams Lösungen für Aufgaben aus diesen Wettbewerben entwickeln, und an min destens einem der Wettbewerbe teilnehmen. —Solving hard problems in practice, often requires the combination of ideas from multiple approaches (e. g. , approximations, parameterized algorithms, heuristic procedures). Moreo  ver, genericalgorithmsandapproachesmustoftenbeadaptedtopracticalinstancetoexploitstructuralpatternsthatarepre sentinreal-wordinputs. Inthiscourse, studentslearntofollow this approach to solving problems in practice and apply it to problems in the area of graph and network algorithms. The specific problems stem from contests that are held annu ally by leading algorithms conferences. In particular from the Graph Drawing Contest [1], which has a focus on problems ingraph visualization, the contest of the Symposium on Compu tational Geometry [2], which focuses on geometric problems, and the Parameterized Algorithms and Computational Expe riments Challenge [3], which mostly deals with parameterizedproblems and algorithms. The goal of this course is that stu dents develop solutions for problems from these contests and participate in at least one them. (1) https://mozart. diei. unipg. it/gdcontest/ (2) https://cgshop. ibr. cs. tu-bs. de/ (3) https://pacechallenge. org/","Portfolio-Prüfung. Möglich sind folgende Bestandteile: • Projektbericht • Abschlussvortrag • Quellcode des umgesetzten Projekts • Ggf. Zwischenvorträge, Zwischenberichte Die genauen Bestandteile werden vom Dozenten zu Beginn des Semesters bekannt gegeben. Portfolio exam consisting of the following parts: • Project report • Final presentation • Source code of the project • Possibly intermediate presentations and reports The exact parts will be announced at the start of the semes ter.",-,"Giuseppe Di Battista, Peter Eades, Roberto Tamassia, Ioannis G. Tollis: Graph Drawing: Algorithms for the Visualization of Graphs. Prentice-Hall 1999. Michael Kaufmann, Dorothea Wagner: Drawing Graphs, Methods and Models. Lecture Notes in Computer Science, Sprin ger 2001. Roberto Tamassia: Handbook of Graph Drawing and Visuali zation, Chapman and Hall/C RC, 2013.",MSc Informatik/ Computer Science
6037,Sicherheit von KI-Systemen,451011,Unregelmäßig Irregular,1 Semester,Posegga,Pöhls,Englisch English,Modulgruppe „I T-Sec Rel“ Focus „I T-Sec Rel“,2 V,30 Std. Präsenz + 60 Std. Nachbereitung und Prüfungsvor- Workload bereitung 30 contact hours + 60 hours independent study and exam preparation,ECTS/Credits: 3,Keine None,"Advanced I T Security, Privacy Enhancing Techniques, Advan- ced Topics in Data Science, Context Recognition Architectures",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden erlangen Kenntnisse über:• I T-Sicherheitrisiken bei Konzeption und Einsatz von K I Systemen (= I T-Systemen welche Funktionen mittels  künstlicher Intelligenz bereitstellen); • I T-Sicherheitsziele im Kontext von K I-Systemen; • Modelle und Verfahren zur methodischen Analyse der I T-Sicherheit von K I-Systemen; • Maßnahmenund Vorgehensweisenzur Erhöhungder IT Sicherheit von K I-Systemen. — The students acquire skills about:• I T Security risks during the design and operation of A I systems (= I T-systems that include functionality based on artificial intelligence); • I T Security goals in the context of A I-systems • models and methods for the analysis of the I T Security of A I-systems• mechanisms and steps to increase the security of A I systems Fähigkeiten / Abilities Die Studierenden erwerben die Fähigkeit, Techniken zur Bewertung der Sicherheit von Informationssystemen auf I T Systemeanzuwendenunddabeiinsbesondere Bedrohungenzu berücksichtigen, welche daraus resultieren, dass Technologien aus dem Bereich der künstlichen Intelligenz Bestandteil des I T-Systems sind. Sie erlernen die Anforderungen, welche an die I T-Sicherheit solcher K I-Systeme gestellt werden können, zu beschreiben. —The students acquire the skill to apply techniques for asses sing the information security (including safety and privacyaspects) especially for I T-Systems that employ artificial in telligence technology as one of the system’s component. Thisdevelops their ability to apply appropriate I T Security metho dologies to find security, safety and privacy concerns of the AI-system itself and enables them to apply adapted I T Secu rity methods to increase the security of the A I-system itself. Kompetenzen / Competencies Die Studierenden erlernen • I T-Sicherheitsbedrohungen (Risiken) für Systeme mit künstlicher Intelligenz (K I-Systemen) zu identifizieren, zu analysieren und zu beurteilen; • welche I T-Sicherheitsziele man für K I-Systeme ansetzen kann; • wieklassische IT-Sicherheits Vorgehensweisen/Mechanismen nach einer Anpassung an die speziellen Risi kenvon KI-Systemenzur Verbesserungder IT-Sicherheit dieser Systeme beitragen.  — The students learn• to identify, analyse and evaluate I T Security risks of A I systems; • which security and safety protection should be required for A I-systems; • how to apply adapted security models and methods to increase the security of the I T system that contains A I components.","Sicherheit von K I-Systemen untersucht wie man I T- Sicherheitsziele(Integrität, Vertraulichkeit, Verlässlichkeitund weitere) für den Entwurf und den Betrieb von I T-Systemen mit Funktionen aus der künstlichen Intelligenz (K I) definiert, analysiert und sicherstellt. Hierbei wird jeweils auf die verschiedenen K I-Lösungsverfahren (Stichworte: machine lear ning, symbolic/non-symbolic, neural-networks, deep-learning, unsupervised/supervised learning) eingegangen, um dann methodisch zu analysieren welche I T-Sicherheitsziele und –probleme hierbei bestehen und woher sie stammen (Stichwor te: training, training data, input-privacy, confidentiality of the algorithm or trained network, adversarial learning). Für die identifizierten I T-Sicherheitsprobleme werden dann mögliche Lösungen diskutiert, welche die I T-Sicherheit des K I-Systems selbst erhöhen. Die folgenden Themen werden behandelt: • Definition der I T-Sicherheitsziele für K I-Systeme• Grundbegriffeder IT-Sicherheit(Confidentiality, Integri ty, Availability, Reliability, Veracity, Input-Privacy, etc. ) • Definition des Begriffes ‚K I-System’ • Unterschiede bei K I-Systemen • Angriffsmodelle • mögliche Schwachstellen bei K I-Systemen • Fallbeispiele• Lösungen zur Erhöhung der I T-Sicherheit von K I Systemen —Security of A I-systems examines how I T Security goals (including Safety and Privacy aspects), like Integrity, Confiden tiality, Reliability, and others can be defined and used for thedesign and operation of secure I T-systems that employ ar tificial intelligence technology (A I-systems). We will discuss different artificial intelligence methods (keywords: machinelearning, symbolic vs. non-symbolic, neural-networks, deep learning, unsupervised/supervised learning) to analyse which I TSecurityproblemscouldariseandwheretheyoriginatefrom (keywords: training, training data, input-privacy, confidentia lity of the algorithm or trained network, adversarial learning). For the problems identified the course will discuss potential solutions that increase the I T Security of the A I-system itself; i. e. the security target of the course is the I T-system thatemploys artificial intelligence functions, not using artificial in telligence as a tool for solving security problems. The following topics are discussed: • definition of I T Security goals for A I-systems• terms and definitions of fundamental information securityconcepts(confidentiality, integrity, availability, relia bility, veracity, input-privacy, etc. ) • definition of the term ‘A I-system’ • differences in A I-systems • attacker Modeling • potential I T Security problems of A I-systems • examples of problems • solutions to increase the I T Security of A I-systems",90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 90-minute examination or oral examination (approx. 20 minu tes); the precise mode of assessment will be announced at the beginning of the semester.,"Tafel, Beamer Blackboard, projector",Wird vom Dozenten bekannt gegeben Announced during the lecture,MSc Informatik/ Computer Science
6039,Formal Methods in Security: Modelling and Analysis of,451014,Unregelmäßig Irregular,1 Semester,Posegga,Posegga,Englisch English,Modulgruppe „I T-Sec Rel“ Focus „I T-Sec Rel“,2 V + 1Ü,24 Std. Präsenz + 88 Std. Eigenarbeitszeit Workload 24 contact hours + 88 hours self study,ECTS/Credits: 4,Advanced I T-Security,"System Security, Theoretische Informatik I System Security, Theoretical Computer Science I",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Teilnehmer lernen ver- schiedene Spezifikationsprachen kennen, in dem Sie Sicher- heitsziele einerseits sowie Sicherheitsmechanismen anderseits formalisieren können. Die Sprachen basieren auf Temporale Logiken, Rewriting, Automaten Theorie, und Autorisierungs logiken. Die Liste der Sprachen und Mehoden beinhaltet: • A SLan++—a formal security specification language for  distributed systems • hlpsl – A high level protocol specification language for industrial security-sensitive protocols • C AP SL:Common Authentication Protocol Specification Language. • Alice and Bob: Reconciling formal models and imple mentation • hacspec: Towards Verifiable Crypto Standards Die Studenten lernen die Syntax und Semantik der Spezifika tionssprachen. Darüber hinaus lernen Sie, welche praktischen Tools in der Lage sind zu überprüfen, ob die vorgeschlagenen Mechanismenineinembestimmten Systemdesigndieerwarteten Sicherheitsrichtlinien implementieren. Sie können den ge eigneten Ansatz für das Problem auswählen, die Richtlinien und das System in der entsprechenden Sprache angeben unddie Tools anwenden, um die Richtigkeit der Sicherheitsmecha nismen zu überprüfen. Die Theorie und Funktionsweise der Tools wird auch gelernt. Folgende Tools werden benutzt• The A VI SP A tool for the automated validation of inter net security protocols and applications• An on-the-fly model-checker for security protocol ana lysis • O FM C: A symbolic model checker for security protocols• Meta-F:Proof Automationwith SM T, Tactics, and Me taprograms• D KA L2-A Simplifiedand Improved Authorization Lan guage — Students will learn various languages for specifying security policies together with security mechanisms. The specification languages are based on temporal logics, rewriting, automata theory, and Authorization logics. The languages to be learnt include: • A SLan++—a formal security specification language for distributed systems • hlpsl – A high level protocol specification language for industrial security-sensitive protocols • C AP SL:Common Authentication Protocol Specification Language. • Alice and Bob: Reconciling formal models and imple mentation • hacspec: Towards Verifiable Crypto Standards Besides understanding the syntax and semantics of the speci fication languages, the students will learn to use a set of tools for verifying that the proposed mechanisms in a given system  design satisfy or enforce the expected security policies. Theywill be able to choose the appropriate approach for the pro blem, use the corresponding language to specify the policies and system and apply the tools to verify the correctness of the security mechanisms. The tools include:• The A VI SP A tool for the automated validation of inter net security protocols and applications• An on-the-fly model-checker for security protocol ana lysis • O FM C: A symbolic model checker for security protocols• Meta-F:Proof Automationwith SM T, Tactics, and Me taprograms• D KA L2-A Simplifiedand Improved Authorization Lan guage Fähigkeiten / Abilities Die Teilnehmer beherrschen die Konzepte formaler Sicher heitszieleund-richtlinienundkönnen Sicherheitsmechanismen oder -protokolle zur Durchsetzung der Eigenschaften in einembestimmten System oder Szenario entwerfen und die Richtig keit dieser Durchsetzung überprüfen. —Students master the concepts of formal security goals and po licies and are able to design security mechanisms or protocols to enforce the properties in a given system or scenario and is able to verify the correctness of this enforcement. Kompetenzen / Competencies Die Studierenden erwerben Kenntnisse über die Vielfalt der Sicherheitsrichtlinien und die Schwierigkeit, deren Richtigkeitzuüberprüfen. Sieerkennendie Notwendigkeitderhöheren Sicherheitsstufenundverstehendieaktuellgestiegenen Anforde rungenandie Korrektheitder Sicherheitfürmodernekritische Systeme, insbesonderein Bezugauf Sicherheit(„übertragbare Beweise“) und Rechenschaft (Accountability, „faire Schuldzu weisungen“). — Students gain the knowledge about the diversity of security policies and the difficulty in verifying their correctness. You appreciate the importance of the higher security levels and understand the current increased demands on the correctnessof security for modern critical systems, and, in particular, re garding assurance (“transferrable proofs”) and accountability (“fair blaming”).",ist der Nachweiscode und die Nachweisauthen- tifizierung.,"Projektarbeit, bestehend aus Source-Code (Aufwand: etwa 40 Stunden), schriftliche Ausarbeitung in Form eines technischen Berichts(around20pages)und Präsentationder Arbeit(etwa30 Minuten). Aufgrund des Zeitaufwands für die Präsentatio nen ist die Anzahl von Studenten auf 20 beschränkt. Project work: Implementations (source code) for a programming project of about 40 hours processing time, technical re port (around 20 pages) and presentation (about 30 minutes). Due to the time requirements for the student presentations, the number of students is restricted to 20 participants in the class.","Präsentation und Beamer, Tafel Presentation and projector, blackboard","Matt Bishop: Computer Security, Pearson Education, 2019. Alfred J. Menezes, Paul C. van Oorschot, and Scott A. Van- stone: Handbook of Applied Cryptography, C RC Press, 1996 (available online). Colin Boyd and Anish Mathuria, Protocols for Authentication and Key Establishment, Springer, 2003. Giampaolo Bella, Formal Verification of Security Protocols, Springer, 2007. Peter Ryan, Steve Schneider, und M. H. Goldsmith: Modeling and Analysis of Security Protocols, Addison Wesley, 2000. The A VI SP A Project. Original Research Papers.",MSc Informatik/ Computer Science
6040,Integraltransformationen,451007,Unregelmäßig Irregular,1 Semester,Forster-Heinlein,Fink,Deutsch oder Englisch German or English,Modulgruppe „Alg Math“ Focus „Alg Math“,2 V + 2Ü,60 Std. Präsenz + 45 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 45 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Lineare Algebra I + I I, Analysis I + I I oder äquivalent Linear Algebra I + I I, Analysis I + I I or equivalent",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierendenkennendiegrundlegendenundanwendungs-relevanten Konzepte und Techniken verschiedener Integraltransformationen in der Signalanalyse und wissen, welche Ei genschaften für die Anwendung wichtig sind und wie diese  hergeleitet werden. — Thestudentsknowthebasicandapplication. relevantconcepts andtechniquesofvariousintegraltransformsinsignalanalysis and know which properties are important for the applications and how they are derived. Fähigkeiten / Abilities Die Studierenden können Beweistechniken der Integraltrans formationen nachvollziehen, sie auf verwandte Probleme aus Anwendungsfragen übertragen und zugehörige Algorithmen bewerten. — The students can comprehend proof techniques of integral transforms, apply them to related problems in applications and evaluate associated algorithms. Kompetenzen / Competencies Die Studierenden besitzen die Kompetenz, die Konzepte und Methoden hinter verschiedenen Integraltransformationen zu verstehen und geeignete Verfahren für Anwendungsprobleme auszuwählen und anzuwenden. — Students are able to comprehend the concepts behind various integral transforms and are capable of selecting and applying appropriate methods for application problems.",Inhalt: • Fourier-Reihen • Fourier-Integrale • Diskrete und schnelle Fourier-Transformation • Kontinuierliche und diskrete Wavelet-Transformation • Kontinuierliche und diskrete Shearlet-Transformation — Content: • Fourier series • Fourier integrals • Discrete und fast Fourier transform • Continuous and discrete wavelet transform • Continuous and discrete shearlet transform,Mündliche Prüfung (ca. 25 Minuten) Oral exam (about 25 minutes),"Präsentation mit Tafel und Beamer Presentation with a projector, blackboard","Mark Cartwright. Fourier Methods for mathematicians, scien- tist and engineers, 1990.  Dieter Müller-Wichards. Transformationen und Signale, 1999. Gitta Kutyniok, Demetrio Labate. Shearlets: Multiscale Ana lysis for Multivariate Data, 2012.",MSc Informatik/ Computer Science
6044,Multimedia Retrieval,455383,Jedes Wintersemester Every winter semester,1 Semester,Scherzinger,Skopal,Englisch English,Modulgruppe „Inf Komm“ Focus „Inf Komm“,2 V + 2Ü,60 Std. Präsenz + 45 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 45 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Programmierkenntnisse, Grundlagen von Datenbanken- und Informationssystemen(D BI SI+I I), Grundlagender Program- mierung Programming skills fundamentals of databases and informati on systems (D BI S I + I I)",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Objectives The module introduces to models and techniques of multime- dia retrieval.  Course Outcomes By the end of the course, students will be able to recognize manyfacetsofcontent-basedmultimediaretrievaltechniques. They also get a practical experience in a selected subdomain by means of student project. Knowledge & Understanding General knowledge of content-based multimedia retrieval. Detailed pipeline – use case, domain knowledge, feature extrac tion, retrieval model, indexing, visualization, user feedback, evaluation. Skills & Abilities a) Navigate in different platforms, interfaces, H CI means and use cases for multimedia retrieval. b) Choose a suitable model for the media type and domain; c) Formulate search intent (query, browsing, filtering); d) Use suitable indexing structures for efficient retrieval.","1) Web platforms for retrieval and sharing of multimedia con- tent. 2) Web interfaces, modalities, and the quality of retrieval. 3) Text-based and bag-of-words models. 4) Similarity search model - models and queries. 5) Similarity search model - popular similarity functions. 6) Global image features - analytic models. 7) Global image features - deep learning. 8) Local image features. 9) Multi-modal retrieval. 10) Video retrieval techniques. 11) Feature extraction from audio, music and melody. 12) Principles of metric indexing. 13) Metric access methods. 14) Approximate search methods.",Report and presentation at defence of an individual software project. Grade will be based on this individual project.,"The course consists of a series of lectures, interleaved with consultations to student projects. The lectures span a varietyof multimedia retrieval topics, while the projects aim to fo cus students more deeply to a particular topic by means of a hands-on experience (project implementation). Slides (P DF), videos recorded for offline use.","Ricardo Baeza-Yates, Berthier Ribeiro-Neto, Modern Informa- tion Retrieval: The Concepts and Technology behind Search, Addison-Wesley Professional, 2011. Nicolas Hervé, Nozha Boujemaa: ”Image annotation: which approach for realistic databases? ”, A CM International Confe rence on Image and Video Retrieval, 2007. B. S. Manjunath, Philippe Salembier, Thomas Sikora, Introduction to M PE G-7: Multimedia Content Description Inter face, Wiley, 2002. Ritendra Datta, Dhiraj Joshi, Jia Li, James Z. Wang, Ïmage Retrieval:Ideas, Influences, and Trendsofthe New Age! ,A CM Computing Surveys 40: 1, 2008. K. Selçuk Candan, Maria Luisa Sapino, Data Management for Multimedia Retrieval, Cambridge University Press, 2010. Zezula, P, Amato, G. , Dohnal, V. , Batko, M. ”Similarity Search: The Metric Space Approach”. Springer, 2005. I SB N 0387291466.",MSc Informatik/ Computer Science
6053,ITS-Praktikum,405235,Unregelmäßig Irregular,1 Semester,"Sauer, Forster-Heinlein, Wirth","Sauer, Forster-Heinlein, Wirth",Englisch English,Modulgruppe „I TS“ Focus „I TS“,"6 S Participation by all group members is required for group mee- tings, colloquies with the project’s supervisor(s), and specific lab work according to the project requirements",30 hours introduction to design and development tools + 30 Workload hours project meetings + 30 hours analysis and specification + 90 hours design and implementation + 45 hours validation+ 15 hours colloquium and preparation + 15 hours final pre sentations and preparation + 15 hours written report Total: 270 hours,ECTS/Credits: 9,Keine None,Machine learning and context recognition,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge  Students familiarise and practice project management skills. Students learn about methodologies relevant to the field of intelligent technical systems, as well as procedures, tools, and evaluation strategies. Knowledge on fundamental and appliedaspects of intelligent technical systems, including system de sign, software development, and signal analysis are extended. Students continue to acquire experience in team work. Kompetenzen / Competencies Students master practical problem settings in the develop ment of intelligent technical systems. Students can continue to acquire specific skills in design and analysis of solutions that are relevant to the broader field of the project. Project management strategies under limited time constraints can be successfully applied and effective solutions are found. Social competences are deepened, including team management and conflict resolution skills.","A realistic, advanced engineering project within the scope of intelligent technical systems will be systematically analysed and implemented. The project objective may be to develop a system or service. State-of-the-art methods and tools will be utilised according to scientific and/or industrial practice andaccording to the requirements of the project. Due to the di versity of the field of intelligent technical systems, methodsand tools will be chosen specifically for each project. A pro ject may contain several workpackages. The project shall be realised by groups of 2-4 students. Pro ject management and technical realisation will be carried out by the student group. Work effort and relevance of individualactivities depend on the specific project setting. Initially, a re quirement analysis shall be performed and the project shall bestructured into workpackages. Each workpackage shall con sist of several activities for which effort estimations are made. Adequate deliverables and milestones shall be described for each workpackage. The student group shall use a suitable development process, e. g. V-model. The following phases shall be identified for each workpackage: 1. Analysis Analysis and detailed description of requirements, conside ringfundamentalprinciplesofeffectiveness, completeness, and consistency. Both, functionalandnon-functionalrequirements shall be derived. A system or service model shall be devised and a suitable operating environment defined using adequate methods and tools. 2. Design  A coarse design of the system or service shall be derived that addressesallrequirementsderivedbefore. Basedonthecoarse design, adetaileddesignspecificationwillbederived. Suitable methodsandtoolsaccordingtotheprojectfieldshallbeused. Used procedures shall be documented. 3. Implementation The actual implementation considers the practical realisati on of the specified system or service, which may consist ofsoftware and hardware components. By partitioning large im plementations into sub-activities, entities are obtained that group members can complete. 4. Validation The implementation shall be validated based on the specifiedrequirements. Achieved functional and non-functional requi rements shall be compared to the implementation and anydeviations shall be analysed and documented. A detailed do cumentation of the implementation shall be prepared. Duringtheworkpackagerealisation, effortshallbecontinuous ly monitored and deviations recorded. Each workpackage is concluded by a colloquium, where achievements are presented and discussed with the project’s supervisor(s). The studentgroup shall prepare a presentation of the work for the collo quium and provide relevant work artefacts, e. g. documented and operational source code, prototypes, etc. The student group shall organise responsibilities within the project tasks themselves. However each group member shall take the role of a workpackage responsible at least once. Theworkpackage responsible shall assign tasks to all group members and monitor the workpackage implementation. The stu dent group will be supported by regular meetings with the project’s superior(s). The frequency of meetings may vary and shall be chosen adequately to the project phase.","Final technical report (about 25 pages) describing the work performed, including chapters on: introduction/problem(s)addressed, state-of-the-art/related work, system architec ture/overall methodology, system implementation, evaluation methodology, results, discussion, andconclusion/furtherwork. The final report should be supplied with adequate deliverables according to the project workpackages and to fully reproduce all performed work, e. g. documented and operational sourcecode, design documents, physical prototypes, or demonstrati on files. The final presentation (about 20 min talk) should clearly des cribe the problem addressed, the approach and methodology, the results, and further work. If applicable, a system demons  tration should also be included in the final presentation. Thepresentations may be held together with other groups to sup port discussions.","Präsentation mit Beamer, Gruppenarbeit, Wiki Presentations with projector, group work, wiki",Will be announced in the lecture. Literature will be selected and announced according to the requirements of individual projects.,MSc Informatik/ Computer Science
6056,Perkolation auf Graphen,451018,Unregelmäßig Irregular,1 Semester,Müller-Gronbach,Gilch,Deutsch German,"Modulgruppe „Alg Math“, Modulgruppe „I TS“ Focus „Alg Math“, Focus „I TS“",2 V + 1Ü,"30 + 15 Stunden, 60 + 45 Eigenarbeitszeit Workload 30+15hours, 60+45hoursexercisesandindependentstudy and exam preparation",ECTS/Credits: 5,Keine None,"Analysis I, Lineare Algebra I, Einführung in die Stochastik Analysis I, Linear Algebra I, Introduction to Stochastics",Verwendbarkeit in weiteren Bachelor Mathematik Studiengängen Bachelor Mathematics,"Die Studierenden erhalten einen Überblick über die Theorie von Perkolation auf Graphen. Dies beinhaltet die Vermitt-lung der grundlegenden Konzepte der Perkolationstheorie so wie die fundamentalen Ergebnisse auf dem Zahlengitter undquasi-transitiven Graphen. Den Studierendenwirddas Zusammenspielverschiedenermathematischer Bereiche(insbesondere der Wahrscheinlichkeitstheorie, Graphentheorie und Alge  bra) demonstriert. The students shall get an overview on the theory of perco lation on graphs. They shall acquire the basic concepts ofpercolation theory including the fundamental results of per colation on the integer lattice and on quasi-transitive graphs. Furthermore, the interplay of different mathematical fields (in particular, Probability Theory, Graph Theory, and Algebra)will be demonstrated.",• Grundlagen der Perkolationstheorie • Studium der kritischen Perkolationswahrscheinlichkeit • Abschätzungen für kritische Wahrscheinlichkeiten • Erwartete Cluster-Größen • Perkolation auf dem d-dimensionalen Zahlengitter • Anzahl der unendlichen Cluster • Perkolation auf quasi-transitiven Graphen — • Basics of percolation theory • Study of the critical percolation probability • Estimates for the critical probabilities • Expected cluster size • Percolation on the d-dimensional interger lattice • Number of infinite clusters • Percolation on quasi-transitive graphs,90 minütige schriftliche Prüfung oder mündliche Prüfung (ca. 30 Minuten); die genaue Prüfungsart wird zu Beginn des Se- mesters bekannt gegeben90 minute written or 30 minute oral examination. The preci se mode of assessment will be announced at the start of the semester.,"Tafel, Beamer Blackboard, Beamer","G. Grimmett: „Percolation“, Springer, 1999 R. Lyons and Y. Peres: „Probability on Trees and Networks“, Cambridge, 2016",MSc Informatik/ Computer Science
6060,Computational Social Science Lab,455391,Unregelmäßig Irregular,1 Semester,Lemmerich,Lemmerich,Englisch English,Modulgruppe „Inf Komm“ Focus „Inf Komm“,4Ü,60 Std. Präsenz + 120 Std. Vor- und Nachbearbeitung Workload 60 contact hours + 120 hrs independent study and implemen tation,ECTS/Credits: 6,Keine None,"Python Programming Language, knowledge of basic data analysis as taught in Web Science, Visual Analytics",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Students will learn about state-of-the-art problems, methods and tools to study digital trace data on individuals and the society. Fähigkeiten / Abilities Students acquire the ability to develop and formulate research questions in Computational Social Science, explore respective  datasets, apply data science and machine learning methods and communicate results. Students will be able to select and apply suitable software libraries for these steps. Kompetenzen / Competencies Students will learn to perform independent case studies on societal and behavioral data.","Computational Social Science refers to a relatively new rese- arch area that aims to study social phenonema with computa- tional means, primarily with methods from Data Science and Machine Learning. In this practical course, students will workin small teams on “social” datasets on individuals and the so ciety such as review data, forums, social media posts, social network data or collections of new articles. On these datasets, student groups will perform in teams andunder guidance all necessary steps for a case study in compu tational social sciences: 1. Data collection, exploration and quality assessment of the dataset to be analyzed 2. Formation of an appropriate research question 3. Selection of appropriate analysis methods 4. Data (pre-)processing and modelling 5. Critical assessment of the obtained insights 6. Communication of the results with a blog post and/or a scientific report Results of the individual steps will be presented to the othercourse participants in small presentations throughout the se mester. At the end of the semester, project results will be summarized in final presentations and a written report.","Portfolio exam consisting of code with documentation, a writ- ten report on the outcome of the project (max. 10 pages) and presentations given over the course of the semester. Within the team presentations, each participant showcases her/his own personal contribution to the project. Additionally, participants declare in written form their individual contribu tions to the project design, code and report. Details on the assessment including count and length of the presentations will be announced at the start of the semester.","Präsentation mit Beamer, Whiteboard Presentation with beamer, whiteboard","Lazer, David, etal. Lifeinthenetwork:thecomingageofcom- putational social science. Science (New York, N Y) 323. 5915 (2009): 721. Additional project specific literature will be announced at the  beginning of the semester.",MSc Informatik/ Computer Science
6073,Stochastische Prozesse,405193,Unregelmäßig Irregular,1 Semester,Rudolf,Rudolf,Deutsch oder Englisch German or English,Modulgruppe „Alg Math“ Focus „Alg Math“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Wahrscheinlichkeitstheorie, Einführung in die Stochastik, Maß- und Integrationstheorie, Lineare Algebra I+I I, Analysis I+I I Probability theory, Introduction to stochastics, Measure and integration theory, Linear Algebra I+I I, Analysis I+I I",Verwendbarkeit in weiteren Bachelor Mathematik Studiengängen Bachelor Mathematics,"Die Studierendenlernengrundlegendestochastische Prozesse, deren Eigenschaften, Modellierungsaspekte sowie deren ver- schiedene Verhaltenkennen. Siesindinder Lagediese Prozes se einzuordnen, mit ihnen umfassend theoretisch zu arbeiten sowie Aussagen über deren Charakteristika zu beweisen. — Thestudentsacquireasystematicunderstandingofthetheory of stochastic processes, their properties and modeling aspects aswellastheirdifferentbehaviors. Theyareabletoclassfiythe processes, canworkwiththemtheoreticallyandcanformulate as well as prove statements about their characteristics.",Folgenden Inhalte werden besprochen: • Poisson Prozesse • Martingale (zeitdiskret und/oder zeitkontinuierlich)• Markov Prozesse(Brownsche Bewegungund/oder Mar kovketten auf allgemeinen Zustandsräumen) • Stoppzeiten und starke Markoveigenschaft • Simulationsalgorithmen mit Konvergenzeigenschaften — The following content will be covered: • Poisson processes • Martingales (time-discrete and/or time-continuous) • Markov processes (Brownian motion and/or Markov chains on continuous state spaces) • stopping times and strong Markov property • simulation of processes with convergence properties,Entweder 90-minütige Klausur oder mündliche Prüfung (ca. 30 Minuten); die genaue Prüfungsart wird zu Beginn des Se- mesters bekannt gegeben. Either written exam (90 minutes) or oral exam (about 30 mi nutes); the precise mode of assessment will be announced at the start of the semester.,Präsentationmit Tafelund/oder Beamerund/oderanderevir- tuelle Formate Presentation with a projector or blackboard or other virtual formats,"D. Meintrup, S. Schäffler, Stochastik, Springer, 2005. A. Klenke, Probabilitytheory:A Comprehensive Course, Sprin- ger, 2014. R. Douc, E. Moulines, P. Priouret, P. Soulier, Markov chains, Springer 2018",MSc Informatik/ Computer Science
6091,Sicherheitsprozessor Design,455392,Jedes Sommersemester Every summer semester,1 Semester,Kavun,Kavun,Englisch English,Modulgruppe „I T-Sec Rel“ Focus „I T-Sec Rel“,2 V + 1Ü,45 Std. Präsenz + 50 Std. Übungen + 55 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 45 contact hours + 50 hrs exercises + 55 hrs independent study and exam preparation,ECTS/Credits: 5,Keine None,"Digitales Design, H DL, Kryptographie Digital Design, H DL, Cryptography",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden lernen den theoretischen und praktischen Hintergrund für den Entwurf eines programmierbaren krypto grafischen Prozessors kennen. —  Studentsgettoknowthetheoreticalandpracticalbackground to design a programmable cryptographic processor. Fähigkeiten / Abilities Die Studierendenübendas Designeineseinfachengespeicherten Programmcomputers mit kryptografischen Verarbeitungs funktionen, die Implementierung eines solchen Prozessors mit Verilog-H DL sowie fortgeschrittene Probleme wie Pipelining, Caching, gemeinsame Nutzungvon Ressourcenund Retiming. —Studentspracticethedesignofabasicstoredprogramcomputer with cryptographic processing capabilities, the implemen tation of such a processor using Verilog-H DL and advanced issues such as pipelining, caching, resource sharing, retiming. Kompetenzen / Competencies Die Studierenden lernen Verständnis der Grundprinzipien des digitalen Designs und der Rechnerarchitektur, erlangen einigepraktische Kenntnissedarüber, wiediese Prinzipienund Implementierungstechnologien zusammen mit kryptografischen Algorithmen verwendet werden können, um eine bessere Daten und Systemsicherheit zu gewährleisten. —Thestudentsgetanunderstandingofthefundamentalprincip les of digital design and computer architecture and get some practical knowledge of how these principles and implementingtechnologies can be used together with cryptographic algo rithms to ensure better data and system security.",Das Modul beinhaltet die Themen • Digitales Systemdesign und Tools • Grundlegende Rechnerorganisation • Befehlsformate und Befehlssätze • A LU Design • Datenpfad-Design• Steuerungsdesign: Festverdrahtet und mikroprogram miert • Pipelining • Speichersysteme • Komplexe arithmetische Einheit und kryptografisches Co-Prozessor-Design • Befehlssatzerweiterungen für die Kryptographie — The module includes the topics • Digital system design and tools • Basic computer organization • Instruction formats and instruction sets • A LU design  • Datapath design • Control design: Hardwired and microprogrammed • Pipelining • Memory systems • Complexarithmeticunitandcryptographicco-processor design • Instruction set extensions for cryptography,Portfolio-Prüfung in englischer Sprache. Ein Abschlussprojekt und der entsprechende Bericht sollten eingereicht werden. Portfolio Exam in English language. A final project and its corresponding report should be submitted.,"Präsentation und Beamer, Tafel Presentation and projector, blackboard",angesagt. Online resources will be provided and specific readings will be announced during the lectures and exercise sessions.,MSc Informatik/ Computer Science
6093,Implementierung von kryptographischen Verfahren,422170,Jedes Wintersemester Every winter semester,1 Semester,Kavun,Kavun,Englisch English,Modulgruppe „I T-Sec Rl“ Focus „I T-Sec Rl“,2 V + 1Ü,45 Std. Präsenz + 50 Std. Übungen + 55 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 45 contact hours + 50 hrs exercises + 55 hrs independent study and exam preparation,ECTS/Credits: 5,Keine None,"I T-Sicherheit, Kryptographie, Programmierung I T Security, Cryptography, Programming",Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden lernen • verschiedene kryptographische Implementierungen in der Sicherheitslandschaft kennen, • die potenziellen Schwachstellen kennen, die mit der  praktischen Umsetzung verbunden sind, • die Vor- und Nachteile verschiedener Metriken in der Kryptographie kennen, • die Effizienzmetriken und potenziellen Risiken bei der Implementierung von Sicherheitsanwendungen zu ver stehen. — Students get to know • different cryptographic implementations in the security landscape, • the potential vulnerabilities associated with real-world implementations, • the advantages and disadvantages different metrics in cryptography, • understand the efficiency metrics and potential risks in the implementations of security applications. Fähigkeiten / Abilities Die Studierenden üben • ein detailliertes Verständnis für praxisrelevante Fragen im Zusammenhang mit Sicherheit und Kryptographie, • die Fähigkeit, Material präzise und dennoch umfassend zu präsentieren und dieses Material angemessen auf das betreffende Publikum auszurichten. — Students practice• a detailed understanding of practice relevant issues re lating to security and cryptography, • the ability to present material in a concise yet compre hensivemannerandtotargetthatmaterialappropriately to the audience in question. Kompetenzen / Competencies Die Studierenden lernen • die verschiedenen Ansätze bei der Implementierung von Kryptographie und deren Auswirkungen auf Effizienz und Robustheit kennen, • diegrundlegenden Prinzipienvonkryptographischen Im plementierungen kennen, • einigepraktische Kenntnissedarübererlangen, wiediese Prinzipien und Implementierungstechnologien verwendet werden können, um eine bessere Daten- und Sys temsicherheit zu gewährleisten. — The students• gainawarenessonthedifferentapproachesincryptogra phy implementations and their effect on efficiency and  robustness, • get an understanding of the fundamental principles of cryptographic implementations, • get some practical knowledge of how these principles and implementing technologies can be used to ensure better data and system security.","Dieses Modul führt in spezifische Themen der Kryptographie und deren effiziente und sichere Implementierung ein. Insbe-sondere konzentriert sich dieses Modul auf Ansätze und Techniken zur Implementierung sicherer und effizienter kryptographischer Anwendungen. Das Modul erfordert ein Verständ nis der mathematischen Konzepte (z. B. Modulo-Arithmetik, komplexe Zahlen, Gruppentheorie) und Logik (Mengenlehre, Prädikatenlogik, natürliche Deduktion). Darüber hinaus erfor dert das Modul ein Verständnis einer Programmiersprache (z. B. Python, C) und grundlegende Kenntnisse in der Softwareentwicklung. EinigeÜbungenerfordern Linuxund Shell Grund lagen im Besonderen. Das Modul beinhaltet die Themen • Kryptografische Implementierungen in Software und Hardware • Leichtgewichtige Kryptographie• Kryptographie mit niedriger Latenzzeit• White-box Kryptographie • R SA-Implementierungstechniken • Angriffe auf Krypto • Physikalische Angriffe und Gegenmaßnahmen • Neue Themen im Bereich Sicherheit und Kryptographie — This module introduces specific topics in cryptography and their efficient and secure implementation. In particular, thismodule focuses on approaches and techniques for imple menting secure and efficient cryptographic applications. The module requires an understanding of mathematical concepts (e. g. ,modulo-arithmetic, complexnumbers, grouptheory)andlogic (set theory, predicate logic, natural deduction). Moreo ver, the module requires an understanding of a programming language (e. g. , Python, C) and basic software engineering knowledge. Some exercises may require a basic command of Linux in general and the command line (shell) in particular. The module includes the topics• Cryptographicimplementationsinsoftwareandhardwa re • Lightweight cryptography • Low-latency cryptography  • White-box cryptography • R SA implementation techniques • Attacking crypto • Physical attacks and countermeasures • Emerging topics in security and cryptography","90 Minuten schriftliche Klausur, oder Portfolio-Prüfung in englischer Sprache(Ein Abschlussprojektundderentsprechen- de Bericht sollten eingereicht werden), oder ca. 20 Minuten mündliche Prüfung in englischer Sprache und je nach Anzahlder Hörer; die genaue Prüfungsart wird zu Beginn des Semes ters bekannt gegeben. Written exam (90 minutes), or Portfolio Exam in English lan guage. (A final project and its corresponding report should be submitted), or oral exam in English according to the numberof participants (about 20 minutes); the precise mode of as sessment will be announced at the start of the semester.","Präsentation und Beamer, Tafel Presentation and projector, blackboard",angesagt. Online resources will be provided and specific readings will be announced during the lectures and exercise sessions.,MSc Informatik/ Computer Science
6132,Random Graphs,422140,Unregelmäßig Irregular,1 Semester,Glock,Glock,Englisch English,Modulgruppe „Alg Math“ Focus „Alg Math“,2 V + 2Ü,"30+30 Std Präsenz, 90 Std Nacharbeitungszeit Workload 30+30 contact hours, 90 hours independent study",ECTS/Credits: 6,Keine None,"Graphentheorie, Einführung in die Stochastik Graph Theory, Introduction to Stochastics",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Thestudentsgetanoverviewoverthebinomialrandomgraph model. Theywillbeabletoprovemajorresultsandapplythem to specific problems. In addition, they will be able to illustrate one topic of Random graphs in a short essay.",The course covers the following topics: • The binomial random graph model • Concentration inequalities  • Sharp and coarse thresholds • Phase transition • Small subgraphs • Chromatic number • Spanning subgraphs,"Examination in two parts: Part 1 (80%): Oralexam(about30minutes)orwrittenexam(120minutes); the precise mode of assessment will be announced at the start of the semester. Part 2 (20%): Written work (up to 10 pages) on a subject related to random graphs. To pass the examination, both parts have to be passed.",Tafel Blackboard,"Janson, Luczak, Rucinski: Random graphs, Wiley Frieze, Karonski: Introduction to random graphs, Cambridge University Press",MSc Informatik/ Computer Science
6145,Fortgeschrittene Modelltheorie,455470,Jedes Sommersemester Every summer semester,1 Semester,"Kaiser, Müller","Kaiser, Müller",Englisch English,Modulgruppe „Alg Math“ Focus „Alg Math“,2 V + 2Ü,30 +30 Std. Präsenz + 60 + 60 Std. Eigenarbeitszeit Workload 30 + 30 contact hours + 60 + 60 hrs independent study,ECTS/Credits: 6,Keine None,"Mathematische Logik, Modelltheorie, Algebra Mathematical Logic, Model Theory, Algebra",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,Working knowledge of • abstract properties of axiom systems to analyze their type spaces and the class of their models • a general concept of dimension • the theory of uncountably categorical theories • applications to algebra,"Vector spaces over a given field are determined (up to isomor- phism)bytheirdimension. Similarly, algebraicallyclosedfieldswith a given characteristic are determined by their transcen dence degree. In particular, these theories have exactly onemodel in each uncountable cardinality. What do these theo ries have in common that explains this similar behavior? The course gives an introduction to stability theory. In particular, it introduces a general notion of dimension. The central goal of the course is to prove Morley’s theorem: if a theory has exactly one model of some uncountable cardinality, then this holds for all uncountable cardinalities.","120-minütige Klausur doer mündliche Prüfung (ca. 30 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben120-minute written or 30-minute oral examination, the preci se mode of assessment will be announced at the start of the semester.",Tafel Blackboard,"W. Hodges: A shorter model theory. Cambridge University Press, 1997. D. Marker: Model Theory: An introduction. Springer, 2002. K. Tent, M. Ziegler: A course in Model Theory. Cambridge Uni versity Press, 2002",MSc Informatik/ Computer Science
6200,Kamerakalibrierung und 3D-Rekonstruktion,455395,Jedes Jahr Every year,1 Semester,Hanning,Hanning,Deutsch German,Modulgruppe „Allg Ber“ Focus „Allg Ber“,2 V,30 Std. Präsenz + 60 Std. Nachbearbeitung des Vorlesungs- Workload stoffs und Prüfungsvorbereitung30 contact hrs. + 60 hrs. lecture follow-up and exam prepa ration,ECTS/Credits: 3,Keine None,"Analysis I + I I, Lineare Algebra I + I I oder äquivalent Analysis I + I I, Linear Algebra I + I I or equivalent",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,"Kenntnisse / Skills/Knowledge Die Studierenden kennen die Parameter des Lochkameramo-dells mit Verzeichnung und kennen Vorbedingungen und Verfahren diese aus Bilddaten zu bestimmen. Des Weiteren ken nen sie die Grundaussagen zur 3 D-Rekonstruktion aus Bildern  von Laserlichtschnittsensoren, sowie aus mehreren Ansichten mit kalibrierten und unkalibrierten Kameras. Fähigkeiten / Abilities Die Studierenden können die Parameter der Kameraabbildung bestimmen und 3 D-Rekonstruktionsprobleme lösen. Kompetenzen / Competencies Die Studierendenkönnen Algorithmenzur Kamerakalibrierung und 3 D-Rekonstruktion implementieren, bewerten und sind in der Lage die Genauigkeitsgrenzen abzuschätzen.",Die projektive Vervollständigung des R2 Anwendung: Kalibrierung eines Laserlichtschnittsensors Die projektive Vervollständigung des C2 und C3 Das Lochkameramodell mit Verzeichnungen Projektive Formulierung des Lochkameramodell Kamerakalibrierung• Herleitung notwendiger Bedingungen aus der projekti ven Formulierung des Lochkameramodells • Fehlerfunktiondesnicht-linearen Optimierungsproblems 3 D-Rekonstruktion • Monokulare 3 D-Rekonstruktion • Das Stereokameramodell • Epipolarbedingungen • 3 D-Rekonstruktion aus Stereobilddaten,90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 90-minute written examination or 20-minute oral examinati on. The precise mode of assessment will be announced at the start of the semester.,Präsentation und Beamer Presentation and projector,"Skript Hartley, Zisserman, „Multiple View Geometry“",MSc Informatik/ Computer Science
6217,Stochastische Prozesse auf Graphen und Gruppen,455490,Unregelmäßig Irregular,1 Semester,Müller-Gronbach,Gilch,Deutsch oder Englisch German or English,Modulgruppe „Alg Math“ Focus „Alg Math“,4 V + 2Ü,"60+30 Std. Präsenz, 120+60 Std. Eigenarbeitszeit Workload 60+30 contact hours, 120+60 hours independent study",ECTS/Credits: 9,Keine None,"Lineare Algebra I, Analysis I, Einführung in die Stochastik Linear Algebra I, Analysis I, Introduction to Stochastics",Verwendbarkeit in weiteren Master Computational Mathematics Studiengängen,Die Studierenden erhalten eine Einführung in die mathema- tischen Grundlagen wichtiger stochastischer Prozesse. Die vorgestellten Zufallsprozesse werden insbesondere hinsichtlich auftretender Phänomeneundihresasymptotischen Verhaltens untersucht. — Thestudentsshallacquirethebasicmathematicalconceptsof important classes of stochastic processes. Different phenome na of the presented random processes are discussed and the asymptotic behavior of these processes are studied.,"In dieser Vorlesung werden die mathematischen Grundlagen einiger wichtiger stochastischer Prozesse behandelt:• Perkolation auf Graphen (Existenz und Anzahl unendli cher Cluster) • Galton-Watson Prozesse(Aussterbewarscheinlichkeiten) • Entropie von stationären stochastischen Prozessen (Shannon-Mc Millan-Breiman Theorem)• Irrfahrten auf Gruppen und deren asymptotische Eigenschaften(Geschwindigkeit, Entropie, Subadditiver Ergo densatz) • Verzweigende Irrfahrten auf Cayley-Graphen —This lecture covers the mathematical foundations of some im portant stochastic processes, namely: • Percolation on graphs (existence and number of infinite clusters) • Galton-Watson processes (extinction probabilities)• Entropy of stationary stochastic processes (Shannon Mc Millan-Breiman theorem)• Random walks on groups and their asymptotic proper ties (speed, entropy, subadditive ergodic theorem) • Branching random walks on Cayley graphs",120minütigeschriftliche Prüfungodermündliche Prüfung(ca. 30 Minuten); die genaue Prüfungsart wird zu Beginn des Se- mesters bekannt gegeben. 120 minute written or 30-minute oral examination. The preci se mode of assessment will be announced at the start of the semester.,"Präsentation und Beamer, Tafel Presentation and projector, blackboard","T. Cover & J. Thomas: Elements of Information Theory, Wi- ley, 2019. R. Durett: „Probability. Theory and Examples. (Fourth Editi on)“, Cambridge University Press, 2010. G. Grimmett: Percolation, Springer, 1999. W. Woess: Random Walks on Graphs and Groups, Cambridge University Press, 2000. W. Woess:Denumerable Markov Chains, European Math. So ciety, 2009.",MSc Informatik/ Computer Science
6218,Maß- und Integrationstheorie,455510,Unregelmäßig Irregular,1 Semester,"Müller-Gronbach, Prochno, Rudolf","Müller-Gronbach, Prochno, Rudolf",Deutsch German,Modulgruppe „Alg Math“ Focus „Alg Math“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Analysis I + I I, Lineare Algebra I + I I, Einführung in die Sto- chastik Analysis I + I I, Linear Algebra I + I I, Introduction to Stocha stic",Verwendbarkeit in weiteren Bachelor Mathematik Studiengängen,Kenntnisse / Skills/Knowledge Verständnis der Grundkonzepte und -techniken sowie der zen- tralen Ergebnisse der Maß- und Integrationstheorie.  Fähigkeiten / Abilities Anwendung grundlegender Modellierungs- und Beweisverfah ren der Maß- und Integrationstheorie.,"e, etwa • Hausdorff-Maße, • Integration auf Mannigfaltigkeiten, • Integralsätze von Stokes und Gauß.",120-minütige Klausur oder mündliche Prüfung (ca. 30 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 120-minute written examination or oral examination (approx30 minutes). The precise mode of assessment will be announ ced at the start of the semester.,"Präsentation, Beamer, Tafel Presentation, Beamer, Blackboard",Bekanntgabedurch Dozenten/Announcedduringthelecture,MSc Informatik/ Computer Science
6221,Industrial Prototyping for Makers,455540,Unregelmäßig Irregular,1 Semester,"Fraser, Kosch","Fraser, Kosch",Deutsch oder Englisch German or English,"Modulgruppe „Prog Soft“, Modulgruppe „Inf Komm“ Focus „Prog Soft“, Focus „Inf Komm“",4 P,60 Std. Präsenz + 120 Std. Vor- und Nachbereitung Workload 60 contact hours + 120 hrs preparation and follow-up,ECTS/Credits: 6,Keine None,- -,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Students acquire the ability to develop a technical or software prototype from inception to requirements analysis to product review. They will obtain methodological knowledge. Fähigkeiten / Abilities Studentsacquiretheskillstoimplementcomplexsoftwaresys temsandtechnicalprototypes. Theywilldeveloptheabilityto use appropriate software libraries, software and hardware tools  to do so. Kompetenzen / Competencies Studentsacquiretheorganisationalandtechnicalskillstocon ceptualise, plan, and implement prototype systems.","Students will work in groups on a given problem descripti- on originating from the industrial maker scene (for example building intelligent systems that analyse the environment and reactaccordingly), ordatasets(forexampleimagesofadditive manufacturing goods to classify as defective or not). Students willproduceaprototypesolvingthegivenproblemdescription, covering possible topics: • Software prototyping • Programming embeded systems • Marketing • Seonsor Systems • Robotics • Artificial Intelligence Finally, the results will be reported in a technical report.","Portfolio consisting of source code, a written technical re- port on the outcome of the project and up to four presenta- tions. The overall grade results from the overall assessment ofthe performance (as a portfolio). The exact mode of assess ment will be announced at the beginning of the semester.","Projector, blackboard",Own lecture notes and selected publications. Literature will be announced depending on the concrete topics.,MSc Informatik/ Computer Science
