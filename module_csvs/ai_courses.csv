Course Code,Course Title,PN Number,Häufigkeit des Modulangebots/Frequency of course offering,Moduldauer/Module duration,Modulverantwortliche(r)/Module convenor,Dozent(in)/Lecturer,Sprache/Language of instruction,Zuordnung zum Curriculum/Curriculum,Lehrform/SWS/Contact hours,Arbeitsaufwand/Workload,ECTS/Credits,Voraussetzungen nach Prüfungsordnung/Required prerequisites as per the study and examination regulations,Empfohlene Vorkenntnisse/Recommended skills,Verwendbarkeit in weiteren Studiengängen/Applicability for other courses,Angestrebte Lernergebnisse/Learning outcomes,Inhalt/Course content,Studien-/Prüfungsleistungen/Assessment,Medienformen/Media used,Literatur/Reading list,Faculty
5600,Effiziente Algorithmen,455366,Unregelmäßig Irregular,1 Semester,"Rutter, Sudholt","Rutter, Sudholt",Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,3 V + 2Ü,60 Std. Präsenz + 45 Std. Übungen + 105 Std. Nachberei- Workload tung der Vorlesung und Prüfungsvorbereitung 60 contact hours + 45 hrs exercises + 105 hrs independent study and exam preparation,ECTS/Credits: 7,Keine None,"Algorithmen und Datenstrukturen, Theoretische Informatik I Algorithms and Data Structures, Theoretical Computer Science I","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden erwerben systematisches Verständnis algo-rithmischer Entwurfs- und Analysetechniken. Sie kennen weiterführende Algorithmen und Datenstrukturen und deren Ei  genschaften. —The students acquire a systematic understanding of algorithmic design and analysis principles. They know advanced algo rithms and data structures and their properties. Fähigkeiten / Abilities Die Studierenden besitzen die Fähigkeit, algorithmische Pro bleme in verschiedenen Anwendungsgebieten zu identifizierenundzuformalisieren. Die Studierendenkönnenunbekannte Al gorithmen eigenständig verstehen, sie anwenden, ihre Laufzeitbestimmen, sie beurteilen und auf verwandte Problemstellun gen übertragen. — The students have the ability to identify algorithmic problems in different application areas and to formalize them. They can understandandapplynewalgorithmsontheirown. Moreover, they can analyze their running time, evaluate them and adapt them to related problems. Kompetenzen / Competencies Die Studierenden besitzen die Kompetenz für gegebene Pro blemstellungen geeignete Entwurfs- und Analysetechnikenauszuwählenundsiezunutzenumeigene Algorithmenzuentwerfen, diese zu analysieren und ihre Eigenschaften nachzu weisen. —The students have the competence to select appropriate de sign and analysis techniques for given problems. They can further apply them to develop and analyze new algorithms.","Dieses Modulvertieftdie Grundlagender Algorithmik. Eswer- den fortgeschrittenen Analyse- und Entwurfstechniken für Al- gorithmen und Datenstrukturen vorgestellt, (z. B. amortisierte Analyse, dynamische Programmierung, Greedy, Divide&Conquer, Modellierungmit LPs)undderen Anwendungankonkreten Problemstellungen illustriert (z. B. Union-Find, Flussmethoden, Schnitte in Graphen, Spannbäume, Matchings). Dar überhinauswerden Technikenzum Umgangmit NP-schweren Problemen vermittelt. —This module deepens the fundamentals of Algorithms. Advanced design and analysis techniques for algorithms are presen ted (e. g. , amortized analysis, dynamics programming, greedy, divide & conquer, Modeling with L Ps) and their application is demonstrated for concrete examples (e. g. , union-find, cuts  and flows in graphs, spanning trees, matchings). Additionally, techniques for handling N P-hard problems are presented.","Zwei Teilleistungen: Teilleistung 1 (80%):Mündliche Prüfung(ca. 25 Minuten)oder Klausur(ca. 90 Mi nuten); die genaue Prüfungsart wird zu Beginn des Semestersdurch Aushang und auf den Internetseiten der Fakultät be kannt gegeben. Teilleistung 2 (20%):Ausarbeitung (bis zu 10 Seiten) über ein Thema der Algorith mik Zum Bestehen des Moduls müssen beide Teilleistungen be standen werden. — Examination in two parts: Part 1 (80%): Oral exam (about 25 minuts) or written exam (90 minutes); the precise mode of assessment will be announced at the start of the semester. Part 2 (20%): Written work (up to 10 pages) on an Algorithms subject. To pass the examination, both parts have to be passed.","Präsentation mit Tafel und Beamer Presentation with a projector, blackboard","Cormen, Leiserson, Rivest, Stein: Introduction to Algorithms Korte, Vygen: Combinatorial Optimization: Theory and Algo- rithms",MSc AI Engineering and MSc Informatik/ Computer Science
5670,Logik für Informatiker,455357,Mindestens jedes 2. Sommersemester At least every other summer semester,1 Semester,Kreuzer,Kreuzer,Englisch English,Modulgruppe „A EM M“ Focus area „A EM M“,3 V + 2Ü,75 Std. Präsenz + 65 Std. Übungen + 70 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 75 contact hours + 65 hrs exercises + 70 hrs independent study and exam preparation,ECTS/Credits: 7,Keine None,Lineare Algebra I Linear Algebra I,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden kennen den Aufbau und die Anwendung lo- gischer Systeme. Sie sind mit wichtigen logischen Systemen und den zugehörigen Kalkülen vertraut. Weiterhin kennen sie wichtige Beweismethoden für logische Fragestellungen.  — Students know the structure and the application of logical systems. They are familiar with important logical systems and the associated calculi. Furthermore, they know the important methods of proof for logical issues. Fähigkeiten / Abilities Die Studierendensindinder Lage, logische Fragestellungenim Rahmen eines geeigneten logischen Systems zu modellieren. Sie können die erzeugten logischen Formeln mit Hilfe geeig neter Kalküle auf Erfüllbarkeit testen. Sie sind ebenfalls fähig, einfache Beweise zu Fragestellungen der mathematischen Lo gik selbstständig zu führen. — The students are able to model logical issues in the context of a suitable logical system. You can test the generated logical formulas using appropriate calculations to satisfiability. You are also able to perform simple proofs independently on issues of mathematical logic. Kompetenzen / Competencies Die Studierenden erwerben evaluative Kompetenzen in Bezug auf die Verknüpfung der theoretischen Inhalte ihres Studiumsmit praxisnahen Problemstellungen, organisatorische Kompe tenzen in Bezug auf ihr Zeit- und Arbeitsmanagement, sowieselbst-reflexiveund Entwicklungskompetenzeniminterdiszipli nären Bereich zwischen der Mathematik und der Informatik. —Students acquire evaluative skills in relation to the link between the theoretical contents their studies with practical pro blems, organizational skills in relation to their time and work management, and self-reflexive and development expertise in the interdisciplinary area between mathematics and Computer Science.","Basierend auf einer grundlegenden Einführung der struktur- logischen Systeme, insbesondere der Diskussion der Bedeu-tungen der Begriffe Syntax, Semantik und Kalkül (oder Beweissystem), werden wichtige klassische und moderne logische Systeme besprochen, z. B. Aussagenlogik, Prädikaten logik, Modallogik und Temporallogik. Neben der Diskussion der Syntax und Semantik dieser logischen Systeme werdenauch wichtige Kalküle wie das Resolventenkalkül, der Markie rungsalgorithmus oder das Tableaukalkül besprochen. Fernerwird der Bezug dieser Algorithmen zu konkreten Implemen tierungen und Logik-Compilern wie P RO LO G hergestellt. Inden Übungen wird großer Wert darauf gelegt, dass die Stu dierenden lernen konkrete, anwendungsbezogene Probleme in  geeigneten logischen Systemen zu modellieren. Ferner werdendie besprochenen Beweissysteme an konkreten Beispielen ein geübt. —Based on a basic introduction to the structure of logical sys tems, inparticularthediscussionofthemeaningsoftheterms syntax, semantics and calculus (or proof system), important classical and modern logical systems are discussed, such aspropositional logic, predicate logic, modal logic and tempo ral logic. Besides the discussion of the syntax and semantics of these logical systems calculi, also important themes suchas the Resolventenkalkül, the Marking algorithm or the tableau calculus are discussed. Furthermore, the relation of the se algorithms is made to concrete implementations and logic compilerssuchas PR OL OG. Intheexercises, greatemphasisisplacedonensuringthatstudentsaretaughthowtomodelspe cific application-related problems in suitable logical systems. Furthermore, the evidence discussed systems are practiced on concrete examples.",90 minütige Klausur 90-minute written exam,"Präsentation und Beamer, Tafel Presentation and projector, blackboard","z. B. M. Kreuzerund S. Kühling, Logikfür Informatiker, Pear- son, München 2006",MSc AI Engineering and MSc Informatik/ Computer Science
5713,Parametrisierte Algorithmen,455413,In der Regel jedes 2. Semester Usually every other semester,1 Semester,Rutter,Rutter,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Algorithmen und Datenstrukturen, Effiziente Algorithmen Algorithms and Data Structures, Efficient Algorithms","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierendenkennengrundlegende Begriffederparametri- sierten Algorithmenundderzugehörigen Komplexitätstheorie. Sie kennen zudem verschiedene Entwurfstechniken zur Kon struktion parametrisierter Algorithmen.  — The students know the fundamental notions of parameterized algorithms and complexity. They know several techniques for the design of parameterized algorithms. Fähigkeiten / Abilities Die Studierenden können die in der Vorlesung vorgestellten Verfahren exemplarisch ausführen, deren Funktionsweise er läutern und sie analysieren. — Thestudentscanapplythealgorithmspresentedinthelecture on examples, can explain the way they work and are able to analyze them. Kompetenzen / Competencies Die Studierendenbesitzendie Kompetenz, dieinder Vorlesungvorgestellten Technikeneinzusetzen, umparametrisierte Algo rithmen zu entwerfen. Sie sind in der Lage, diese zu bewerten und unter mehreren Alternativen die passendste Technik und Parametrisierung für ein gegebenes Problem auszuwählen. —The students have the competence to use the techniques pre sented in the lecture to construct parameterized algorithms. They are able to choose and evaluate the most fitting techni ques and parametrization for a given problem.","Grundlagen parametrisierter Komplexitätstheorie, Entwurfs- techniken für parametrisierte Algorithmen, z. B. Kernbildung, beschränkte Suchbäume, iterative Kompression, Baumweite und andere Graphparameter sowie untere Schranken. —Foundations of parameterized complexity, algorithmic techniques for parameterized algorithms, e. g. , kernelization, boun ded search trees, iterative compression, treewidth and other graph parameter, and lower bounds.",Mündliche Prüfung (ca. 25 Minuten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben Oralexam(about25minutes); Theexactmodeofassessment will be indicated at the beginning of the semester,"Präsentation mit Tafel und Beamer Presentation with a projector, blackboard","M. Cygan, F. V. Fomin, L. Kowalik, D. Lokshtanov, D. Marx, M. Pilipczuk, M. Pilipczuk, S. Saurabh, Parameterized Algo- rithms, Springer, 2015",MSc AI Engineering and MSc Informatik/ Computer Science
5721,Foundations of Energy Systems,455361,Jedes Wintersemester Every winter semester,1 Semester,De Meer,De Meer,Englisch English,Modulgruppe „A IA“ Focus „A IA“,2 V + 2Ü,60 Std. Präsenz + 50 Std. Übungen + 70 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 50 hrs exercises + 70 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Rechnernetze Computer Networks,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierendenlernenaktuelleundzukünftige Konzepteder Kommunikation zwischen Rechnern und anderen Elementen kennen. Sie erhalten Kenntnisse über den Aufbau und den praktischen Einsatzvon Sensornetzwerken, Virtualisierungundden Smart Grid, sowie der praktischen Bedeutung und Umset  zung von Energieeffizienz. — The students will learn about current and future concepts of communication between computers and other elements. They will gain knowledge of the structure and practical application of sensor networks, virtualization, and the Smart Grid as wellas the practical importance and implementation of energy ef ficiency. Fähigkeiten / Abilities Die Studierenden entwickeln Fertigkeiten im Design und im Entwurf der Architektur und Analysemethoden bei oben ge nannten Formen der Netzwerke. Sie erhalten die Fähigkeitdie Veränderungen und Weiterentwicklungen, die mit dem In ternet geschehen zu verstehen und auf Sensornetze und den Smart Grid etc. anzuwenden. Insbesondere wird die Fähigkeit zur Bestimmung erforderlicher Parameter erlangt. — Studentswilldevelopskillsdesigningarchitectureandanalysis methods in the above types of networks. They will gain theability to understand the changes and developments under gone by the Internet and apply these to sensor networks and the Smart Grid, among other things. In particular, they will be able to determine the required parameters. Kompetenzen / Competencies Die Studierenden sind in der Lage, an Hand der Anforderun gen selbstständig den Aufbau von aktuellen und zukünftigenheterogenen Netzwerken nachzuvollziehen und neue Netzwer ke zu konzipieren. Im Rahmen von Studienprojekten wird die Kompetenz zur praktischen und theoretischen Forschungsar beit erlangt sowie zu dieser eigene wissenschaftliche Beiträge zu verfassen. — The students will be able to independently understand – with reference to the given requirements – the structure of current and future heterogeneous networks, and design new networks. As part of study projects, practical and theoretical research expertise will be acquired and used in scientific papers.","Diese Vorlesung schließt an „Rechnernetze“ an und vertieft das Wissen über die Vernetzung von Rechnern und dem Um- gang mit einem Netz von heterogenen Netzen, sowie dessen Beherrschung. Es wird in die Themen Energieeffizienz, Sen sornetzwerke, Virtualisierung und Smart Grid eingeführt. — This course builds on “Computer Networks“ and consolidates students’ knowledge of computer networks and heterogeneous  network maintenance and control. Students are introduced tothe concepts of energy efficiency, sensor networks, virtualiza tion, and Smart Grid.","Je nach Teilnehmerzahl mündliche Prüfung (ca. 20 Minuten) oder Klausur (90 Minuten). Die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 90-minute written or oral exam of about 20 minutes, depending on the number of participants. The precise mode of as sessment will be announced at the start of the semester.","Präsentation und Beamer, Tafel Presentation and projector, blackboard","Math H. J. Bollen, Fainan Hassan, Integration of Distributed Generation in the Power System, Wirely, 2011 Ali Keyhani, Design of Smart Power Grid Renewable Energy Systems, Wiley, 2011 Holger Karl, Andreas Willig, Protocols and Architectures for Wireless Sensor Networks, Wiley, 2005 A. Berl, A. Fischer, and H. de Meer. Using System Virtualization to Create Virtualized Networks. Workshops der Wissenschaftlichen Konferenz Kommunikation in Verteilten Sys temen (Wow Ki VS2009), Kassel, Germany, March 2-6, 2009. vol. 17, E AS ST, 2009.",MSc AI Engineering and MSc Informatik/ Computer Science
5727,Energy Informatics II,455416,Unregelmäßig Irregular,1 Semester,de Meer,de Meer,Englisch English,Modulgruppe „A IA“ Focus „A IA“,2 V + 2Ü,60 Std. Präsenz + 50 Std. Übungen + 70 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 50 hrs exercises + 70 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Energy Informatics I, Foundations of Energy Systems, Infor- mation and Communication Systems, Network Security, Com- puter Networking",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Understanding of the fundamental methodologies, concepts, protocols and architectures that are used in the context of smart grids: • Studying and modelling of smart grid aspects and the  interaction of individual components• Knowledge of concepts and methods for grid monito ring, smart grid operation, microgrid management and smart grid (co-)simulation Fähigkeiten / Abilities Selecting and applying appropriate methods for modellingsmart grid use cases. Application of grid monitoring, distri buted smart grid control, and grid management with relevantsoftware tools. Studying and mastering co-simulation for eva luation of smart grid applications. Kompetenzen / Competencies Self-awareness of the suitability of measures, techniques andmethods for smart grid control, monitoring and manage ment.","In this lecture, the focus is upon smart grid control. This in- cludes distributed control schemas, as well as global optimi- zation methods. Several state-of-the-art techniques for smart grid use cases such as optimal power flow approximation and relaxation are discussed. In this lecture, we discuss the following main parts: First, methods in traditional power grid control, including feedback controller and the formulation of grid optimizationproblems are explored and discussed in the context of rene wable energy systems. Next, tools for smart grid monitoring, such as digital twins, non-intrusive load monitoring and S CA D A systems, emphasize the need of I CT in power grids. (Co-) simulation is introduced as evaluation concept for smart gridapplications. Finally, an outlook is given on future grid con trolapproachesinformofsector-coupledmicrogrids(=energy cells) and their I CT-based management.","90 minutes written or 20 minutes oral exam (in English) or portfolio. The students will be informed about the exact type of exam by the beginning of the semester. A portfolio examination may contain: • Written or oral partial examination • Documented and executable source code for tasks with tools • Live demonstration of task solutions • Summary of relevant research papers with topics of the module • Technical report • Ongoing technical sub-reports for a final summary into a complete document • Presentation of created material with use of suitable  presentation techniques, e. g. Power Point, Live-Coding, Whiteboard, Flipchart The work on the portfolio will be carried out parallel to the lectureandthefinalsubmissionoftheportfoliowilltakeplace no later than 4 weeks after the end of the lecture period. The lecturer will announce the exact requirements for the portfolio at the beginning of the course.","Präsentation mit Beamer, Tafel Presentation on projector, blackboard","Momoh, James. Smart grid: fundamentals of design and ana- lysis. Vol. 63. John Wiley & Sons, 2012. Addidtionalliteraturewillbereferencedinthelecturematerial",MSc AI Engineering and MSc Informatik/ Computer Science
5730,Optimierung,471765,Unregelmäßig Irregular,1 Semester,Harks,Harks,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,"60 + 30 Std. Präsenz, 90 + 90 Std. Eigenarbeitszeit Workload 60 + 30 contact hours, 90 + 90 hrs independent study",ECTS/Credits: 9,Keine None,"Analysis I + I I, Lineare Algebra I + I I","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen die grundlegenden Fragestellun- gen und Methoden der Optimierung sowie die theoretischen Grundlagen der Algorithmen. — The students get to know the basic challenges and methods of optimization and their theoretical foundations. Fähigkeiten / Abilities  Die Studierenden können Optimierungsprobleme modellierenund geeignete Lösungsverfahren auswählen oder selbst implementieren. Weiterhin haben sie sich grundlegende theoretische Einsichten zur Klassifizierung eines gegebenen Optimierungsproblems hinsichtlich einer Charakterisierung und Sensitivitätsanalyse von Optimallösungen angeeignet. Darüber hin aus sind die Studierenden in der Lage, numerische Verfahren für nichtlineare Problem zu implementieren und anzuwenden. — Students are able to model optimization problems, classifythem and subsequently know how to choose what kind of op timization solver or algorithm. They have gained a thorough theoretical understanding of the basic properties of optimal solutions in terms of characterizations and sensitivity results. Moreover, they are able to implement and apply numerical methods for nonlinear problems. Kompetenzen / Competencies Die Studierenden haben die Kompetenz, Optimierungsprobleme zu modellieren, zu bewerten und mit Rechnerunterstüt zung zu lösen, insbesondere sind sie in der Lage Verfahren für nichtlineare Problem zu implementieren und anzuwenden. —The students are able to model practical problems as optimi zation problems and to select the right solution Methodology including algorithms for nonlinear optimization problems.","Modellierung von Optimierungsproblemen, Lineare Optimie- rung, Simplex-Verfahren, Nichtlineare Optimierung, K KT Theoreme, Dualität, Numerische Verfahren für nichtlineare Optimierungsprobleme —Modelling of optimization problems, linear optimization, sim plex method, nonlinear optimization, K KT theorems, duality, numerical methods for nonlinear problems","2 Teilleistungen: Teilleistung 1 (80%): 120 minütige Klausur über die Gebie-te oder mündliche Prüfung (ca. 30 Minuten); Lineare Opti mierung, Simplex-Verfahren, Nichtlineare Optimierung, K KT Theoreme, Dualität. Teilleistung 2 (20%): 30 minütige Klausur oder mündliche Prüfung (ca. 15 Minuten); Numerische Verfahren für nicht lineare Probleme. Zum Bestehen des Moduls müssen beide Teilleistungen be standen werden. Examination in two parts: Part1(80%):Exam(120minutes)ororalexam(ca. 30minu tes); Linearandnonlinearoptimization, simplexmethod, K KT theorems, duality. Part 2 (20%): Exam (30 minutes) or oral exam (ca. 15 minu tes); Numerical algorithms for nonlinear problems. For passing the modul, both parts need to be passed.","Tafelanschrieb Blackboard, videos in case of virtual lecture",Skriptum,MSc AI Engineering and MSc Informatik/ Computer Science
5734,Mathematical Foundations of Machine Learning,455394,Unregelmäßig Irregular,1 Semester,Sauer,Sauer,Englisch English,Modulgruppe „A IM“ Focus „A IM“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Analysis I I, Numerik, Stochastik Analysis I I, Numerics, Stochastics","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden sollten die grundlegenden Fragestellungen und Methoden der Lerntheorie kennen und verstehen. —The students know and understand basic problems and me thods of learning theory.  Fähigkeiten / Abilities Die Studierenden können Verfahren der Lerntheorie bewerten, selbständig evaluieren, auf praktische Fragestellungen anwen den und einfache Erweiterungen der Verfahren entwickeln. —The students will be able to assess methods of learning theo ry, to evaluate the methods for themselves and to use the methods in practical problems. Furthermore, they are able to develop simple extensions of the methods. Kompetenzen / Competencies Die Teilnehmerkönnenalgorithmische Konzepteder Lerntheorie auf ihre Effizienz und Wirksamkeit beurteilen und eigen ständig implementieren. —The students are able to assess algorithmic concepts of lear ning theory with respect to performance and efficacy and to implement the concepts independently.",Grundlegende Fragestellungen: • Entscheidungsprobleme • Klassifizierungsproblem Verfahren: • Neuronale Netzwerke • Support Vector Machines Grundlagen: • Grundlagen der nichtlinearen Optimierung • Numerische Fragestellungen • Approximationstheoretische Methoden • Bezüge zur Statistik • Reproduzierende Kerne — Basic problems: • Decision problems • Classification problems Methods: • (Artificial) neural networks • Support Vector Machines Basics: • Introduction to nonlinear optimization • Numerical problems • Methods from approximation theory • Connections with statistics • Reproducing Kernels,90minütige Abschlussklausur oder ca. 30 Minuten mündliche Prüfung (wird am Anfang der Veranstaltung mitgeteilt)  90-minute written examination or 30-minute oral examination (the mode of assessment will be announced at the start of the semester),"Präsentation und Beamer, Folien, Tafel, Skript Presentation projector, slides, blackboard, lecture notes","C. M. Bishop, Pattern Recognition and Machine Learning B. Schöllkopf, A. Smola, Learning with Kernels T. Hastie, R. Tibshirami, J. Friedman, The Elements of Sta tistical Learning F. Cucker, D. X. Zhou, Learning Theory Skriptum zur Vorlesung vollständig ausgearbeitet und ge druckt / Lecture Notes",MSc AI Engineering and MSc Informatik/ Computer Science
5756,Funktionalanalysis,451404,Unregelmäßig Irregular,1 Semester,Prochno,Prochno,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Analysis I + I I, Lineare Algebra I + I I oder Grundlagen der Mathematik 1, 2 Analysis I + I I, Linear Algebra I + I I or the foundations of mathematics 1 and 2","Verwendbarkeit in weiteren Bachelor Mathematik, Master Informatik Studiengängen Bachelor Mathematics, Master Computer Science","Kenntnisse / Skills/Knowledge Die Studierenden kennen die grundlegenden theoretischen Techniken, um lineare Funktionale und Operatoren in topo logischen Vektorräumen, insbesondere Banach- und Hilbert Räumen, zu analysieren. —Students know the basic theoretical techniques to analyze li near functionals and operators in topological vector spaces, in particular Banach and Hilbert spaces. Fähigkeiten / Abilities Die Studierenden sind in der Lage, die Methoden der Funktionalanalysisbeikonkreten Fragestellungenzuaktuellen Themen der Mathematik und der Naturwissenschaften anzuwen den. — Students are able to apply the methods of functional analysis to specific, topical problems in mathematics and the natural sciences.","Folgende Themen werden behandelt: • Topologische Vektorräume • Normierte Räume und Vollständigkeit • Lineare Operatoren zwischen normierten Räumen• Satz von der offenen Abbildung, Satz vom abgeschlos senen Graphen und Satz von Baire • Hahn-Banach Sätze und Konsequenzen • Satz von Banach-Steinhaus — The following topics are covered: • Topological vector spaces • Normed spaces and completeness • Linear operators between normed spaces • Open mapping theorem, closed graph theorem and Baire’s theorem • Hahn-Banach theorems and consequences • Theorem of Banach-Steinhaus",90-minütige Klausur oder mündliche Prüfung (ca. 25 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 25-minute individual oral examination or 90-minute writtenexamination. The precise mode of assessment will be announ ced at the start of the semester.,"Tafel, Beamer, Übungsblätter Board, projector, exercise sheets","W. Rudin, Functional Analysis, Mc Graw Hill, 1991. M. Reed/B. Simon, Functional Analysis, Academic Press, 1972.  D. Werner: Funktionalanalysis, Springer, 2007. F. Hirzebruch, W. Scharlau: Einführung in die Funktionalana lysis, B I-Hochschulbücher, 1991.",MSc AI Engineering and MSc Informatik/ Computer Science
5771,Multimedia-Datenbanken,405031,Jedes Sommersemester Every summer semester,1 Semester,Kosch,Kosch,Englisch English,Modulgruppe „A IA“ Focus „A IA“,3 V + 2Ü,75 Std. Präsenz + 50 Std. Übungen + 85 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 75 contact hours + 50 hrs exercises + 85 hrs independent study and exam preparation,ECTS/Credits: 7,Keine None,Keine None,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics, Mas Studiengängen ter Wirtschaftsinformatik Master Computer Science, Master Computational Mathema- tics, Master Information Systems","Kenntnisse / Skills/Knowledge Die Studierenden erwerben Kenntnisse über Techniken der Multimediaverarbeitung und der Extraktion von beschrei benden Multimediaeigenschaften sowie Ähnlichkeitsvergleich von multimedialen Medien und den Aufbau von Multimedia Datenbankmanagementsystemen und der Programmierung von Multimedia-Datenbanken. —Students will acquire knowledge of techniques for multimedia processing and extraction of descriptive multimedia featu resandthedevelopmentofmultimediadatabasemanagement systems and programming of multimedia databases. Fähigkeiten / Abilities Die Studierenden haben die Fähigkeit zur praktischen Spezifi kation von Multimediaanfragen, Umsetzung und Optimierungvon Multimediaanfragen und zum Einsatz von Multimedia standards. —Studentswillacquiretheabilitytoperformpracticalspecifica tion of multimedia requests, implementation and optimization of multimedia queries and the use of multimedia standards. Kompetenzen / Competencies Die Studierenden besitzen die Kompetenz zur Übertragungder Datenbankkenntnisse auf Multimediadaten, Erweiterungen von S QL und Beherrschung von objekt-relationalen Kon strukten am Beispiel Multimedia, technischer Umgang mit Medien, Management von Multimediadaten im Allgemeinen. — Studentswillacquirethecompetencetotransferthedatabaseknowledge on multimedia data, extensions of S QL and mas tery of object-relational constructs for multimedia, technical dealing with the media, management of multimedia data in general.","liche Gliederung: Content-Based Indexing und Retrieval (visuelle Medien): Farbtheorie und Darstellung, kurzer Überblick über weitere Beschreibungsmerkmale wie Textur, Kanten, Extraktion von Merkmalen Retrievalsystemeund Demos Multimediadatenmo dellierung (in X ML: M PE G-7) Multimedia D BM S: Multimedia Zugriffsstrukturen, hier vor allem die Familie der R-Trees, S S-Trees und S R-Trees Multimedia Anfrageverarbeitung und Optimierung Programmierung von Multimedia-D BM SÜberblick über gängige M MD B-Produkte und Forschungspro totypen — New media standards (here especially M PE G - M PE G-4 A VCor derived from M PE G Div X, mp3) and better recording de vices in the media processing industry have been developed in recentyears. Newmethodsandtoolsaredeveloped, whichcan managethemassofrecordedandtransmitteddata. Thevalue of information largely depends on how easily the data can besearched and managed according to their content. These mul timediadatabasesareusedexclusively. Themultimediasearch here differs substantially from textual search. We distinguish content-based search, which for example is to enable color, contour, and texture based distributions for visual media andimage-to- image comparisons. More accurate methods are ba sed on a region -based search, which tries to identify parts ofanimageorvideo. Thesemanticsearchallowsyoutofindme dia based on the fellow in the media persons, or places/events portrayed. A multimedia database system provides here the necessary functions for media manipulation and at the same time enables the content-based and semantic search and that too in large amounts of data, which is made possible due to intelligent index structures. Content structure: Content -Based Indexing and Retrieval (visual media): colortheory and presentation, brief overview of description of fea tures such as texture, edges, extraction of features, retrieval  systems and demos of multimedia data modeling (in X ML: M PE G -7) Multimedia D BM S: Multimedia access structures, especially the family of R-trees, S S-trees and S R- Trees Multimedia Anfrageverarbeitung and optimization Programming of multimedia D BM SOverview of common M MD B products and research prototy pes",90 minütige schriftliche Klausur 90-minute written examination,"Folien-orientierte Vorlesung, Tafelbenützung bei Beispielen, zusätzlichen Erläuterungenundzuerklärenden Sachverhalten:WöchentlicheÜbungeninkleinen Gruppen. Dabeiwerden Präsenzaufgaben sowie die Musterlösungen zu den Übungsaufga ben vorgerechnet Erwartete Aktivitäten der Studierenden: Mitarbeit bei Präsenzübungen, Übungsaufgaben, selbständiges Studiumvonse kundärer Literatur Folienskript ist vorhanden und über Stud. I P zugänglich. — Slides-oriented lecture, panel use with examples, additional explanations and explanatory facts: Weekly tutorials in smallgroups. The presence tasks and the sample solutions are pre calculated to the exercises Expected activities of students: Participation in compulsoryand voluntary tutorials, independent study of secondary lite rature Slide script is accessible and available through Stud. I P","Harald Kosch: “Distributed Multimedia Database Technolo- gies supported by M PE G-7 and M PE G-21”, C RC Press, No- vember 2003, I SB N 0-8493-1854-8 Klaus Meyer-W egener: „Multimediale Datenbanken- Einsatz von Datenbanktechnik in Multimedia-Systemen“, 2. Auflage 2004, Teubner Verlag, I SB N 3-519-12419-X.",MSc AI Engineering and MSc Informatik/ Computer Science
5777,Technologien zur Wahrung der Privatsphäre in,472215,Unregelmäßig Irregular,1 Semester,Kosch,Gerl,Englisch English,Modulgruppe „C CC“ Focus „C CC“,2 V + 1Ü,"30 + 15 Std. Präsenz, 105 Std. Übungen, Nachbereiten des Workload Vorlesungsstoffs und Prüfungsvorbereitung 30 + 15 contact hours, 105 hours of exercises, independent study and exam preparation",ECTS/Credits: 5,Keine None,Keine None,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden kennen die grundlegenden Konzepte der Technologien zur Wahrung der Privatsphäre in Informationssystemen. Siekennenauchdierechtlichen Grundlagendes Da tenschutzes in Europa (G DP R), welche den technischen Mög lichkeiten gegenübergestellt werden. Die Studierenden kennendie Unterschiede zwischen Privatsphäreund Anonymität, kennen Prinzipien für Angriffe auf die Privatsphäre und die Anonymität und Methoden zur Wahrung dieser. Die Studieren denkennendiebesonderen Rahmenbedingungeninrelevanten Anwendungsfällenfür Informationssysteme, wiez. B. medizini sche Informationssysteme oder Data Warehouses. — The students know the core concepts of technologies used for theprotectionofprivacyininformationsystems. Thestudentsalso know the legal basis of data protection in Europe (G D P R), which is contrasted to the technical possibilities. Thestudents know the differences between privacy and anonymi ty, know principles for attacks on privacy and anonymity andmethods to protect them. The students know the special re quirementsinrelevantusecasesforinformationsystems, such as medical information systems or data warehouses. Fähigkeiten / Abilities Die Studierenden der Lehrveranstaltung beherrschen die Aus wahl und Anwendung von geeigneten Methoden zum Schutz der Privatsphäre und Anonymität in Informationssystemenunter Berücksichtigung der spezifischen Rahmenbedingungen und rechtlichen Rahmenbedingungen. Sie sind befähigt Datenschutz-Risiken in Informationssystemen festzustel len und zu bewerten. —The students of the course master the selection and appli cation of suitable methods for the protection of privacy and anonymity in information systems, taking into account the specifics of the information system and legal requirements. The students are able to determine and evaluate data protec tion risks in information systems. Kompetenzen / Competencies Die Teilnehmer verstehen die Grundlagen des technischen Datenschutzes, insbesondere Methoden zur Anonymisierung, Pseudonymisierung und Privacy Modelle. Auch verstehen die Teilnehmer die rechtlichen Grundlagen in Europa für Daten schutz - die General Data Protection Regulation (G DP R). Die Teilnehmer können geeignete Methoden für unterschiedliche Informationssystemeauswählenundunter Beachtungderspe zifischen Rahmenbedingungen anwenden. —The participants understand the basics of technical data protection, in particular methods of anonymization, pseudonymi  zation and privacy models. The participants also understandthe legal basis for data protection in Europe - the General Da ta Protection Regulation(G DP R). Theparticipantscanselect suitable methods for different information systems and apply them taking intoaccount the specific frameworkconditions.","Die Wahrung der Privatsphäre und Anonymität ist ein The- menbereich, welcher sowohl durch technische als auch durchrechtliche Rahmenbedingungen beeinflusst wird. Die Vorlesungbehandeltdiese Rahmenbedingungenim Kontextvon In formationssystemen. Im ersten Teil der Vorlesung werden diegrundlegenden Konzepte und Methoden vermittelt. Im zweiten Teil der Vorlesung werden unterschiedliche Anwendungsfälle in Informations-systemen mit spezifischen Anonymitäts und Privatsphäre-Rahmenbedingungen erläutert. 1. Grundlagen von Privacy-Preservation • Rechtliche Grundlagen in Europa (G DP R) • Anonymität und Privatheit • Grundlagen der Datenhaltung in Informationssystemen • Privacy-Preserving Methoden(Anonymisierung, Privacy Modelle) • Tradeoff zwischen Privacy und Utility 2. Anwendungsfälle • Medizinische Forschungsdaten– Hippocratic Datenbanken und Purpose-based Ac cess Control – Pseudonymisierung • Data Warehouse – Anonymisierungsstrategien – Anfrage-basierte Anonymisierung • Soziale Netzwerke – Datenschutzanforderungen an Soziale Netzwerke – Privacy-Preservation für Graph-Daten —Preserving privacy and anonymity is a topic area that is in fluenced by both technical and legal conditions. The lecturediscusses these conditions in the context of information sys tems. In the first part of the lecture the basic concepts andmethods are conveyed. In the second part of the lecture, diffe rent use cases in information systems with specific anonymity and privacy frameworks are detailed. 1. Basics of privacy preservation • Legal basis in Europe (G DP R) • Anonymity and privacy • Basics of data management in information systems • Privacy-preserving methods (anonymization, privacy  models) • Tradeoff between privacy and utility 2. Use Cases • Medical research data – Hippocratic databases and purpose-based access control – Pseudonymization • Data warehouse – Anonymization strategies – Query-based anonymization • Social networks – Data protection requirements for social networks – Privacy preservation for graph data",90-minütige Klausur oder mündliche Prüfung (20 Minuten); diegenaue Prüfungsartwirdzu Beginndes Semestersbekannt gegeben. 90-minute written or 20-minutes oral examination; the preci se mode of assessment will be announced at the start of the semester.,Präsentation mit Projektor Presentation with projector,Die Literatur wird vom Dozenten zu Beginn der Vorlesung be- kanntgegeben. The literature will be announced by the lecturer at the begin ning of the lecture.,MSc AI Engineering and MSc Informatik/ Computer Science
5807,Programming Applications for Mobile Interaction,405026,Jedes Sommersemester Every summer semester,1 Semester,Kranz,Kranz,Deutsch oder Englisch German or English,Modulgruppe „A IS E“ Focus „A IS E“,"3 V + 2Ü Für die Vorlesung und die Übung im Rahmen der Lehr- veranstaltung besteht Anwesenheitspflicht. In der Vorlesung findet eine wissenschaftlich-technische Ein führung zu den Themen der Lehrveranstaltung statt, diesewerdenindenanschließendenÜbungendirektmitderÜbungs leitung praktisch umgesetzt. Begründung: In der Lehrveranstaltung arbeiten die Teams von Studierenden an einem größeren Projekt über das ganze Semester hindurch. Es zu jedem Arbeitspaket bzw. Themengebiet ein Kolloquium statt, in denen über die Fortschritte berichtet, aufgetretene Probleme ausgetauscht und ihre Lösungen diskutiert werden; am Ende findet ein Abschlusskolloqui um statt. Wird keine umfassende Anwesenheit bei den Kolloquien gefordert, wird die Kompetenz nicht geübt, vor anderen Studie renden zu präsentieren und auf ihre Fragen und Anmerkungen(undnichtnurdiedes Dozenten)einzugehenunddiesezudiskutieren. Die Kompetenz, die präsentierten Inhalte zu analy sieren, bewertenundkritischzudiskutierenisteinewesentliche Anwendung der Lehrveranstaltungsinhalte die nur bei Präsenz eingeübt werden kann. Die vereinzelte Abwesenheit aus nichtvom Studierenden zu vertretenden und nachgewiesenen Grün den ist möglich. Darüber hinaus kann die spezifische Aufgabenstellung besondere Ausstattung erfordern, die nur in den Laboren und Räu men der Universität in geeigneter Weise zur Verfügung steht. Ferner ist ggf. eine direkte Betreuung und Unterweisung an speziellen Geräten notwendig. Daher ist bei spezifischen Auf gabenstellungen eine Bearbeitung außerhalb dieses Kontextesnicht möglich und die Anwesenheit dann zwingende Voraus setzung für die erfolgreiche Bearbeitung. Andernfalls ist die erfolgreiche Teilnahme an der Lehrveranstaltung gefährdet.","75 Std. Präsenz + 135 Std. Übungsaufgaben, Nachbearbei- Workload tung und Prüfungsvorbereitung75 contact hours + 135 hours exercises and independent stu dy and exam preparation",ECTS/Credits: 7,Keine None,"Programmierungin Java, Mensch-Maschine-Interaktion, M ES Praktikum oder S EP, zusätzlich ggf. Verteilte Systeme Programming in Java, Human-Computer-Interaction, M ES or S EP Practical, optionally Distributed Systems",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden lernen die Realisierung von umfangreichen Engineering-Projekten aus dem Kontext Mobiler Anwendun gen und Systeme und die dazu notwendigen Vorgehensweisen, Methoden und Werkzeuge kennen. Theoretische Kenntnissevom Entwurf verteilter Systeme, der Entwicklung mobiler An wendungen und Rechnernetze werden praktisch angewendetund durch die Systementwicklung eines komplexeren Gesamt systems vertieft. Fähigkeiten / Abilities Die Studierenden beherrschen die praktischen Fragestellungen der Entwicklung und Umsetzung von Systemen beste hend aus mobilen Endgeräten und zentralen bzw. dezentralen Infrastrukturen sowie den maßgeblichen Einfluss der Mensch Maschine-Interaktion mit dem Gesamtsystem. Die Studierenden können in einem kleinen Team effektive Lösungen erarbeiten und durchführen und erfolgreich ein vorlesungsbeglei tendes Projekt im Team realisieren.  Kompetenzen / Competencies Die Teilnehmer erlernen soziale Kompetenz durch die Team arbeit und die notwendigen organisatorischen und fachlichen Kompetenzen zur Durchführung von Projekten aus dem Kontext der mobilen Anwendungsentwicklung erfolgreich zu be arbeiten. Teil des Lernziels besteht in der Abschätzung und Kontrolle des Arbeitsaufwandes, sowie der Entwicklung von Strategien zum erfolgreichen Projektmanagement. Dazu wer den Stundenzettel geführt.","umfasst das Systemmodell als Über-sicht, die geeignete Beschreibung der Systemumgebung mittelsgeeigneter Werkzeuge, sowiedie Erfassungund Dokumen tation funktionaler und nicht-funktionaler Anforderungen. 2. ) Für die Mobile Anwendung sind, zusätzlich zu den ge nannten Aufgaben, Prototyping-Methoden einzusetzen (z. B. Wizard-of-Oz)bzw. Studienzur Identifikationder Nutzergrup pen (z. B. Interviews) durchzuführen. 2. Entwurf  1. ) Hauptbestandteil ist ein systematischer Grobentwurf eines Systems, das die in der Analyse ermittelten Anforderungenbestmöglich erfüllt. Auf dieser Basis wird ein detaillierter Entwurf ausgearbeitet, der mit der Problemstellung angemesse nen, domänenspezifischen Werkzeugen und Vorgehensweisen das umzusetzende System spezifiziert und dokumentiert. 2. ) Die mobile Anwendung ist, im Gegensatz zum Hauptsystem, mittels Prototyping-Methoden agil und iterativ zu entwerfenundzuvalidieren. Dazusindz. B. Methodenzur Erstellunghorizontalerbzw. vertikaler High-Level/Low-Level Prototypen aus dem Bereich der Mensch-Maschine-Interaktion ein zusetzen. 3. Umsetzung1. ) Im Rahmen der Umsetzung erfolgt die tatsächliche Reali sierung des entworfenen Systems. Das System besteht in der Regel aus Software- und Hardware-Komponenten. Zur Rea lisierung sind bestehende, konfigurierbare Softwarebausteine mit eigener Software zu ergänzen und zu einem lauffähigen Gesamtsystem zu integrieren. Hierzu werden Methoden aus dem Bereich der verteilten Systeme, z. B. Architekturentwurf, oder der vernetzten Systeme, z. B. Socket-Programmierung, verwendet. 2. ) Die Umsetzung der Mobilen Anwendung wird durch spe zielle Frameworks und Entwicklungssysteme aus dem Bereich mobiler Anwendungen unterstützt. 4. Validierung 1. ) Validierung und Verifikation der Ergebnisse von Entwurf und Umsetzung auf Grundlage der durch Analyse bestimmten Anforderungen. 2. ) Die mobile Anwendung ist durch geeignete Methoden aus dem Bereich der Mensch-Maschine-Interaktion zu evaluieren und die Ergebnisse sind kritisch zu diskutieren. Hierzu könnenz. B. Beobachtung, Fragebögen, Effizienz- und Fehlermessun gen bei der Interaktion eingesetzt werden. Jedes Arbeitspaket kann eine oder mehrere dieser Aktivitä ten umfassen und jede Aktivität kann Gegenstand eines oder mehrerer Arbeitspakete sein. Dabei müssen alle Aktivitätendurch Arbeitspakete adäquat abgedeckt sein. In den einzelnen Arbeitspaketen kommen projekt- und domänenspezifi sche Werkzeuge und Methoden zum Einsatz z. B. zum Testvon Client/Server-Systemen, Schnittstellenbeschreibungsspra chen, Service Description Languages. Zu allen Arbeitspaketen werden Arbeitseinheiten definiert, de ren Aufwand abgeschätzt und deren Realisierung z. B. anhandeines Gantt-Charts organisiert und durchgeführt. Das Ergeb nis jedes Arbeitspakets wird durch einen kurzen Bericht doku mentiert, ggf. begleitet von Software. Aus dem Bericht sindauch Aufwandsabweichungen und Korrekturen vorangegange ner Arbeitspakete ersichtlich. Jedes Arbeitspaket schließt mit einem Kurzvortrag in dernächsten Einheit ab. Die Teams werden durch ein festes wö chentliches Treffen mit dem Betreuer unterstützt. Die Lehrveranstaltung schließt mit einem Abschlusskolloqui um ab, in dem das fertig entwickelte System präsentiert und abgenommen wird.","Schriftliche Dokumentation in Form eines technischen Be- richts, mündliche Präsentationen zu den Arbeitspaketen, die durch geeignete Medien (z. B. Folien) unterstützt werden Dokumentierter und funktionsfähiger Quelltext inkl. aller zur Demonstration notwendigen Informationen, sowie einer Sys temdemonstration im Rahmen des Abschlusskolloquiums.","Präsentation mit Projektor, Gruppenarbeit, Wiki Projector presentation, group work, wiki",wird in Abhängigkeit der konkreten Aufgaben- stellung ausgewählt und bekanntgegeben.,MSc AI Engineering and MSc Informatik/ Computer Science
5812,Stochastische Simulation,451017,Unregelmäßig Irregular,1 Semester,Müller-Gronbach,"Müller-Gronbach, Yaroslavtseva",Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,3 V + 1Ü,60 Std. Präsenz + 60 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 7,Keine None,"Analysis I, Lineare Algebra I, Programmierung I, Einführung in die Stochastik Analysis 1, Linear Algebra 1, Programming 1, Introduction to Stochastics",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Kenntnisgrundlegender Algorithmenderstochastischen Simu- lation, ihrer Eigenschaften und typischer Anwendungen.  — Knowledge of basic algorithms of stochastic simulation, their properties and typical applications Fähigkeiten / Abilities Fähigkeit zur effizienten Implementierung dieser Verfahrenund zur Darstellung und Interpretation von Simulationsergeb nissen im Rahmen der Stochastik und Statistik. Fähigkeit zur eigenständigen Erarbeitung und Präsentation eines Themas aus der stochastischen Simulation. — Ability to efficiently implement these methods and to present and interpret simulation results in the context of stochastics and statistics. Ability to independently develop and present a topic in stochastic simulation.","Das Verfahrenderdirekten Simulation, Simulationvon Vertei- lungen, Methodender Varianzreduktion, Markov Chain Monte Carlo-Methode, Numerische Integration —Direct Simulation, Simulation of Distributions, Variance re duction, Markov Chain Monte Carlo, Numerical integration",Zwei Teilleistungen: Teilleistung 1 (80%):90-minütige Klausur oder mündliche Prüfung (ca. 30 Minu ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. Teilleistung 2 (20%): Vortrag (ca 15 Minuten) über ein Thema der Stochastischen Simulation. Zum Bestehen des Moduls müssen beide Teilleistungen be standen werden. Examination in two parts Part 1 (80%):90-minute written or oral exam of about 30 minutes. The pre cise mode of assessment will be announced at the start of the semester. Part 2 (20%):Oral presentation of about 15 minutes on a subject from Sto chastic Simulation To pass the examination both parts have to be passed.,"Overhead, Beamer, Tafel Slides, projector, blackboard","Müller-Gronbach, Novak, Ritter: Monte Carlo-Algorithmen, Springer, 2012  Weiteres nach Empfehlung des Dozenten / Further reading announced during the lecture",MSc AI Engineering and MSc Informatik/ Computer Science
5820,IT-Sicherheit,405390,Jedes Wintersemester Every winter semester,1 Semester,Posegga,Posegga,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,3 V + 1Ü,60 Std. Präsenz + 40 Std. Übungen + 80 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 40 hrs exercises + 80 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Keine None,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Grundlegendes Wissen über die wichtigsten Konzepte für den Betrieb sicherer und (meist) verteilter Rechnersysteme, dazugehören u. a. Teilkomponenten aus den Bereichen Betriebssysteme, Kommunikations- und I T-Sicherheit, insb. kryptografi sche Grundlagen inkl. P KI, Grundlagen der Netzwerksicherheit, Grundlagen der Sicherheit von Betriebssystemen, grundlegende Sicherheitsprotokolleund-standards, Sicherheitsarchi tekturen, A AA in verteilten Systemen. —Basicknowledgeofthekeyconceptsfortheoperationofsecu re and (mostly) distributed computing systems. These includesub-components in the areas of operating systems, communications and I T security, especially cryptographic basics inclu ding PK I, principlesofnetworksecurity, principlesofoperatingsystem security, basic security protocols and standards, secu rity architectures, A AA in distributed systems. Fähigkeiten / Abilities Der Student ist in der Lage Konzepte anhand von selbst zu lösenden und zu diskutierenden Aufgaben aus ausgewählten Teilbereichen verstehen und Betriebssysteme und Netzwerke bezüglichder Sicherheitanalysierenkönnen. Der Studentkannpassende Verschlüsselungsverfahren für verschiedene Anwen dungsfelder auswählen und Kommunikationsmechanismen inunterschiedlichen Szenarien anwenden. Der Student ist befä higt Verschlüsselungsverfahren anzuwenden. —Students have a firm grasp of concepts from selected sub areas, based on exercises solved by the students themselves. Furthermore, theyareabletoanalysethesecurityofoperatingsystems and networks. Students are able to select appropria te encryption methods for various applications and implement communication mechanisms in different scenarios. Students have the ability to correctly implement encryption methods. Kompetenzen / Competencies Der Student ist befähigt Konzepte und Architekturalternativen für Kommunikationsmechanismen (Dienste und Protokol le) kennen, bewerten und auswählen zu können. Der Studenthat die Kompetenz des Einsatzes von P KI-Technologie in verschiedenen Anwendungsfeldernunddie Sicherheitvonsymmetrischen und asymmetrischen Verschlüsselungsverfahren beur teilen zu können. Der Student versteht Sicherheitsprotokolleund -standards einstufen und Sicherheitsarchitekturen bewer ten zu können. Der Student erlernt die Kooperations- und Teamfähigkeit in den Präsenz- und praktischen Rechnerübun gen. Der Studentsteigertdie Problemlösungskompetenzdurch selbstständiges Erarbeiten von Lösungen in den Übungen. Der Student kann die Komplexität systematisch beherrschen undkritische Bewertung von Lösungsansätzen und ihrer algorith mischen Umsetzung durchführen.  — Studentsareabletoidentify, evaluateandselectconceptsandarchitecturalalternativesforcommunicationmechanisms(ser vices and protocols). Students are expected to be competent intheuseof PK Itechnologyinvariousscenariosandtobeableto assess the security of symmetric and asymmetric encrypti onmethods. Studentsarewell-versedinsecurityprotocolsandstandards and are able to classify and assess security architec tures. Students have learnt cooperation and teamwork in theclassroom and practical computer tutorials. Students have al so honed their problem-solving skills by working through the exercises in the tutorials, autonomously arriving at a solution. Studentsareabletosystematicallyaddressthecomplexityand perform critical assessment of approaches and its algorithmic implementation.","In dem Modul werden folgende Inhalte behandelt: Einfüh- rung in die I T-Sicherheit; kryptographische Grundlagen; Ver-traulichkeit, Integrität, Verfügbarkeit; Authentication & Authorization; Sicherheitsmodule; O TPs, Token; Sicherheitsprotokolle; Grundlagen; S SL; I PS EC; Benutzerverwaltung; Zugriffsschutz; Sicherheit von T CP/I P Diensten; Grundlegende Sicherheitsprotokolle und –standards; Symmetrische Verschlüsselung (D ES, A ES, etc. ); Asymmetrische Verschlüsse lung (R SA, P GP); A AA in verteilten Systemen; Kerberos; X. 509 Authentifikation; Netzwerk- und Internetsicherheit; I PSec; T LS/S SL; Einführung in P KI; Zertifikate; Schlüsselgene rierung; Certificate authorities; Certificate revocation und C A Hierarchie. — In the module, the following topics are treated: Introductionto I T Security, Cryptographic Basics, Confidentiality, Integrity, Availability, Authentication & Authorization, security modules; O TPs, tokens, security protocols, foundations, S SL, I P S EC, usermanagement, accessprotection, securityof TC P/I P services, Basic security protocols and standards; Symmetric encryption (D ES, A ES, etc. ); Asymmetric encryption (R SA, P GP), A AA in distributed systems, Kerberos, X. 509 authentication, network and Internet security, I PSec, T LS/S SL, introduction to P KI, certificates, key generation, certificate au thorities, certificate revocation and C A hierarchy","90 min Klausur oder ca. 15 min mündliche Prüfung, jeweils in englischer oder deutscher Sprache und je nach Anzahl der Hörer. Die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben  90-minutewrittenexaminationor15-minuteoralexamination, depending on the number of listeners, in English or German. The exact mode of assessment will be indicated at the begin ning of the semester","Präsentation und Beamer, Tafel Presentation and projector, blackboard","H. -P. Gumm, M. Sommer: „Einführung in die Informatik“, 5. Auflage Oldenbourg-Verlag, München, 2002 Dieter Gollmann: Computer Security, John Wiley, 1999 W. Stallings: Cryptography and Network Security, Pearson, 2003 Niemi and Nyberg: U MT S Security, John Wiley, 2003",MSc AI Engineering and MSc Informatik/ Computer Science
5838,Information Theory,455440,Unregelmäßig Irregular,1 Semester,Zumbrägel,Zumbrägel,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Lineare Algebra, Wahrscheinlichkeitstheorie Linear Algebra, Probability Theory","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics",The students learn the mathematical foundations of informa- teion theory and acquire probabilistic and constructive proof methods. They are able to apply these concepts to addresssource coding and channel coding problems and can recogni ze information theoretic concepts in related areas.,"Information theory deals with two fundamental questions in communication theory, namely the limits of data compression and the ultimate transmission rate of communication. In this course, the mathematical notions to address these problems are being developed. The following topics are planned: Entropy, Mutual Informati on and Data Compression, Channel Capacity and Shannon’s Noisy Coding Theorem, Time permitting, an introduction to Universal Source Coding, Kolmogorov Complexity and Net work Information Theory.",Klausur(120 Min. )odermündliche Prüfung(ca. 30 Min. ). Die Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 120 minutes written exam or 30 minutes oral exam. The pre cise mode of assessment will be announced at the start of the semester.,Tafel Blackboard,"Thomas M. Cover and Joy A. Thomas, Elements for Informa- tion Theory, John Wiley & Sons (2006)",MSc AI Engineering and MSc Informatik/ Computer Science
5843,Software-Analyse,455368,Jedes Sommersemester Every summer semester,1 Semester,Fraser,Fraser,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,2 V + 2Ü,"60 Std. Präsenz + 120 Std. Übungsaufgaben, Nachbearbei- Workload tung des Vorlesungsstoffs und Prüfungsvorbereitung 60 contact hours + 120 hours exercises, independent study and exam preparation",ECTS/Credits: 6,Keine None,"Software Engineering, Programmierung I + I I, S EP Software Engineering, Programming I + I I, S EP",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden erlernen Basiskonzepte der Analyse von Software und fortgeschrittene Methoden zur Fehlerfin dung. Die Konzepte umfassen statische Methoden der Sourcecode-Analyse, dynamische Methoden der Laufzeitana lyse, Bytecodeinstrumentierung, Testmethoden, automatisierte Debugging-und Testmethoden, Fehlervorhersage, sowieau tomatisierte Korrektheitsbeweise. — Students learn about the basic concepts of software analysis and advanced methods of identifying software defects. The conceptsincludestaticsourcecodeanalysis, dynamicprogramanalysis, bytecode instrumentation, testing methods, automa ted debugging and fault localisation, defect prediction, as well as formal verification. Fähigkeiten / Abilities Die Teilnehmer lernen die wichtigsten Methoden zum Analy sieren von Softwaresystemen kennen. Insbesondere sind sie inder Lage, Analysemethoden programmiertechnisch umzuset zen. Die dazu benötigten grundlegenden Algorithmen könnendie Studierenden erklären und ggf. mit alternativen Algorith men vergleichen. — Theparticipantsarefamiliarwiththemostimportantmethodsfor analysing software systems and are able to implement these. They can explain the basic algorithms used in their imple mentation and compare them with alternative ones. Kompetenzen / Competencies Die Teilnehmer erlernen theoretische und praktische Kompe tenzen in der Konzeption, Umsetzung und Evaluierung von Softwareanalysen. Weiterhin sind die Studierenden befähigt, einzelne Analysen auch auf andere Problemstellungen und Analyseziele anzupassen. — The participants gain theoretical and practical competencies concerning the conception, implementation and evaluation of softwareanalyses. Inaddition, theyareabletoadaptindividual analyses to different problems and purposes.",The course covers the following topics: • Control- and Dataflow Analysis • Code Clone Detection • Slicing • Fault localisation • Fuzzing • Defect prediction • Abstract Interpretation • Symbolic Execution • Software model checking • Program repair • Reverse engineering,"90-minütige Klausur oder Porfolio-Prüfung. Mögliche Port- foliobestandteile sind technische Berichte, dokumentierterund funktionsfähiger Quelltext für Softwareanalysen, Live Systemdemonstration, Teilpräsentationenzu Einzelleistungen, laufende, fortzuschreibende technische Teilberichte zur Zusammenfassungzueinem Gesamtdokument, Abschlusspräsen tation. Die genauen Anforderungen werden vom Dozierenden zu Beginn der Veranstaltung bekanntgegeben. 90-minute exam or portfolio-exam. The exact mode of assess ment will be announced at the start of the semester.","Präsentation, Beamer, Übungsblätter Presentation, projector, exercises",wird in Abhängigkeit von der konkreten Aufgaben- stellung ausgewählt und bekanntgegeben. Will be announced in the lectures. Further reading will be an nounced for the individual assignments.,MSc AI Engineering and MSc Informatik/ Computer Science
5844,Advanced Software Product Development,455376,Unregelmäßig Irregular,1 Semester,Fraser,Fraser,Deutsch German,Modulgruppe „A IS E“ Focus „A IS E“,2Ü+4 P,60 Std. Präsenz + 180 Std. Vor- und Nachbearbeitung des Workload Praktikums 60 contact hours + 180 hours independent study,ECTS/Credits: 8,Keine None,"Programmierung I + I I, S EP, Software Engineering Programming I + I I, S EP, Software Engineering",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden erlernen Methoden und Techniken zur Ent- wicklung eines Software Systems aus einer holistischen Sicht, von der Ideenfindung, über die Konzeption und Analyse der Anforderungen, bis hin zum fertigen Produkt und dessen Ver marktung. — The students learn holistic methods and techniques for deve lopingsoftwaresystemsfromideationovertheconceptionandrequirements analysis to the finished product and its marke ting. Fähigkeiten / Abilities Die Teilnehmer erwerben die Fähigkeit, Methoden, Praktiken und Tools der agilen Softwareentwicklung zur Entwicklung umfangreicher Softwaresysteme zielgerichtet einzusetzen und auf neue Probleme bis hin zur Produktreife zu übertragen. — The participants gain the ability to apply methods, practices and tools of agile software development to produce extensive software systems and transfer them to new problems as far as production readiness. Kompetenzen / Competencies Die Teilnehmer erwerben Kompetenzen auf technischer, me thodischer und auf organisatorischer Ebene. Sie sind in der Lage, für ein gegebenes Problem Anforderungen zu erfassen, ein Design sowohl auf technischer als auch auf Benutzerebene zu erstellen, und dieses effizient umzusetzen. —The participants gain technical, methodical and organizatio nal knowledge. They are able to determine the requirements for a given problem, to create a design at a technical and user level, and to implement it efficiently.","Studierende bearbeiten eine Problemstellung, die als grober thematischer Rahmen vorgegeben wird. Aus diesem Rahmen heraus entwickeln die Studierenden konkrete Lösungsideen, welche schrittweise verfeinert und zu einem Produkt entwickelt werden. Ausgangspunkte für die Problemstellungen bil den technische oder gesellschaftliche Fragestellungen, welche zu Beginn der Veranstaltung ausgewählt werden. Zentral sind hierbei auch die Problemstellungen, welche aktuelle Themendes Software Engineeringformen, etwa Data Scienceoder Machine Learning. Dabeiwerdeninder Veranstaltungimmermin destens die folgenden Grundthemen behandelt: • Anforderungsanalyse mit User Stories • Agile Entwicklung mit Scrum/Kanban/Scrumban • Test Driven Development • U X Design • Marketing • Rechtliche Aspekte (Copyright, Lizenzen, etc. ) • Gründung/Start Up Übergeordnetesunderwünschtes Ergebnisder Arbeitenistein potenziellvermarktbares Produkt, d. h. eine Software, dieallen wesentlichen Qualitätsanforderungen an eine produktiv ein setzbare Software entspricht und einen für ein erfolgreiches Produkt ausreichend großen Nutzerkreis erreichen kann. Studierende erhalten theoretische Grundlagen in Vorträgen, und erarbeiten in kleinen Teams eine Lösung für das Problem. Dabei folgen die Studierenden einem agilen Vorgehensmodell in Iterationen mit rotierenden Rollen, inklusive regelmäßiger Review- und Planungstreffen; beginnend bei eigener Anforde rungsanalyse, bis hin zur Endabnahme und Vermarktung. — Givenatechnicalorsocialissueannouncedatthebeginningof the course, students develop their own solutions to the topic, which they refine step by step. For this, current issues in soft ware engineering such as data science and machine learning play a central role. The course covers at least the following topics: • Requirements analysis with user stories • Agile development with Scrum/Kanban/Scrumban • Test driven development • U X design • Marketing • Legal aspects (copyright, license, etc. ) • Start Up The desired result is a marketable product meeting all central qualityrequirementsadeployablesoftwareshouldmeetaswell as a broad spectrum of potential users. Students gain knowledge about the theoretical foundations through presentations. Participants work in small teams to come up with a solution using an agile process model withrotating roles including regular meetings for review and plan ning.","Portfolio-Prüfung. Mögliche Portfoliobestandteile sind: Dokumentierter und funktionsfähiger Quelltext für einzel- ne Module, Live-Systemdemonstration, technischer Bericht, Burndown-Charts und Prozessdokumentation, Teilpräsentationen zu Einzelleistungen, Abschlusspräsentation der erstellten Software und der verwendeten Methodiken mit anschlie ßenden mündlichen Prüfungsfragen Die genauen Anforderungen werden vom Dozierenden zu Be ginn der Veranstaltung bekanntgegeben. — Portfolio-exam. Possible components of the portfolio include:Documented, compilable source code of all software components, Live demonstrations, Technical report, Burndowncharts and documentation of development process, Presenta  tions of individual components and steps, Final presentation ofthesoftwareproductandthemethodologyappliedwithoral examination. The exact mode of assessment will be announced at the start of the semester.","Präsentation, Beamer, Übungsblätter Presentation, projector, exercises",wirdin Abhängigkeitderkonkreten Aufgabenstellung ausgewählt und bekanntgegeben. Will be announced in the lectures. Further reading will be announced for the individual assignments.,MSc AI Engineering and MSc Informatik/ Computer Science
5845,Search-Based Software Engineering,455378,Jedes Wintersemester Every winter semester,1 Semester,Fraser,Fraser,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,2 V + 2Ü,"60 Std. Präsenz + 120 Std. Übungsaufgaben, Nachbearbei- Workload tung des Vorlesungsstoffs und Prüfungsvorbereitung 60 contact hours + 120 hours exercises, independent study and exam preparation",ECTS/Credits: 6,Keine None,"Software Engineering, Programmierung I + I I, S EP Software Engineering, Programming I + I I, S EP",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Search-based Software Engineering (S BS E) beschreibt die Anwendung meta-heuristischer Suchverfahren wie genetische Algorithmen, Simulated Annealing, oder Tabu Search, auf Software Engineering Probleme. Die Vorlesung deckt theoretische Grundlagen meta-heuristischer Suchverfahren ab (lo  kale Suchverfahren und Populations-basierte Verfahren wie Genetische Algorithmen oder Particle Swarm Optimisation) und deren Anwendung auf Softwareentwicklungsprobleme desgesamten Softwareentwicklungsprozesses (Requirements, Design, Planung, Testing, Wartung, etc). Die Studierendenerlernen theoretische Grundlagen meta-heuristischer Suchverfahren und die wichtigsten Algorithmen lokaler und populationsbasierter Suchalgorithmen sowie Basiskonzepte der Optimie rungsprobleme in der Softwareentwicklung. —Search-based software engineering (S BS E) applies metaheuri stic search techniques such as genetic algorithms, simulated annealing and tabu search to software engineering problems. Thiscoursecoversthetheoryofmajorclassesofmetaheuristic optimisation algorithms, including local search algorithms and populationbasedoptimisation(suchasgeneticalgorithmsandparticle swarm optimisation) and their application to software engineering problems across the software development li fecycle (requirements, design, planning, testing, maintenance, etc). Participants will learn the fundamental basics of meta heuristicsearch, aswellasessentiallocalandpopulation-basedsearch algorithms and their application areas in software en gineering. Fähigkeiten / Abilities Die Teilnehmer kennen die wichtigsten meta-heurstischen Suchalgorithmen und deren Anwendungsgebiete in der Soft wareentwicklung. Sie sind in der Lage, Optimierungsansätzeprogrammiertechnisch umzusetzen. Dazu benötigte grundle gende Algorithmen können sie erklären und vergleichen. — Participants know the most important meta-heuristic search algorithms and their application areas in software engineering. They will be able to implement, explain and compare relevant algorithms. Kompetenzen / Competencies Die Teilnehmer erlernen theoretische und praktische Kompe tenzen in der Konzeption, Umsetzung und Evaluierung von Suchverfahren in der Anwendung auf Softwareentwicklungs Probleme. Die Studierendens sind befähigt, einzelne Optimie rungsansätze auch auf andere Problemstellungen anzupassen. — Participants learn theoretical and practical competencies forthe conception, implementation, and evaluation of search algorithms and their application to problems in software engi neering. In particular, participants will be able to implement  these algorithms and apply them to new problems.",• Local Search • Evolutionary Algorithms • Multi-Objective Optimisation • Memetic Algorithms • Novelty Search • Parallel Search • Search-based Testing • Genetic Programming • Genetic Improvement • Program Repair,"90-minütige Klausur oder Porfolio-Prüfung. Mögliche Port- foliobestandteile sind technische Berichte, dokumentierterund funktionsfähiger Quelltext für Softwareanalysen, Live Systemdemonstration, Teilpräsentationenzu Einzelleistungen, laufende, fortzuschreibende technische Teilberichte zur Zusammenfassungzueinem Gesamtdokument, Abschlusspräsen tation. Die genauen Anforderungen werden vom Dozierenden zu Beginn der Veranstaltung bekanntgegeben. 90-minute exam or portfolio-exam. The exact mode of assess ment will be announced at the start of the semester.","Präsentation, Beamer, Übungsblätter Presentation, projector, exercises",wird in Abhängigkeit von der konkreten Aufgaben- stellung ausgewählt und bekanntgegeben. Will be announced in the lectures. Further reading will be an nounced for the individual assignments.,MSc AI Engineering and MSc Informatik/ Computer Science
5874,IT-Sicherheitsrecht,222431,Jedes Wintersemester Every winter semesters,1 Semester,"Schröder, Lewinski (Juristische Fakultät / Faculty of Law)",Hartl (Juristische Fakultät / Faculty of Law),Deutsch German,Modulgruppe „C CC“ Focus „C CC“,2 V,30 Std. Präsenz + 120 Std. Nachbereitung und Prüfungsvor- Workload bereitung 30 contact hours + 120 hours self study,ECTS/Credits: 5,Keine None,Keine None,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden erwerben Kenntnisse der Rechtsgrundla-gen des I T-Sicherheitsrechts (verfassungsrechtliche Grundla gen und öffentlich sowie zivilrechtliche Bezüge einschließlichdes Datenschutzrechts und weiterer spezialgesetzlicher Regelungen) sowie des Themenkomplexes I T-Sicherheitsrecht ins gesamt aus politischer, wirtschaftlicher und technischer Perspektive; diesschließtdie Kenntnisderwichtigstenhöchstrichterlichen Rechtsprechung mit ein. Zudem erlangen die Studierenden Kenntnis von Fallkonstellationen, in denen technische Systeme und ihr Einsatz in der Praxis typischerweise I T sicherheitsrechtliche Fragen aufwerfen. Fähigkeiten / Abilities Die Studierenden beherrschen die Erfassung juristischer Pro bleme technischer Sachverhalte auf Basis der relevantenrechtlichen Grundlagen im I T-Sicherheitsrecht. Die Studie renden beherrschen die Erarbeitung von Lösungsvorschlägenfür die jeweiligen rechtlichen Probleme im Themenbereich I T Sicherheit. Kompetenzen / Competencies Die Studierenden besitzen die Kompetenz zur Anwendungspezifisch juristischer Methoden der Fallbearbeitung undlösung sowie Transferkompetenz zur Anwendung des erworbenen Wissens und der erworbenen Fähigkeiten auf die ty pischerweise sehr schnell auftretenden neuen Probleme des I T-Sicherheitsrechts. Sie beherrschen die Interaktion zwischen technischundjuristischausgebildeten Personenimberuflichen Umfeld (gegenseitige Wissensvermittlung, gemeinsame Pro blemlösungsstrategien).","Zunächst erfolgt eine grundlegende Einführung in die Thema- tikdes IT-Sicherheitsrechts. Dabeiwerden Grundfragenanden Schnittstellen von Technik und Recht sowie rechtliche Grund prinzipien vorgestellt und ergänzend die relevanten Normenund die Arbeit mit zentralen rechtlichen Konzepten (allgemeine Grundlagendes Zivilrechtsundöffentlichen Rechtswie Haftung, Anspruchsgrundlagen, Verschulden und Verschuldens typen, auslegungsbedürftige Tatbestandmerkmale, Ermessen oder Formen des Verwaltungshandeln) eingeführt. Es folgen themenspezifische Blöcke immer unter Rückgriffauf eingeführten Grundlagen. Dabei werden – unter Be rücksichtigung aktueller Entwicklungen und Schwerpunkte –Grundrechte und staatliches Eingriffshandeln sowie Schutz pflichten, Grundlagen des Datenschutzrechts, des technischen Datenschutzes, I T-Sicherheit im arbeitsrechtlichen Kontext, Haftungs- und Produkthaftungsfragen (einschließlich Vertragsgrundlagen und Providerhaftung), strafrechtliche Flan kierung sowie Frage nach der rechtskonformen Modellierungder Organisation der I T-Sicherheit im Unternehmen behandelt. Schließlich sind öffentlich-rechtliche Regularien und Vor gabenanden Schutz(kritischer)technischer Infrastruktur Teil der Veranstaltung.  Schwerpunkt der Veranstaltung sind insgesamt, vor dem Hintergrund der genannten Themen, die mehrdimensionalen rechtlichen Anforderungen an Akteure unter dem Aspekt der IT-Sicherheit, dabei vor allem die Vermeidung rechtlicher Ri siken und der Umfang rechtlicher Verantwortung auf privater Ebenesowie Auftretenund(mögliche)Regulieransätzederöf fentlichen Hand.","90 Minuten Klausur oder ca. 20 Minuten mündliche Prüfung, jenach Anzahlder Hörer. Diegenaue Prüfungsartwirdzu Be- ginn des Semesters bekannt gegeben. Written exam (90 minutes) or oral exam (about 20 minutes); the precise mode of assessment will be announced at the start of the semester.",Präsentation und Beamer Presentation and projector,"Köhler/Fetzer - Recht des Internet (Start ins Rechtsgebiet), 2016 Voigt, I T-Sicherheitsrecht, 2018 Kühling/Klar, Datenschutzrecht (Start ins Rechtsgebiet), 2018 Hornung/Schallbruch (Hrsg. ), I T-Sicherheitsrecht, 2020 Weitere Hinweise in der Vorlesung",MSc AI Engineering and MSc Informatik/ Computer Science
5942,Network Science,482601,Unregelmäßig Irregular,1 Semester,Granitzer,Granitzer,Englisch English,Modulgruppe „A IA“ Focus „A IA“,2 V + 1Ü,"45 Std. Präsenz + 105 Std. Übungsaufgaben/Referate, Vor- Workload arbeit und Nacharbeit 45 contact hours + 105 hours exercises, preparation and follow-up",ECTS/Credits: 5,Data Science,Keine None,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge The students gain insights into Modeling and analysing com-plexreal-worldnetworkswithaspecialemphasisonsocialnet works. In particular knowledge on the following topics will be gained: • Basic Graph Theory (Undirected/Directed/Bipartite  Graphs, Connectivity, Graph Traversal) • Properties of Social Networks (Strong and Weak ties, Structural Balance, Context in Social Netzworks, Small World Networks) • Properties of Information Networks (Structure of the Web, Decentralized Search, Navigability oft he Net works) • Network Dynamics and Evolution Fähigkeiten / Abilities The students will be able to analyse complex real-world net works and draw conclusions on their structural properties anddynamics. They will be able to develop and apply different algorithmsforanalysingnetworks, likeforexampleclusteringal gorithms for detecting sub-structures and traversal algorithms for estimating statistical properties (e. g. centrality, clustering coefficient). Furthermore, students will be able to interpret the outcome of the algorithms in terms of underlying socialtheories, like for example Triadic Closure or Structural Balan ce Theory. Kompetenzen / Competencies Students aquire the competencies to analyse network dataespecially in web-based information systems and use this ana lysis to understand and refine those information systems.","In particular, the following topics are covered: • Basic Network Theory (Graph Types, Connectivity, Graph Traversal) • Networks (Small World Phenomenon, Strong and Weak Ties, Information Flow, Community Detection) • Analysing the context of social networks (Homophily and Segregation) • Positive and Negative Relationships in Networks• Information Networks (Structure oft he Web, Link Ana lysis and Web Search) • Network Dynamics (Population Models, Information Cascades, Rich-get-richer, Cascading Behavior in Net works, Network Epidemics)",90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 90-minute written or 20-minute oral examination. The mode of assessment will be announced at the start of the semester.,"Beamer, Tafel Blackboard, projector","Networks, Crowds, and Markets: Reasoning About a Highly Connected World von David Easley und Jon Kleinberg von Cambridge University Press Barabási, Albert-László. Network science. Cambridge Univer sity Press, 2016. Mark Newman, Networks: An Introduction. Oxford University Press, 2010",MSc AI Engineering and MSc Informatik/ Computer Science
5943,Data Science Lab,482604,Unregelmäßig Irregular,1 Semester,Granitzer,Granitzer,Englisch English,Modulgruppe „A IM“ Focus „A IM“,4Ü,60 Std. Präsenz + 120 Std. Vor- und Nachbearbeitung des Workload Praktikums 60 contact hours + 120 h self-study and implementation,ECTS/Credits: 6,Keine None,"Visual Analytics oder Network Science oder Advanced Topics in Data Science, Kenntnisse in Python Visual Analytics or Network Science or Advanced Topics in Data Science, Python Programming Language","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Students will acquire knowledge of current data analysis tech-nologies and corresponding python libraries to analyze web baseddatasetssuchas Webpages, socialnetworks, userdata, etc. They will obtain methodological knowledge.  Fähigkeiten / Abilities Students acquire the ability to apply data science technologyon web data and to extract interesting patterns from very lar ge data sets. They will develop the ability to use appropriate software libraries and tools to do so. Kompetenzen / Competencies Studentsacquiretheskillstoanalyzemassive, web-baseddata sets and extract interesting patterns.","Students will work in groups on selected data science specific problems, like for example extracting communities from soci- al networks, clustering web pages, analyzing trends in social media or identifying mobility patterns. Students will be given a small research projects in the formof an analysis goal, a data set and a target metric. The re search project will be conducted in four phases, supervised by the lecture. In every phase, one team member takes the responsibility. The following phases are foreseen: • Design Phase: Students will conduct a state of the art analysis on currently best performing methods on thedomain and corresponding libraries. Based on this ana lysis, students will design their experiment in terms ofanalysismethods, datapreprocessingandevaluationap proach. The experimental design will be reported in the form of a presentation. • Data Preprocessing:Studentswill applydatapreproces sing methods in order to convert raw data into a usableformat for subsequent data analysis. Results are repor ted in the form of a presentation. • Data Analysis: Students will implement the chosen data analysis methods using selected libraries and apply the implementation to the preprocessed data. Results are reported in the form of a presentation. • Evaluation: Students will evaluate different parameter settingsandalgorithmiccombinationsorderivepatterns from the given data set and interpret those. Finally, the results will be reported in a technical report.",Portfolio exam consisting of a written technical report on the outcome of the project and 4 presentations (one per phase / per team member).,"Tafel, Beamer, Rechner Blackboard, projector, calculator",Own Lecture Notes and selected publications. Literature will be announced depending on the concrete topics.,MSc AI Engineering and MSc Informatik/ Computer Science
5944,Machine Learning Lab,455382,Unregelmäßig Irregular,1 Semester,Granitzer,Granitzer,Englisch English,Modulgruppe „A IM“ Focus „A IM“,4Ü,60 Std. Präsenz + 120 Std. Vor- und Nachbearbeitung des Workload Praktikums60 contact hours + 120 h independent study and implemen tation,ECTS/Credits: 6,Keine None,"Advanced Topics in Data Science oder Visual Analytics, Kenntnisse in Python Advanced Topics in Data Science or Visual Analytics, Python Programming Language","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Students will acquire knowledge on implementation details ofmachinelearningandoptimizationalgorithmsandhowtorealize them using numerical libraries in Python. Covered algo  rithms include supervised, unsupervised and semi-supervisedalgorithms like decision trees, support vector machines, Baye sian classifiers, hierarchical agglomerative clustering, Geneticalgorithms etc. as well as optimization methods (e. g. stocha stic gradient descent, Ada Grad). Fähigkeiten / Abilities Students acquire the ability to implement machine learning algorithms from scratch using only numerical libraries. Theywill be able to evaluate their implementation and identify po tential implementation errors. Kompetenzen / Competencies Students acquire the skill to convert machine learning algo rithmsprovidedinamathematicalformulationorpseudo-codeinto concrete implementations. These skills include the imple mentation of performance metrics and the evaluation of theimplemented algorithms without the help of third-party libra ries.","During the semester, Students will be presented 6-10 diffe- rent machine learning algorithms covering supervised, unsu- pervised, and semi-supervised learning paradigms as well as different optimization methods. Examples are Decision Trees, Random Forests, Feedforward Neural Networks, Naive Bayes, Hierarchical Agglomerative Clustering, D BScan, Support Vec tor Machine, Support Vector Regression, Stochastic Gradient Descent, Ada Grad etc. During the lab sessions, students will have to implement tho se algorithms independently of each other using high-level programming languages, particularly Python, but without thehelp of any high-level library. Students will also have to de velop corresponding evaluation metrics, like precision, recall, accuracy, average precision etc. and evaluate the algorithms based on standardized test data sets.","Portfolio exam consisting in the submission of the implemen- tation code for selected machine learning algorithms plus do- cumentation and the evaluation on a provided test-datasets. Students present their solution and results. (see § 5 Abs. 1 Nr. 4, Point 3 F Stu Po Master Computer Science)","Tafel, Beamer, Rechner Blackboard, projector, calculator",Own Lecture Notes and selected publications. Literature will be announced depending on the concrete topics.,MSc AI Engineering and MSc Informatik/ Computer Science
5945,Advanced Topics in Data Science,482603,Unregelmäßig Irregular,1 Semester,Granitzer,Granitzer,Englisch English,Modulgruppe „A IM“ Focus „A IM“,2 V + 1Ü,"45 Std Präsenz + 105 Std. Übungsaufgaben/Referate, Vor- Workload und Nachbereitung45 contact hours + 105 hrs exercises, preparation and follow up",ECTS/Credits: 5,Keine None,Data Science,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge The students will engage advanced topics and recent deve- lopments in the field of data science. Special emphasize willbe placed on natural computing techniques, like genetic algo rithms and deep neural networks, as well as on reinforcement learning. The students will obtain in-depth knowledge on the particular algorithms and application areas (with focus web based information systems). Fähigkeiten / Abilities The students will be able to implement data analytical algo rithms, in particular deep neural network and reinforcementlearning approaches. They will be able to run advanced expe riments on large data sets. Kompetenzen / Competencies Thestudentswillobtainthecompetenciestoutilizerecentda ta analytical methods, like deep learning, for analysing largedatasetsfromweb-basedinformationsystems(e. g. socialme dia). Students will be enabled to setup experiments, conduct and evaluate them properly.","The following topics will be covered: • Natural Computing • Deep Neural Networks• Representational Learning with Deep Networks inclu ding Autoencoder Networks (Denoising, Variational, Sparse), Hopfield Networks, Boltzmann Machines • (Deep) Convolutional Neural Networks • Recurrent Neural Networks • Deep Residual Networks • Deep Reinforcement Learning • Selected Application Areas",90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben 90-minute examination or 20-minute oral examination. The precise mode of assessment will be announced at the start of the semester,"Tafel, Beamer Blackboard, projector",Own Lecture Notes and selected publications. Literature will be announced depending on the concrete topics.,MSc AI Engineering and MSc Informatik/ Computer Science
5951,Theory of Evolutionary Computation,455399,Unregelmäßig Irregular,1 Semester,Sudholt,Sudholt,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,3 V + 2Ü,75 Std. Präsenz + 60 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 75 contact hours + 60 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 7,Keine None,"Algorithmen und Datenstrukturen, Enführung in die Stochas- tik Algorithms and Data Structures, Introduction to Stochastics","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Am Ende der Lehrveranstaltung werden Studierende in der Lage sein, • die Effizienzevolutionärer Algorithmenmitentsprechen den Analysemethoden zu analysieren, • die Funktionsweise evolutionärer Algorithmen zu verste  hen und ihre Stärken und Schwächen zu kennen, • den Effekt algorithmischer Design-Entscheidungen und Parameterwahlen auf die Performanz evolutionärer Al gorithmen zu verstehen, • fundierte Design-Entscheidungen bei der Anwendung evolutionärer Algorithmen zu treffen und• die Effizienz evolutionärer Algorithmen auf anschauli chen Problemen zu beschreiben. — At the end of the course students will be able to • analyse the efficiency of evolutionary algorithms using appropriate analytical methods• understand the working principles of evolutionary algo rithms along with their strengths and weaknesses, • appreciate the effect of design choices and parameters on the performance of evolutionary algorithms, • make informed design choices when using evolutionary algorithms, and• describe the efficiency of evolutionary algorithms on il lustrative problems.",Motivation für die Theorie evolutionärer Algorithmen Methoden zur Analyse evolutionärer Algorithmen Laufzeitanalysen für einfache evolutionäre Algorithmen Der Nutzen von Kreuzungen in evolutionären Algorithmen Analyse evolutionärer Algorithmen auf Problemen der kombi natorischen Optimierung und auf multikriteriellen Problemen Verteilte evolutionäre Algorithmen Adaptive Parameter Black-Box-Komplexität — Motivation for a theory of evolutionary algorithms Tools for the analysis of evolutionary algorithms Runtime analyses for simple evolutionary algorithms The usefulness of crossover in evolutionary algorithms Analyses of evolutionary algorithms on problems from combi natorial optimisation and multi-objective problems Parallel evolutionary algorithms Parameter control Black-box complexity,90min Klausuroderca. 25minmündliche Prüfung; diegenaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 90-minuteexaminationor25-minuteoralexamination; theex act mode of assessment will be indicated at the beginning of the semester.,"Präsentation mit Tafel und Beamer Presentation with a projector, blackboard","Lectures will be based on books, research papers, surveys and tutorials. Related books include:Frank Neumann, Carsten Witt (2010): Bioinspired Com putation in Combinatorial Optimization – Algorithmsand Their Computational Complexity. Natural Compu ting Series, Springer, I SB N 978-3-642-16543-6. (http:// bioinspiredcomputation. com/)Thomas Jansen (2013): Analyzing Evolutionary Algorithms The Computer Science Perspective, Natural Computing Se ries, Springer, I SB N 978-3-642-17339-4. Benjamin Doerrand Frank Neumann(Eds. ):Theoryof Evolutionary Computation - Recent Developments in Discrete Optimization, Natural Computing Series, Springer, I SB N 978-3 030-29413-7. A. Auger, B. Doerr (Eds. ): Theory of Randomized Search Heuristics - Foundations and Recent Developments, Series on Theoretical Computer Science 1, I SB N: 978-981-4282-66-6, World Scientific.",MSc AI Engineering and MSc Informatik/ Computer Science
5952,Randomisierte Algorithmen,455388,Unregelmäßig Irregular,1 Semester,Sudholt,Sudholt,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,3 V + 2Ü,75 Std. Präsenz + 60 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 75 contact hours + 60 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 7,Keine None,"Algorithmen und Datenstrukturen, Enführung in die Stochas- tik Algorithms and Data Structures, Introduction to Stochastics","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Am Ende der Lehrveranstaltung werden Studierende in der Lage sein, • die Effizienz randomisierter Algorithmen zu analysieren, • Randomisierung als Werkzeug beim Design effizienter  Algorithmen einzusetzen, • die Vor-und Nachteilevon Randomisierungzubeschrei ben, • grundlegende randomisierte Algorithmen für wichtige Probleme zu beschreiben, und• ein Themaim Bereichrandomisierte Algorithmeneigen ständig darzustellen. — At the end of the course students will be able to • analyse the efficiency of randomised algorithms, • use randomness as a tool in the design of efficient algo rithms, • describe the pros and cons of randomised algorithms, • describefundamentalrandomisedalgorithmsforimport ant problems, and • work independently on describing a topic from the area of randomised algorithms.","Motivation und Klassifikation randomisierter Algorithmen Paradigmenfürden Entwurfrandomisierter Algorithmen(z. B. Methodeder Fingerabdrücke, Wahrscheinlichkeitsverstärkung, randomisiertes Runden)Methoden zur Analyse randomisierter Algorithmen (z. B. pro babilistische Rekurrenzen, Markoffketten, Random Walks, Markoff- und Chernoff-Schranken)Randomisierte Algorithmen für grundlegende Optimierungs probleme (z. B. Schnittprobleme, Max Sat) —Motivationforrandomisedalgorithmsandclassificationofran domised algorithms Paradigms for the design of randomised algorithms (e. g. fin gerprinting, probability amplification, randomised rounding)Methods for the analysis of randomised algorithms (e. g. pro babilisticrecurrences, Markovchains, randomwalks, Markov’s inequality and Chernoff bounds)Randomised algorithms for fundamental optimisation pro blems (e. g. cut problems, Max Sat)","Zwei Teilleistungen: Teilleistung 1 (80%): Klausurodermündliche Prüfung; diegenaue Prüfungsartwird zu Beginn des Semesters bekannt gegeben. Teilleistung 2 (20%):Schriftliche Ausarbeitung (bis zu 10 Seiten) über ein zusätzli ches Thema aus dem Gebiet randomisierte Algorithmen. Zum Bestehen des Moduls müssen beide Teilleistungen be  standen werden. — Two assessment components: component 1 (80%): Written or oral exam; the exact mode of assessment will be indicated at the beginning of the semester. component 2 (20%): Written work (up to 10 pages) on a subject from randomised algorithms. To pass the examination, both assessment components have to be passed.","Präsentation mit Tafel und Beamer Presentation with a projector, blackboard","Juraj Hromkoviˆc, Randomisierte Algorithmen. Teubner, 2004 Rajeev Motwani, Prabhakar Raghavan, Randomized Algo- rithms. Cambridge University Press, 1995. Michael Mitzenmacher, Eli Upfal, Probabilityand Computing, 2nd edition, Cambridge University Press, 2017",MSc AI Engineering and MSc Informatik/ Computer Science
5960,Partielle Differentialgleichungen,405167,Unregelmäßig Irregular,1 Semester,Wirth,"Mironchenko, Wirth",Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,3 V + 2Ü,45 Std. Präsenz + 30 Std. Übungen + 75+75 Std. Nachbe- Workload reitung der Vorlesung und Prüfungsvorbereitung 45contacthours+30hrsexercises+75+75hrsindependent study and exam preparation,ECTS/Credits: 7,Keine None,"Analysis I+I I, Lineare Algebra I+I I, Gewöhnliche Differential- gleichungen Analysis I+I I, Linear Algebra I+I I, Ordinary Differential Equa tions","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Nach Beendigung dieser Lehrveranstaltung sind Studierende in der Lage, • Fragestellungen der Naturwissenschaften mithilfe von partiellen Differentialgleichungen (P DGl) zu modellie ren. • Techniken für die analytische Lösung von Anfangsrand wertaufgaben für P DGl anzuwenden. • die Wohlgestelltheit von Anfangsrandwertaufgaben für P DGl zu untersuchen. • dasasymptotische Verhaltender Lösungenvon PD Glzu analysieren. — The students will be able to • Model the questions of the natural sciences using the partial differential equations (P DEs). • Apply the techniques for the analytic solution of the initial boundary value problems for P DEs. • Analyze the well-posedness of the initial boundary value problems for P DEs. • Analyze the asymptotic behavior of the solution of P DEs.","Folgende Themen werden behandelt: • Modellierung durch partielle Differentialgleichungen • Partielle Differentialgleichungen erster Ordnung. • Sobolevräume • Anfangsrandwertaufgaben für elliptische, parabolische, und hyperbolische Gleichungen. • Darstellungsformeln für die Lösungen von linearen P DGl. • Asymptotik partieller Differentialgleichungen — The following topics will be studied: • Modeling via partial differential equations. • P DEs of the first order • Sobolev spaces • initialboundaryvalueproblemsforelliptic, parabolicand hyperbolic P DEs • Representation formulas for linear P DEs • Asymptotics of P DEs",Zwei Teilleistungen: Teilleistung 1 (80%): 90 min Klausur oder ca. 30 min mündliche Prüfung. Diegenaue Prüfungsartwirdzu Beginndes Semestersbekannt gegeben. Teilleistung 2 (20%): Ausarbeitung (bis zu 10 Seiten) über ein vertiefendes Thema der P DGl. Zum Bestehen des Moduls müssen beide Teilleistungen be standen werden. Examination in two parts: Part 1 (80%): 90-minute examination or 30-minute oral examination. Theprecisemodeofassessmentwillbeannouncedatthestart of the semester. Part 2 (20%): Written paper (up to 10 pages) on an advanced subject from P DEs. To pass the examination both parts have to be passed.,"Tafelanschrieb, Online Lehre via Zoom Blackboard, online teaching via Zoom","L. Evans. Partial Differential Equations, A MS, 2010 W. A. Strauss. Partielle Differentialgleichungen, Vieweg, 1995 C. Cryer. Numerik Partieller Differentialgleichungen (Vorle sungsskript)",MSc AI Engineering and MSc Informatik/ Computer Science
5962,Symbolische Dynamik und Kodierung,405212,Unregelmäßig Irregular,1 Semester,Wirth,Epperlein,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,"60+30 Std. Präsenz, 90+90 Std. Eigenarbeitszeit Workload 60+30 contact hours, 90+90 hours independent study",ECTS/Credits: 9,Keine None,"Analysis I+I I, Lineare Algebra I+I I Analysis I+I I, Linear Algebra I+I I","Verwendbarkeit in weiteren Lehramt Mathematik, Bachelor Mathematik, Master Informa Studiengängen tik Teacher training programme for secondary education in Ma-thematics(Gymnasium), Bachelor Mathematics, Master Com puter Science","Kenntnisse / Skills/Knowledge Die Studierenden kennen nach dieser Vorlesung symbolische dynamische Systemeundwissen, wiesichallgemeine Konzepteder Theorie dynamischer Systeme für deren Analyse anwen den lassen. Ferner kennen sie grundlegende Zusammenhänge zwischensymbolischen Systemen, Graphentheorieundder Ko dierung und Dekodierung von Daten. —After completion of this course the students know about sym bolic dynamical systems and how to apply general concepts from the theory of dynamical systems to the study of shift spaces. Furthermore, theyknowthebasicconnectionsbetween symbolic systems, graph theory and (de-) coding of data. Kompetenzen / Competencies Die Studierenden können Werkzeuge aus verschiedenen Bereichen der Mathematik und theoretischen Informatik kombinieren und zur Analyse symbolischer Systeme anwenden. Ins besondere können sie symbolische Systeme mit topologischen Methoden untersuchen. Sie können Algorithmen zur Bestim mung von Codes mit vorgegebenen Eigenschaften anwenden. — The student are able to combine tools from diverse areas ofmathematics and theoretical computer science and to app ly them to the analysis of symbolic system. In particular they areabletostudysymbolicsystemsusingtopologicalmethods. Theycanapplyalgorithmstodeterminecodeswithprescribed properties.","Folgende Themen werden behandelt: Shift-Räume, Gra- phen, Codes, Entropie, Perron-Frobenius-Theorie, topologi- sche Markov-Ketten, zelluläre Automaten, Klassifikations-und Entscheidbarkeitsprobleme für Eigenschaften dieser Systeme — The following topics will be covered: shift spaces, graphs, codes, entropy, Perron-Frobenius theory, topological Markovchains, cellular automata, classifcication and decision pro blems for properties of these systems",120-minütige Klausur oder mündliche Prüfung (ca. 30 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 120-minute written exam or oral exam of about 30 minutes. Theprecisemodeofassessmentwillbeannouncedatthestart of the semester.,"Beamer-Präsentation, Tafel, Vorlesungsskript, Übungsblätter Presentation with projector, blackboard, lecture notes, exerci- se sheets","D. Lind, B. Marcus: An Introduction to Symbolic Dynamics and Coding. Cambridge University Press, 1995",MSc AI Engineering and MSc Informatik/ Computer Science
5970,Scaling Database Systems,451016,Jedes Wintersemester Every winter semester,1 Semester,Scherzinger,Scherzinger,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,2 V + 2Ü,60 Std. Präsenz + 45 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 45 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Programmierkenntnisse, Grundlagen Datenbanken- und Infor- mationssysteme (D BI S I + I I)Programming skills, fundamentals of databases and informa tion systems (D BI S I + I I)","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden verstehen die Bedeutung von Skalierbarkeitbei der Verarbeitung von großen Datenmengen. Sie verste hen die Stärken und Grenzen von No SQ L Datenbanksystemen  sowie den Zusammenhang zwischen der Architektur und der Leistungsfähigkeit eines Datenbankmanagementsystems. — The students understand the importance of scalability when managing large amounts of data. They understand aboutstrengths and limitations of No SQ L data stores and how da tabase systems architecture enables performance. Fähigkeiten / Abilities Die Studierenden besitzen die Fähigkeit, für ein konkretes Datenverarbeitungsproblem ein geeignetes No SQ L Datenbank managementsystem auszuwählen. — The students are able to map a specific data management problem to a suitable No SQ L database management system. Kompetenzen / Competencies Die Studierenden können eigene Optimierungen für Datenma nagementsysteme entwickeln und auch implementieren. —Thestudentshavethecompetencetodesigntheirownoptimi zations for data management systems and implement them.",• Speicherung von großen Datenmengen in Big Table- basierten Systemen wie Hadoop File System (H DF S). • Verarbeitung von großen Datenmengen in Map Reduce basierten Systemen wie Hadoop. • Optimierung der Ausführung von S QL Anfragen auf großen Datenmengen (analog zu Hive und Spark). —• Managing large amounts of data in Big Table-based sys tems such as Hadoop File System (H DF S). • Processing large amounts of data in Map Reduce-based systems such as Hadoop. • Optimized evaluation of S QL queries on large volumes of data (as done in Hive and Spark).,"Teil1:Individuelles Programmierprojekt„mini Hive“in Python Teil 2: 60 min. schriftliche Klausur Die Punkte für die Gesamtnote errechnet sich 30% aus Teil 1, und zu 70% aus Teil 2. Part 1: Individual Programming project “mini Hive” in Python Part 2: 60-minute written examination The points for the final grade are computed as follows: 30% from part 1, 70% from part 2.","Flipped Classroom (Videos im Selbststudium, Vertiefung des Stoffes anhand von Übungsaufgaben im Präsenzstudium), be-  gleitendes Programmierprojekt (Python) Flipped classroom (videos for self-study, in-class exercises), programming project (Python)","Peter Bailis, Joseph M. Hellerstein, Michael Stonebraker, (edi- tors), Readings in Database Systems, 5 th edition. Anand Rajaraman, Jeffrey Ullman: Mining of Massive Data sets, Cambridge University Press, 2020. Martin Kleppmann: Designing Data-Intensive Applications, O’Reilly, 2017. Stefanie Scherzinger, Build your own S QL-on-Hadoop Query Engine: A Report on a Term Project in a Master-level Data base Course, S IG MO D Record, June 2019.",MSc AI Engineering and MSc Informatik/ Computer Science
5972,Reproducibility Engineering,455420,Unregelmäßig Irregular,1 Semester,Scherzinger,Scherzinger,Englisch English,Modulgruppe „C CC“ Focus „C CC“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Grundlegende Programmierkenntnisse, z. B. Python, Erstellen von Dokumenten mit La Te X, Arbeiten mit der Linux Shell Basic programming skills, e. g. , Python, writing documents with La Te X, working with the Linux shell",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Studierende verstehen den Unterschied zwischen den Termi-ni Repeatability, Reproducibility und Replicability in Daten analysen. Die Studierenden erkennen typische Schwächen und Nachteile von Datenanalyse-Pipelines. Sie wissen, wie Forschungsartefakte strukturiert und dokumentiert werden müssen, um autarkes Verständnis der beinhalteten Daten sicherzustellen. Die Studierenden verstehen, wie ein Reproduktions paket Artefakte organisiert. —Students understand the difference between repeatability, re producibility, andreplicabilityofdataanalyses. Theyrecognize common weaknesses in data analysis pipelines. The students know how to structure and document research artefacts and how a reproduction package organizes research artifacts. Fähigkeiten / Abilities Die Studierenden können bestehende Forschungsanstrengun gen reproduzieren, wenn ein Reproduktionspaket vorhandenist. Sie erkennen typische Schwächen in bestehenden Reproduktionspaketen und sind in der Lage, eigene Reproduktions pakete von Grund auf zu entwerfen und zu veröffentlichen. — The students are able to reproduce research results, given a reproduction package. They recognize obvious weaknesses ingiven reproduction packages and are able to design and pu blish a reproduction package of their own. Kompetenzen / Competencies Die Studierenden sind in der Lage, die erlernten Kompetenzen in ihrer eigenen Forschung anzuwenden (z. B. im Rahmen der Masterarbeit). Sie sind in der Lage, die erlernten Kompeten zen in ihrer künftigen Erwerbstätigkeit (sowohl in Forschung als auch in Industrie) anzuwenden. — The students are able to apply the skills acquired to their own research (e. g. , preparing their Masters thesis). They are able to transfer the skills acquired in their future careers (both in academia and industry).","• The replication crisis • Repetition, replication, and reproduction• Structured presentation of results and literate program ming techniques • Different types of reproducibility • Deterministic builds • Ascertaining long-term availability • Producing consistent, readable histories • Electronic notebooks • Packaging research artefacts • Describing execution environments • Traps and Pitfalls  • D OI safety • Dealing with proprietary artefacts • Dealing with hardware • End-to-end reproduction• Lab Session(continuous):Guidedhands-onanalysispro jects based on real-world scientific data","Portfolio-exam with three deliverables: (1) a 2-page written report, (2) a fully automated reproduction package for an in-dividual data analysis project, and (3) a 15-minute presenta tion. The individual project is chosen in agreement with the lecturer, e. g. , reproduction of published research; designing re production approaches for projects in the students’ field of study; presentation of experiments or deep-dives into selected aspects of reproducibility.","On-site lectures, enhanced with course videos. On-site lab exercises.","Hadley Wickham, Garret Grolemund: R for Data Science: Im- port, Tidy, Transform, Visualize, and Model Data, O’Reilly (2017) Victoria Stodden, Friedrich Leisch, and Roger D. Peng (eds): Implementing Reproducible Research, C RC Press (2014)Justin Kitzes and Daniel Turek and Fatma Deniz: The practi ce of reproducible research: case studies and lessons from the data-intensive sciences, University of California Press (2017)",MSc AI Engineering and MSc Informatik/ Computer Science
5973,SQL for Data Science,472790,Unregelmäßig Irregular,1 Semester,Scherzinger,Scherzinger,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Programmierkenntnisse, Grundlagen Datenbanken- und Infor- mationssysteme (D BI S I + I I)Programming skills, fundamentals of databases and informa tion systems (D BI S I + I I)","Verwendbarkeit in weiteren Master Informatik, Master Wirtschaftsinformatik, Master Studiengängen Business Administration Master Computer Science, Master Information Systems, Mas- ter Business Administration","Kenntnisse / Skills/Knowledge S QL proficiency within the context of data science; Under- standing of the data life cycle; Handling non-traditional data formats like X ML and text; Integration of S QL with program ming languages Fähigkeiten / Abilities Perform data analysis tasks using S QL; Write efficient S QL queries, avoid S QL anit-patterns; Understand and navigate the data life cycle; Handle diverse data formats for analysis; Utilize S QL in conjunction with R and Python for enhanced data analysis capabilities Kompetenzen / Competencies Proficiency in S QL for data science applications; Competence in data loading, cleaning, and pre-processing; Ability to apply SQ L queries for data exploration, cleaning, and transformati on; Capability to integrate S QL with programming languages for enhanced data analysis workflows","This advanced database class offers a comprehensive under- standing of the data life cycle and the potential of S QL in various data analysis tasks. Students explore topics rangingfrom data loading and cleaning to pre-processing, while mas tering relational databases and handling non-traditional data formats such as X ML and text. Integration with programminglanguages like R and Python further enriches students’ abilities, enabling seamless interaction with databases and enhan cing data analysis workflows. Practical exercises and hands-onexperience with My SQ L and Postgres databases solidify stu dents’ competencies, equipping them with the essential skills to excel in data science and database management roles.",60-minütige Klausur 60-minute written examination,"Präsentation und Beamer, Arbeitsblätter Presentation and projector, worksheets","Antonio Badia:S QLfor Data Science-Data Cleaning, Wrang- ling and Analytics with Relational Databases. Springer 2020 Bill Karwin:S QL Antipatterns. Pragmatic Programmers, L LC, 2017 Raghu Ramakrishnan, Johannes Gehrke: Database Manage ment Systems. Mc Graw-Hill, 3rd edition, 2020",MSc AI Engineering and MSc Informatik/ Computer Science
5980,Text Mining,405024,In der Regel jedes Sommersemester Usually every summer semester,1 Semester,Granitzer,Mitrovic,Englisch English,Modulgruppe „A IA“ Focus „A IA“,3 V + 2Ü,75 Std. Präsenz + 50 Std. Übungen + 85 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 75 contact hours + 50 hrs exercises + 85 hrs independent study and exam preparation,ECTS/Credits: 7,Keine None,"Lineare Algebra, Wahrscheinlichkeitsrechnung, Programmier- kenntnisse in Java oder Python Linear Algebra, probability theory, programming in java or py thon","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden sollen die Grundlagen des Text-Mining ver-stehen. Sie erwerben Kenntnisse über textorientierte Algorithmenmitderen Hilfe Kerninformationenderverarbeiteten Tex  te schnell erkannt werden. — The students have an understanding of the basic concepts oftext mining. They know text-orientated algorithms for iden tifying core information of processed texts quickly. Kompetenzen / Competencies Die Studierenden erwerben die Kompetenzen, einen Textkor pus zu analysieren und interessante Muster zu extrahieren. — The students acquire the skills to analyse a text corpus and extract interesting patterns.",e werden geboten: • Text Processing und Edit Distance • Language Modeling • Text Classification und Sentiment Analysis • Maxent Model und Named Entity Recognition • P OS Tagging / Parsing • Lexical Semantics • Informationsextraktion • Trend und Topic Detection,90 min Klausur oder ca. 15 min mündliche Prüfung. Die ge- naue Prüfungsart wird zu Beginn des Semesters bekannt ge- geben. 90-minute examination or 15-minute oral examination. The precise mode of assessment will be announced at the start of the semester.,"Tafel, Projektor, Rechner Blackboard, projector, computer","Christopher Manning und Hinrich Schütze. Foundations of Statistical Natural Language Processing Christopher D. Manning, Prabhakar Raghavan and Hinrich Schütze, Introduction to Information Retrieval Eigenes Skriptum / Lecture notes",MSc AI Engineering and MSc Informatik/ Computer Science
5994,Numerik der Polynom- und rationalen Approximation,485383,Unregelmäßig Irregular,1 Semester,Forster-Heinlein,Forster-Heinlein,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,2 V + 1Ü,30+15 Std. Präsenz + 50+55 Std. Eigenarbeitszeit Workload 30+15 contact hours + 50+55 hours lecture and tutorials follow-up and exam preparation,ECTS/Credits: 5,Keine None,"Lineare Algebra I + I I, Analysis I + I I, Vorlesung zur Numerik Linear Algebra I + I I, Analysis I + I I, lecture on numerics","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen nach dieser Vorlesung die Konzepteder Polynomapproximation und der rationalen Approximati on. Sie verstehen die Tchebycheff-Approximation und deren numerische Anwendung. Insbesondere kennen und verstehensie die unterschiedlichen Konvergenzeigenschaften für Funkti onsklassen mit unterschiedlicher Regularität.  Fähigkeiten / Abilities Die Studierenden können Approximationsverfahren implementieren, modifizieren und in gewissem Rahmen auch neu entwi ckeln. Insbesondere können sie Polynom-Approximation und rationale Approximation mit anderen Verfahren vergleichen und bewerten. Die Studierenden haben die Kompetenz, mitpolynomialen und rationalen Approximationsverfahren theore tisch und praktisch umzugehen.","Tchebycheff-Polynome zur Interpolation und Approximati- on, Baryzentrische Interpolation, Gibbs Phänomene, Alia-sing, Kriterien zur Konvergenzgeschwindigkeit der Appro ximation, Runges Phänomen, Polynomiale und Rationale Best- und Near-Best-Approximation, Orthogonalpolynome, Carathéodory-Féjer-Approximation",60 min Klausur oder ca. 20 min mündliche Prüfung. Die ge- naue Prüfungsart wird zu Beginn des Semesters bekannt ge- geben. 60-minute written examination or 20-minute oral examinati on. The precise mode of assessment will be announced at the beginning of the semester,"Präsentation, Beamer, Übungsblätter Presentation, projector, exercise sheets","Lloyd N. Trefethen:Approximation Theoryand Approximation Practice. S IA M, 2013",MSc AI Engineering and MSc Informatik/ Computer Science
5995,Advanced Imaging,454020,Unregelmäßig Irregular,1 Semester,Sauer,Sauer,Englisch English,Modulgruppe „A IM“ Focus „A IM“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Analysis I/I I, Lineare Algebra I/I I, Bildverarbeitung Analysis I, I I, Linear Algebra I, I I, Basics of image and signal processing","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierendenkennenfortgeschrittene, moderne Methoden der Bildverarbeitung. —Students know advanced modern methods of image proces  sing. Fähigkeiten / Abilities Die Studierenden können die Herleitung der Methoden nach vollziehen und darauf basierend neue Methoden entwickeln und adaptieren. — Students are able to understand the derivation of methodsand are able to use this ability to develop and adopt new me thods. Kompetenzen / Competencies Die Studierendenhabendie Kompetenz, fortgeschrittene Konzepte und Methoden der Bildverarbeitung für konkrete Pro bleme einzusetzen und zu evaluieren. — Students have the competences to use and evaluate advanced concepts and methods of image processing.","Diffusionsmethodenfür Entrauschenund Komprimierung, ma- schinelles Lernen, Impainting, Sparsity/Compressive Sensing —Diffusion methods for noise reduction and compression, ma chine learning, impainting, sparsity/compressive sensing",Schriftliche Prüfung (90 Minuten) oder mündliche Prüfung (ca. 20 Minuten)Written exam (90 minutes) or oral examination (about 20 mi nutes),Präsentation und Beamer Presentation and projector,"Stockhausen, Methoden der Digitalen Signalverarbeitung Mallat, A Wavelet Tour to Signal Processing Originalarbeiten",MSc AI Engineering and MSc Informatik/ Computer Science
6020,Mathematische Logik,455362,Unregelmäßig Irregular,1 Semester,Kaiser,Kaiser,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,"60 + 30 Std. Präsenz, 120 + 60 Std. Eigenarbeitszeit und Workload Prüfungsvorbereitung 60 + 30 contact hours, 120 + 60 hours independent study and exam preparation",ECTS/Credits: 9,Keine None,Algebra Algebra,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Nach Beendigung dieser Lehrveranstaltung sind Studierende in der Lage, • das Konzept einer formalen Sprache und der Logik 1. Stufe zu verstehen, • zwischen Syntax und Semantik zu unterscheiden, • die Interaktion von Axiomensystemen und Modellbil dung nachzuvollziehen • und diese auf algebraische Theorien anzuwenden, • den Gödelschen Unvollständigkeitssatz wiederzugeben• sowie ein Thema der Mathematischen Logik eigenstän dig darzustellen.",Folgende Themen werden behandelt: • Formale Sprachen und Logik 1. Stufe • Gödelscher Vollständigkeitssatz • Einführung in die Modelltheorie • Modeltheorie einiger algebraischer Strukturen • Entscheidbarkeit • Gödelscher Unvollständigkeitssatz,Zwei Teilleistungen: Teilleistung 1 (80%):120-minütige Klausur oder mündliche Prüfung (ca. 30 Minu ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. Teilleistung 2 (20%): Ausarbeitung (bis zu 10 Seiten) über ein zusätzliches Thema der mathematischen Logik. Zum Bestehen des Moduls müssen beide Teilleistungen be standen werden. Examination in two parts: Part 1 (80%): 120-minute written or oral exam of about 30 minutes. The precise mode of assessment will be announced at the start of the semester. Part 2 (20%):Written work (up to 10 pages) on a subject from Mathemati cal Logic. To pass the examination both parts have to be passed.,"Tafelanschrieb, Overhead, Beamer slides, projector, blackboard",H. Hermes: Einführung in die mathematische Logik. Teubner 1976 W. Hodges: A Shorter Model Theory. Cambridge University Press 2002 Yu. I. Manin: A Course in Mathematical Logic. Springer 1977 Prestel: Einführung in die Mathematische Logik und Modell theorie. Vieweg 1992 P. Rothmaler:Einführungindie Modelltheorie. Spektrum Aka demischer Verlag 1995,MSc AI Engineering and MSc Informatik/ Computer Science
6047,Digital Healthcare,455409,Jedes Jahr Every year,1 Semester,Kranz,Kranz,Deutsch oder Englisch German or English,Modulgruppe „A IS E“ Focus „A IS E“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Erfolgreiche Absolvierung der Module „Mobile Human- Computer Interaction“ oder “Grundlagen der Mensch- Maschine Interaktion”, Kenntnisse in Python",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden lernen die grundlegenden Vorgehensweisen, Methoden und Werkzeuge kennen, um Daten im Bereich Di gital Healthzuerfassen, zuverarbeitenundzubewertenunter Berücksichtigungderbesonderen Anforderungenan Sicherheit und Vertraulichkeit die an personen- und gesundheitsbezogenen sensiblen Daten gestellt werden. Die Studierenden kennen den grundlegend Entwicklungsstand im Bereich Digitali sierung im Gesundheitswesen. An Hand von Beispielbereichen wie Rettungsdienst und persönlichen Gesundheit wird dieser exemplarisch vermittelt und vertieft. Die StudierendenerhalteneinenÜberblicküberdie Strukturenund Formate, indenen Gesundheitsdatenvorliegenkönnen, so wie die zugehörigen rechtlichen Rahmenbedingungen. Kompetenzen / Competencies Die Studierendenkönnenbestehende Lösungenim Bereich Di gital Healthcare grundlegend bewerten und analysieren. Sie können Prototypen für mögliche Anwendungen und Systeme entwerfen und beschreiben und grundlegend mit Hilfe vongeeigneten Prototyping-Werkzeugen beschreiben. Die hierfür notwendigen Vorgehensweisen, Methoden und Werkzeu ge, zum Beispiel zur Entwicklung von „Gesundheits-Apps“, werden beherrscht und können von den Studierenden einge setzt werden. Die Studierenden besitzen die Kompetenzen zur Konzipierung, Durchführung und Evaluationvon Studien, und können bestehende Studienergebnisse grundlegend bewerten. Grundlegende sicherheitstechnische, rechtliche und ethische Aspektebeider Umsetzungvon Projektenim Bereichdes Digi tal Healthcaresindden Studierendenbekanntundim Rahmen von Entwicklungstätigkeiten beachtet und die verschiedenen Phasen integriert.",einden Präsenzübungenundsowie selbständige Vertiefung durch Bearbeitung der Übungs aufgaben,90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten) oder Portfolio-Prüfung; die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. Written exam (60 minutes) or oral exam (about 20 minutes)or portfolio exam; the precise mode of assessment will be an nounced at the start of the semester.,"Präsentation mit Projektor, Tafelanschrieb, Gruppenarbeit Presentation with a projector, blackboard, working in a group",Wird vom Dozent / von der Dozentin bekannt gegeben,MSc AI Engineering and MSc Informatik/ Computer Science
6061,Introduction to Deep Learning,471616,"Unregelmäßig Hinweis: Das Modul ersetzt das alte Modul Deep Learning - keine Doppelanrechung möglich! Irregular Notice: Replacing Deep Learning, cannot be credited twice.",1 Semester,Lemmerich,Lemmerich,Englisch English,Modulgruppe „A IM“ Focus „A IM“,2 V + 2Ü,60 Std. Präsenz + 120 Std. Vor- und Nachbearbeitung des Workload Praktikums60 contact hours + 120 hrs independent study and implemen tation,ECTS/Credits: 6,Keine None,"Advanced Topics in Data Science oder Introduction to A I En- gineering, Grundkenntnisse in Python Advanced Topics in Data Science or Introduction to A I Engi neering, Python Programming Language","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge  Students will get to know about fundamentals of artificial neural networks, gain an overview on standard algorithms inthefieldaswellasexamplesofrecentlyproposedstate-of-the art techniques. Furthermore, students will get to know some standard tools to develop and apply deep learning techniques to machine learning problems. Fähigkeiten / Abilities The students will be able to implement deep learning approa ches to practical machine learning problems. They obtain theabilitytochooseandimproveneuralnetworkarchitecturessui table for specific machine learning tasks. Kompetenzen / Competencies Students will strengthen their competence to analyze and as sess algorithms for machine learning. Participants will learn todevelopproblem-orientedsolutionswithdeeplearningapproa ches independently.","The course will give an overview on the fundamentals and current approaches for deep learning and its main applications fields. In particular, it will cover: • Basics of Representation Learning • Perceptron Learning • Feedforward Neural Networks • Gradient Descent and Backpropagation • Regularization in Deep Learning • Convolutional Neural Networks • Recurrent Neural Networks • Autoencoders • Adversarial Training • Graph Neural Networks • Applications of Deep Learning for Text, Sequences, and Images • Explainability and Deep Learning",90 minutes written or 20 minutes oral exam depending on the number of participants. The students will be informed about the exact type of exam by the beginning of the semester,"Präsentation mit Beamer, Whiteboard Presentation with beamer, whiteboard","Goodfellow, Ian, Yoshua Bengio, and Aaron Courville: Deep learning. M IT press, 2016 Aggarwal, Charu C. :Neuralnetworksanddeeplearning. Sprin ger 10 (2018): 978-3 Additionalliteraturewillbeannouncedatthebeginningofthe  semester.",MSc AI Engineering and MSc Informatik/ Computer Science
6062,Introduction to AI Engineering,470013,Jedes Wintersemester Every winter semester,1 Semester,Lemmerich,Lemmerich,Englisch English,Compulsory/Core Modules,2 V + 1Ü,45 Std. Präsenz + 105 Std. Vor- und Nachbearbeitung der Workload Vorlesung 45 contact hours + 105 hours independent study and exam preparation,ECTS/Credits: 5,Keine None,Keine None,Verwendbarkeit in weiteren Studiengängen,"Kenntnisse / Skills/Knowledge Students will get to know about fundamentals of artificial in- telligence engineering. They will learn basic concepts and key terminology for the field. They will also learn about the mainproblemfields, fundamentalalgorithmsandapplicationsof Ar tificial Intelligence Engineering.  Fähigkeiten / Abilities The students will learn to identify the appropriate formal pro blem setting to practical problems and will be able to put state-of-theart solutions into an appropriate context. Kompetenzen / Competencies Students will strengthen their competence to categorize, analyze, and assess algorithms for artificial intelligence engineering. Participants will learn to develop problem-oriented solu tions with artificial intelligence approaches independently.","This class provides the obligatory introduction for the master program A I Engineering. The course will provide an overviewon the fundamentals of Artificial Intelligence Engineering, in cluding: • Definitions of Artificial Intelligence and Intelligent Agents • Uninformed, Informed, and Local Search • Logic, Reasoning and Knowledge Representations • Basics of Traditional Machine Learning • Deep Learning • Reinforcement Learning • Practical issues of Engineering A I applications • Applications of A I, e. g. on text and image data",90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 90 minutes written or 20 minutes oral exam depending on the number of participants. The students will be informed about the exact type of exam by the beginning of the semester.,"Präsentation mit Beamer, Tafel Presentation with projector, whiteboard","Russell, S. , and P. Norvig. Ärtificial intelligence-a modern ap- proach, 4th edition (2020) Additionalliteraturewillbeannouncedatthebeginningofthe semester.",MSc AI Engineering
6063,Applied Artificial Intelligence Lab,471615,Unregelmäßig Irregular,1 Semester,Lemmerich,Lemmerich,Englisch English,Modulgruppe „A IA“ Focus „A IA“,4Ü,60 Std. Präsenz + 120 Std. Vor- und Nachbearbeitung des Workload Praktikums60 contact hours + 120 hrs independent study and implemen tation,ECTS/Credits: 6,Keine None,Python Programming Language Advanced Topics in Data Science or Introduction to A I Engi- neering,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Students will learn about standard tools and techniques to engineer solutions to realistic problem settings in the field of artificial intelligence, in particular machine learning. Studentswill also learn about state-of-the-art approaches for their par  ticular topic. Fähigkeiten / Abilities Students will obtain the ability to systematically assess and analyze a problem setting, identify relevant approaches from literature, developandimplementsolutionswithsuitabletoolsand frameworks, and engineer and/or combine different ap proaches to obtain the best possible results. Kompetenzen / Competencies Studentswillstrengthentheircompetenceinanalyzingandas sessingalgorithmsformachinelearning. Participantswilllearn to plan projects, implement solutions, meet milestones, and communicate results.","Artificial Intelligence, in particular machine learning, is mo- re and more applied in a wide range of real-world settings. In this application-focused course, students will work in small teams to engineer A I solutions to given practical scenarios. Each team will be provided a specific problem setting, e. g. from scientific challenges like the K DD Cup or a Kaggle competition. Typically, such a setting consists of a dataset, a spe cific task (e. g. , a prediction or recommendation task), and an evaluation measure for obtained results. Under guidance, each team will then perform the necessary steps to develop and optimize their solution, generally including: • Data understanding and exploration • Data Preprocessing • Feature selection and engineering • Model validation • Hyperparameter optimization • Ensembling Results of the individual teams will be presented in the courseby each team to the other course participants in small presen tations and summarized in a project report.","Portfolio exam based on the suitability, implementation and refinement of the chosen methods, the achieved results, and communication/presentation of the project. Given minimumrequirements, presentational aspects should influence the gra de by no more than 30%. Potential elements of the portfolio are: Code with documen tation, a written report on the outcome of the project (max. 8 pages), presentations given over the course of the semester and a final examination conversation (max. 10 minutes) with each individual participant. Within the team presentations, each participant showcases her/his own personal contribution to the project. Additionally, participants declare in written form their individual contribu tions to the project design, code and report. Details on the assessment including count and length of thepresentations will be announced at the beginning of the cour se.","Präsentation mit Projektor, Whiteboard Presentation with projector, whiteboard",Specific literature for each topic will be announced at the beginning of the semester.,MSc AI Engineering and MSc Informatik/ Computer Science
6064,Responsible Machine Learning,471617,Jedes Sommersemester Every summer semester,1 Semester,Lemmerich,Lemmerich,Englisch English,Modulgruppe „A IM“ Focus „A IM“,2 V + 2Ü,60 Std. Präsenz + 120 Std. Vor- und Nachbearbeitung Workload 60 contact hours + 120 h independent study and implemen tation,ECTS/Credits: 6,Keine None,"Advanced Topicsin Data Scienceund/oder Introductionto AI Engineering, Programmierkenntnisse in Python Advanced Topics in Data Science and/or Introduction to A I Engineering, Python Programming Language","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Students will get to know about the main aspects of app- lying machine learning responsibly in sensitive settings, e. g. , when working with behavioral data. This covers the problemsettings, challenges, and main algorithmic approaches for ex  plainable, fair, privacy-aware, and reliable machine learning. Fähigkeiten / Abilities The students will be able to identify potential issues of ma chine learning and artificial intelligence applications and apply appropriate measures to address them. Students will improvetheir ability to assess, select and implement solutions for ma chine learning tasks, specifically when working with data from or about human behavior. Kompetenzen / Competencies Students will strengthen their awareness with respect to algo rithmictransparency, fairness, privacy, andreliability. Theywillimprove their competence to critically assess artificial intelli genceapproacheswithsensitivedata. Participantswilllearntodevelop problem-oriented machine learning solutions for sen sitive data independently.","The course will give an overview on the main challenges and currentapproachesforresponsiblemachinelearning. Thismo- dule will focus on explainable and interpretable approachesto machine learning, specifically for classification. It will discuss the relevancy of interpretability and will introduce white boxlearningalgorithms(e. g. ,decisiontreelearning, rule-based classification and simple regression models) and methods toexplain black-box solutions (e. g. , L IM E, counterfactual expla nations). Thecoursewillalsocoverthechallengesofbiasesandfairnessin machine learning, and will cover how these can be measu red at an individual or at a group level. Students will also get to know about algorithms to counteract such biases with pre-, in-, or post-processing methods. In addition, the course will also provide an overview and introduce key approaches of privacy-aware machine learning, and reproducibility issues in machine learning.",90-minütige Abschlussklausur oder ca. 20 Minuten mündliche Prüfung abhängig von der Anzahl der Teilnehmer. Die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 90-minute written or 20-minute oral examination depending on the number of participants. The students will be informedabout the exact type of exam by the beginning of the semes ter.,"Präsentation und Beamer, Tafel Presentation projector, whiteboard","Molnar, Christoph: Interpretable machine learning, 2nd edi- tion, 2020. Online book available at https://christophm.  github. io/interpretable-ml-book/. Solon Barocas, Moritz Hardt, Arvind Narayanan: Fairness and Machine learning - Limitations and Opportunities, 2017. Online book available at https://fairmlbook. org/pdf/ fairmlbook. pdf Additionalliteraturecanbeannouncedatthebeginningofthe semester.",MSc AI Engineering and MSc Informatik/ Computer Science
6070,Markov Chain Monte Carlo,455450,Unregelmäßig Irregular,1 Semester,Rudolf,Rudolf,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Funktionalanalysis, Wahrscheinlichkeitstheorie, Einführung in die Stochastik, Maß- und Integrationstheorie Functional Analysis, Probability Theory, Introduction to Sto chastics, Measure and Integration Theory","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Die Studierenden erwerben vertiefende Kenntnisse bzgl. der Theorie von Markovketten auf allgemeinen Zustandsräumen. Sie kennen und verstehen verschiedene Algorithmen zum approximativen Simulieren von Verteilungen basierend auf Mar kovketten (z. B. Slice Sampling Metropolis-Hastings, Hit-and run). Darüber hinaus erlangen die Studierenden vertiefendes Wissenüber Beweistechnikenzum Verifizierender Konvergenzvon Markovketten und sind in der Lage diese Methoden an zuwenden. —The students acquire a systematic understanding of the theo ry of Markov chains on general state spaces. They know and understand advanced algorithms for approxi mate sampling based on Markov chains (e. g. slice sampling, Metropolis-Hastings, Hit-and-run). Beyond that the studentsobtain deep knowledge about proof techniques to verify con vergence results for Markov chains and are able to apply this methodology.","• Motivation zum approximativen Sampling • Theorie von Markovketten • Verschiedene algorithmische Verfahren (z. B. Slice Sampling, Metropolis-Hastings, Hit-and-run) • Wasserstein-Abstand • Ergodensätze — • Motivation of approximate sampling • Theory of Markov chains • Different algorthmic approaches (e. g. Slice Sampling, Metropolis-Hastings, Hit-and-Run) • Wasserstein distance • Ergodic theorems",Entweder 90-minütige Klausur oder mündliche Prüfung (ca. 30 Minuten); die genaue Prüfungsart wird zu Beginn des Se- mesters bekannt gegeben. Either written exam (90 minutes) or oral exam (about 30 mi nutes); the precise mode of assessment will be announced at the start of the semester.,Präsentation mit Tafel und/oder Beamer Presentation with a projector or blackboard,"R. Douc, E. Moulines, P. Priouret, P. Soulier, Markov Chains, Springer, 2018 A. Klenke, Probabilitytheory:A Comprehensive Course, Sprin ger, 2014",MSc AI Engineering and MSc Informatik/ Computer Science
6072,Foundations of Statistical Data Science,482522,Unregelmäßig Irregular,1 Semester,Rudolf,Rudolf,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Wahrscheinlichkeitstheorie, Einführung in die Stochastik, Maß- und Integrationstheorie, Lineare Algebra I+I I, Analysis I+I I Probability theory, Introduction to stochastics, Measure and integration theory, Linear Algebra I+I I, Analysis I+I I","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Die Studierenden erwerben Kenntnisse bzgl. der mathema- tischen Modellierung von Daten und deren statistischer Be- handlung. Sie kennen und verstehen verschiedene Methoden  zur Datenanalyse(z. B. Schätzmethoden, Regression, grafische Methoden). Darüberhinauserlangendie Studierendenvertieftes Wissen über Beweistechniken in der Mathematischen Sta tistik, z. B. zum Verifizieren von Aussagen über die Güte von Schätzern und deren asymptotischen Eigenschaften. — Thestudentsacquireasystematicunderstandingofthetheory of modeling data and their statistical treatment. They knowand understand different methodology for the analysis of da ta (e. g. estimation methods, regression, graphical methods). Beyond that the students obtain deep knowledge about prooftechniques in mathematical statistics, e. g. , to verify state ments about the quality of estimators and their asymptotic properties.","Grundkonzepte der statistischen Datenanalyse u. a. : • Elementare statistische Modelle • Statistische Grundlagen • Grafische Methoden • Deskriptive Größen • Schätzmethoden• E M-Algorithmen und/oder stochastisches Gradienten verfahren • Regression • Hidden Markov Modelle • Bayessche Inferenz — Basic concepts of statistical data analysis, inter alia: • Elementary statistical models • Statistical objects • Graphical methods • Descriptive quantities • Estimation methods • E M algorithm and/or Stochastic gradient descent • Hidden Markov models • Bayesian inference",Entweder 90-minütige Klausur oder mündliche Prüfung (ca. 30 Minuten); die genaue Prüfungsart wird zu Beginn des Se- mesters bekannt gegeben. Either written exam (90 minutes) or oral exam (about 30 mi nutes); the precise mode of assessment will be announced at the start of the semester.,Präsentationmit Tafelund/oder Beamerund/oderanderevir- tuelle Formate  Presentation with a projector or blackboard or other virtual formats,"J. Berger, Statistical Decision Theory and Bayesian Analysis, Springer, 1993. P. Billingsley, Convergence of probability measures, Wiley Se ries in probability and Mathematical Statistics, 1999. R. van Handel, Hidden Markov models, Unpublished lecture notes (2008). A. Klenke, Probabilitytheory:A Comprehensive Course, Sprin ger, 2014. V. Panaretos, Statistics for mathematicians, Springer, 2016. S. Shalev-Shwartzand S. Ben-David, Shai, Understandingma chine learning, Cambridge University Press, 2014.",MSc AI Engineering and MSc Informatik/ Computer Science
6080,Computational Linguistics,455396,Jedes Sommersemester Every summer semester,1 Semester,Hautli-Janisz,Hautli-Janisz,Englisch English,Modulgruppe „A IA“ Focus „A IA“,2 V + 2Ü,60 Std. Präsenz + 45 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 45 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Information Retrieval and Natural Language Processing, Data Science oder Data Mining and Machine Learning","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Students gain an overview of the main concepts, research questions and methodological frameworks in computationallinguistics. The course covers the areas of phonetics, mor phology, syntax, semantics and pragmatics and presents thecore methods and challenges for language processing in the  se subfields of C L. Students also gain insights into a number of current topics in applied computational linguistics, such as Machine Translation, Question Answering, Chatbots & Dia logue Systems and Search. Fähigkeiten / Abilities Successful candidates understand the general challenges thatlanguageposesforautomaticprocessing. Basedontheirknow ledgeacrosssubfieldsof CL, theycandiscussthewaysinwhichlinguistic information can be encoded for computational mo deling and they can also identify those methods that are mostappropriate for processing it. For those areas of applied com putational linguistics that are covered in the course, studentsunderstand the standard approaches, challenges and limitati ons of the state of the art. Kompetenzen / Competencies Successful candidates can transfer their knowledge in com putational linguistic modeling to different settings, languages and research questions. They are able to reflect on everyday computationallinguisticapplicationslikevirtualassistantsandmachine translation systems. They can also provide a preli minary judgement as to what extent particular applications require more in-depth computational linguistic modeling.","Computational linguistics (C L) is the scientific and en- gineering discipline concerned with understanding writ-ten and spoken language from a computational perspective, and building systems that usefully process and pro duce language (https://plato. stanford. edu/entries/ computational-linguistics/). It is one of the centralcomponents of everyday technology, from web search to machine translation. In this course we will cover the main con cepts, research questions and methodological frameworks in the area. Topics include: • Phonetics and Speech Signal Processing • Syntactic Parsing • Computational Semantics • Computational Lexical Semantics • Computational Pragmatics • Corpora and Annotation • Lexical Resources • Classification and Clustering • Statistical Tests and Evaluation • Machine Translation • Question Answering • Chatbots & Dialogue Systems",90min Klausur 90min written exam,Präsentation mit Beamer Presentation with projector,"Speechand Language Processing. 2022. Dan Jurafskyand Ja- mes Martin, 3rd ed. draft online (https://web. stanford. edu/~jurafsky/slp3/)The Handbookof Computational Linguisticsand Natural Lan guage Processing. 2010. Alexander Clark et al. (editors). Blackwell Publishing Ltd(https://onlinelibrary. wiley. com/doi/book/10. 1002/9781444324044) Foundationsof Statistical Natural Language Processing. 1999. Chris Manning and Hinrich Schütze. M IT Press (https: //nlp. stanford. edu/fsnlp/) For more advanced literature, see lecture slides.",MSc AI Engineering and MSc Informatik/ Computer Science
6090,Sicherheit von Rechnern und eingebetteten Systemen,455385,Jedes Wintersemester Every winter semester,1 Semester,Kavun,Kavun,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,2 V + 1Ü,45 Std. Präsenz + 50 Std. Übungen + 55 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 45 contact hours + 50 hrs exercises + 55 hrs independent study and exam preparation,ECTS/Credits: 5,Keine None,Keine None,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden lernen • die Komplexität der Sicherheitslandschaft, • die potenziellen Schwachstellen, die damit verbunden sind, z. B Authentifizierung, Datenintegrität, • die Vor- und Nachteile verschiedener Prinzipien der In formationssicherheit • die Risiken von Sicherheitslücken zu verstehen. — Students get to know • the complexity of the security landscape, • thepotentialvulnerabilitiesassociated, e. g. ,authentica tion, data integrity, • the advantages and disadvantages different information security principles, • understand the risks of security vulnerabilities. Fähigkeiten / Abilities Die Studierenden üben ein detailliertes Verständnis industri ellrelevanter Fragenim Zusammenhangmit Rechnersicherheitundeingebetteter Sicherheitsowiedie Fähigkeit, Materialpräzise und dennoch umfassend zu präsentieren und dieses Ma terial angemessen auf das betreffende Publikum auszurichten. —Students practice a detailed understanding of industrially relevant issues relating to computer security and embedded se curity as well as the ability to present material in a concise yetcomprehensive manner and to target that material appropria tely to the audience in question. Kompetenzen / Competencies Die Studierenden lernen die verschiedenen Arten von Rech nerangriffen und deren Auswirkungen auf die Sicherheit und Datenschutz, die Grundprinzipien der Informationssicherheitsowie einige praktische Kenntnisse darüber, wie diese Prin zipien und Implementierungstechnologien verwendet werdenkönnen, um eine bessere Daten- und Systemsicherheit zu ge währleisten. —The students gain awareness on the different types of compu ter attacks and their effect on data security and privacy, get an understanding of the fundamental principles of informationsecurity and get some practical knowledge of how these prin ciples and implementing technologies can be used to ensure better data and system security.","Dieses Modul bietet eine Einführung in die Rechnersicherheit und die eingebettete Sicherheit. Dieses Modul konzentriertsich insbesondere auf Ansätze und Techniken zum Aufbau si cherer Systeme und zum sicheren Betrieb von Systemen. Das Modulerfordertein Verständnisdermathematischen Konzepte (z. B. Modulo-Arithmetik, komplexe Zahlen, Gruppen theorie) und Logik (Mengenlehre, Prädikatenlogik, natürliche Deduktion). Darüberhinauserfordertdas Modulein Verständnis einer Programmiersprache (z. B. Python, C) und grundle gende Kenntnisseinder Softwareentwicklung. EinigeÜbungen erfordern Linux und Shell Grundlagen. Das Modul beinhaltet die Themen: • Grundlagen der Rechnersicherheit • Zugangskontrolle • Eingebettete Systeme • Sicherheitsbedürfnis in eingebetteten Systemen • Kryptografische Grundlagen • Krypto-Angriffe • Public Key-Infrastrukturen (P KIs) • Digitale Signaturen • Sicherheitsprotokolle • Formale Analyse von Sicherheitsprotokollen • Sicherer Software-Entwicklungslebenszyklus (S SD L) • Bedrohungsmodellierung • Common Vulnerability Scoring System (C VS S) • Sicherheitslücken in der Software • Sichere Programmierung • Sicherheitstests:Grundlagen, Fuzzing, statische Analyse • Sicherheit von Komponenten von Drittanbietern • R FI D-Sicherheit • Sicherheit von integrierten Schaltungen — This module provides an introduction into computer security and embedded security. In particular, this module focuses on approachesandtechniquesforbuildingsecuresystemsandfor the secure operation of systems. The module requires an understanding of mathematical concepts(e. g. ,modulo-arithmetic, complexnumbers, grouptheo ry) and logic (set theory, predicate logic, natural deduction). Moreover, themodulerequiresanunderstandingofaprogramming language (e. g. , Python, C) and basic software enginee ring knowledge. Some exercises require a basic command of Linux in general and the command line (shell) in particular. The module includes the topics: • Computer Security Fundamentals • Access Control • Embedded Systems • Need for Security in Embedded Systems • Cryptographic Foundations • Attacking Crypto • Public Key Infrastructures (P KIs) • Digital Signatures  • Security Protocols • Formal Analysis of Security Protocols • Secure Software Development Lifecycle (S SD L) • Threat Modelling • Common Vulnerability Scoring System (C VS S) • Software Vulnerabilities • Secure Programming • Security Testing: Basics, Fuzzing, Static Analysis • Security of Third-Party Components • R FI D Security • Hardware Fingerprinting & I C Security",90 Minuten schriftliche Klausur oder ca. 20 Minuten münd- liche Prüfung in englischer Sprache und je nach Anzahl der Hörer; die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. Written exam (90 minutes) or oral exam in English accordingto the number of participants (about 20 minutes); the preci se mode of assessment will be announced at the start of the semester.,"Präsentation und Beamer, Tafel Presentation and projector, blackboard",angesagt. Online resources will be provided and specific readings will be announced during the lectures and exercise sessions.,MSc AI Engineering and MSc Informatik/ Computer Science
6092,Digitales Design mit Verilog-HDL auf FPGA,455408,Jedes Semester Every semester,1 Semester,Kavun,Kavun,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,3Ü,45 Std. Präsenz + 50 Std. Übungen + 55 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 45 contact hours + 50 hrs exercises + 55 hrs independent study and exam preparation,ECTS/Credits: 5,Keine None,Keine None,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden können • die Bedeutungkanonischer Formenbeider Minimierung oder sonstigen Optimierung von booleschen Formeln in allgemeinen und digitalen Schaltungen erkennen, • Funktionen mit Hilfe beliebiger Minimierungsalgorithmen (Boolesche Algebra oder Karnaugh Map) minimie ren, • Analyse der Entwurfsverfahren für kombinatorische und sequentielle Schaltungen, • das Problem zu definieren (Eingänge und Ausgänge), seine Funktionen zu schreiben, • den endlichen Automaten mit Hilfe von algorithmischen Zustandsdiagrammen entwerfen und einfache Projekte mit einigen Flip-Flops durchführen, • Entwurf digitaler Schaltungen unter Verwendung der Hardware-Beschreibungssprache (Verilog), • Implementierung von Funktionen mit digitalen Schaltungen (kombinatorisch oder sequentiell) auf einer re konfigurierbaren Plattform (F PG A-Board), • Verwendung von Industriestandard Software-Entwurfssoftware und programmierbaren Geräten wie F PG As zur Implementierung digitaler Schal tungen, • komplexe Algorithmen wie kryptografische Primitiveentwerfen, um verschiedene Entwurfsspezifika zu beob achten. — Students can• identify the importance of canonical forms in the mini mization or other optimization of Boolean formulas in general and digital circuits, • minimize functions using any type of minimizing algo rithms (Boolean algebra or Karnaugh map), • analyze the design procedures of combinational and se quential circuits, • define the problem (inputs and outputs), write its func tions, • design the finite state machine using algorithmic state machine charts and perform simple projects with a few flip-flops, • design digital circuits using Hardware Description Lan guage (Verilog), • implementfunctionsusingdigitalcircuit(combinational orsequential)onreconfigurableplatform(F PG Aboard), • use industry standard software design suite and pro grammable devices such as F PG As to implement digital circuits, • design complex algorithms like cryptographic primitives to observe different design specifics.  Fähigkeiten / Abilities Die Studierenden erwerben die Fähigkeit• komplexe technische Probleme zu erkennen, zu formulieren und zu lösen, indem sie ingenieurwissenschaftliche, naturwissenschaftliche und mathematische Prinzi pien anwenden, • wenden Digitales Design Optimierung Methodenan, um Lösungen zu entwickeln, die bestimmte Anforderungen unter Berücksichtigung verschiedener Faktoren erfüllen, • im Rahmen eines Modulprojekts Aufgaben zu stellen und Ziele zu erreichen. — Students gain an ability to• identify, formulate, and solve complex engineering pro blemsbyapplyingprinciplesofengineering, science, and mathematics, • apply digital design optimization techniques to produce solutions that meet specified needs with consideration of different factors, • establish goals and meet objectives in a module project. Kompetenzen / Competencies Die Studierenden • erwerben Kenntnisse in der Analyse und dem Entwurfvon Verfahren für kombinierte und sequentielle Schal tungen, • lernen, wie man Hardware-Simulationssoftware zum Testen der entworfenen Schaltung verwendet, • lernen, wieman eineneffektiventechnischen Berichtfür die Bewertung schreibt, • gewinnen Erfahrung in der Nutzung von Online Ressourcen zur Beschaffung aktueller Literatur zu di gitalen Designkomponenten. — The students • gain knowledge in analyzing and designing procedures of combinational and sequential circuits, • learnhowtousehardwaresimulationsoftwarefortesting the designed circuit, • learn how to write an effective technical report for the assessment, • gain experience on using online resources to obtain cur rent literature on engineering components.","Diese Übung behandelt die Konzepte, Prinzipien und Tech- niken des Entwurfs und der Implementierung digitaler Sys-teme. Der Kurs lehrt die Grundlagen digitaler Systeme un ter Anwendung der Logikentwurfs- und Entwicklungstechniken. Praktische Laborexperimente mit einem rekonfigurierba ren Board dienen der Vertiefung der theoretischen Konzepte. Die Laborexperimente beinhalten den Entwurf und die Imple mentierung von digitalen Schaltungen. Der Schwerpunkt des Kurses liegt auf der Verwendung von C AD-Tools (Computer Aided Design)fürden Entwurf, die Simulationunddas Testenvon digitalen Schaltungen anhand konkreter Beispiele, insbe sondere bei Sicherheit- und Kryptographieanwendungen. Ziel des Moduls ist es, den Studenten die Themen kombi natorische und sequentielle Schaltungsanalyse und -entwurf, Optimierungsmethoden für den Entwurf digitaler Schaltun genunter Verwendungvon Multiplexern, Decodern, Registern, Zählern und programmierbaren Logikarrays anhand eines re konfigurierbaren F PG A-Evaluierungsboards zu vermitteln. Das Modul beinhaltet die Themen • Grundlagen der Elektronik • Zahlendarstellung und Binärcodes • Boolesche Algebra und Funktionen, kanonische Formen • Kombinatorische Entwurfstechniken: K-Maps• Kombinatorische Logikschaltungen: Addierer/ Subtrak tor, Codewandler, Komparatoren, Multiplexer/Demultiplexer und Decoder/Encoder• Programmierbare Logikschaltungen, feldprogrammier bare Gate-Arrays (F PG A) • Sequentielle Logikschaltungen • Latches und Flip-Flops• Zustandsverhalten von synchronen sequentiellen Schal tungen: Zustandstabellen • Implementierung von kryptographischen Algorithmen und anderen Beispielschaltungen auf F PG A — This exercise course addresses the concepts, principles and techniques of digital systems design and implementation. The course teaches the fundamentals of digital systems applyingthe logic design and development techniques. Practical labo ratory experiments using a reconfigurable board are used to reinforcethetheoreticalconcepts. Thelabexperimentsinvolvethe design and implementation of digital circuits. The cour se emphasis is on the use of computer-aided design (C AD) tools in the design, simulation, and testing of digital circuitsthrough specific examples, especially in security and crypto graphy applications. The aim of the course is to introduce to the students thetopics that include combinational and sequential circuit ana  lysis and design, digital circuit design optimization methods using random logic gates, multiplexers, decoders, registers, counters, and programmable logic arrays through a reconfigu rable F PG A evaluation board. The module includes the topics • Basics of electronics • Number representation and binary codes • Boolean algebra and functions, canonical forms • Combinational design techniques: K-maps • Combinational logic circuits: adders/subtractors, code converters, comparators, multiplexors/demultiplexors, and decoders/encoders • Programmable logic circuits, field programmable gate arrays (F PG A) • Sequential logic circuits • Latches and flip-flops • State behavior of synchronous sequential circuits: State tables • Implementation of cryptographic algorithms as well as other example circuits on F PG A",Portfolio-Prüfung in englischer Sprache. Ein Abschlussprojekt und der entsprechende Bericht sollten eingereicht werden. Portfolio Exam in English language. A final project and its corresponding report should be submitted.,"Präsentation und Beamer, Tafel, Boolean Board F PG A Presentationandprojector, blackboard, Boolean Board FP GA",angesagt. Online resources will be provided and specific readings will be announced during the exercise sessions.,MSc AI Engineering and MSc Informatik/ Computer Science
6100,Computational Game Theory,472690,Unregelmäßig Irregular,1 Semester,Harks,Harks,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,"60+30 Std. Präsenz, 90+90 Std. Eigenarbeitszeit Workload 60+30 contact hours, 90+90 hours independent study and exam preparation",ECTS/Credits: 9,Keine None,"Analysis I+I I, Lineare Algebra I+I I Analysis I+I I, Linear Algebra I+I I","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen die grundlegenden Fragestellungen und Methoden der algorithmischen Spieltheorie. —The students learn the foundations of algorithmic game theo ry. Fähigkeiten / Abilities  Die Studierenden können verteilte Systeme mit strategischer Interaktion modellieren und analysieren. Insbesondere algorithmische Zugängezur Berechnungvon Gleichgewichtslösun gen werden vermittelt. —The students are able to model distributed systems with stra tegically interacting agents. They are able to algorithmicallysolve such systems by means of computing equilibrium soluti ons. Kompetenzen / Competencies Die Studierendenhabendie Kompetenz, verteilte Systememit strategischer Interaktion zu modellieren, zu bewerten und mit Rechnerunterstützung zu lösen. —The students have the competence to model and algorithmi cally solve distributed systems with strategically interacting agents.","Nash-Equilibrium, Lemke-Howson, P PA D, P LS, Congestion Games, Pricing, Cooperative Game Theory, Core, Auctions, Mechanism Design","120-minütige Klausur (oder 30 Minuten mündliche Prüfung) über die Themen: Nash-Equilibrium, Lemke-Howson, P PA D, P LS, Congestion Games, Pricing, Cooperative Game Theory, Core, Auctions, Mechanism Design. Exam (120 minutes) or oral exam (30 minutes) covering thetopics: Nash-Equilibrium, Lemke-Howson, P PA D, P LS, Congestion Games, Pricing, Cooperative Game Theory, Core, Auc tions, Mechanism Design.",Tafelanschrieb Blackboard,Skriptum,MSc AI Engineering and MSc Informatik/ Computer Science
6101,Komplexe Dynamische Netzwerke,471515,Wird vermutlich nicht mehr angeboten Probably not offered anymore,1 Semester,Schönlein,Schönlein,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,2 V + 1Ü,45 Std. Präsenz + 50 Std. Übungen + 55 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 45 contact hours + 50 hrs exercises + 55 hrs independent study and exam preparation,ECTS/Credits: 5,Keine None,"Analysis I+I I, Lineare Algebra I+I I, Gewöhnliche Differential- gleichungen Analysis I+I I, Linear Algebra I+I I, Ordinary Differential Equa tions","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen die Grundlagen der mathematischen Modellierung komplexer Systeme wie kausale Loop Diagram  me. Sie verstehen den Einfluss von Rückkopplungen unter den Komponenten komplexer dynamischer Netzwerke. Die Studie renden sind in der Lage komplexe Netzwerke zu visualisierenund zu simulieren. Sie kennen verschiede Maße für die Struk turanalyse komplexer Netzwerke. —The participants are familiar with the fundamentals of mode ling complex systems, such as causal loop diagrams. They command methods for creating mathematical models inscience and engineering. They are aware of feedback interac tions among the components of complex dynamic networks. The students are able to visualize and simulate complex net works and know measures and metrics capturing features of network structures. Fähigkeiten / Abilities Die Studierenden sind in der Lage mathematische Modelle fürreale Systeme zu erstellen. Sie können komplexe Systeme un tersuchen indem sie Simulationen erstellen und verschiedene Struktureigenschaften analysieren. —The students are able to create mathematical models for real world systems. They are able to draw conclusions based on visualizations, simulations and structural analysis.","Folgende Themen werden behandelt: Modellierung komplexer Systeme (Kausale Loop Diagram-me), Darstellung komplexer Systeme, Strukturanalyse komplexer Systeme (Zentralitätsmaße, Page Rank, Gruppenbildung), Synchronisation gekoppelter Systeme, Populations und Epidemie-Modelle — The following topics will be covered:modelingcomplexsystems(causalloopdiagrams), visualizati on and simulation of complex systems, analysis of topologicalproperties (centrality measures, Page Rank, clustering), popu lation and epidemic models",90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semestersdurch Aushang und auf den Internetseiten der Fakultät be kannt gegeben. 90-minute examination or 20-minute oral examination. Theprecise mode of assessment will be announced on the noti ceboard and on the faculty website at the beginning of the semester.,"Tafelanschrieb, Online Lehre via Zoom Blackboard, online teaching via Zoom","H. Sayama. Introduction to the Modeling and Analysis of Complex Systems. Open S UN Y Textbooks, 2015 J. Sterman. Business Dynamics: Systems Thinking and Mo deling for a Complex World. Mc Graw-Hill Higher Education, 2000 S. Meyn. Control Techniques for Complex Networks. Cam bridge University Press, 2008 M. Newman. Networks. 2nd Ed. Oxford University Press, 2018",MSc AI Engineering and MSc Informatik/ Computer Science
6103,Distributed Algorithms,422150,Unregelmäßig Irregular,1 Semester,Harks,"Ghodselahi, Harks",Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,2 V + 2Ü,"60 Std. Präsenz, 60 Std. Übung, 60 Std. Nachbereitung der Workload Vorlesung und Prüfungsvorbereitung60 contact hours, 60 hours independent study, 60 hours lec ture and exam preparation",ECTS/Credits: 6,Keine None,Interesse an Algorithmik Interest in algorithmic problems,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen die grundlegenden Fragestellungenund Methoden des verteilten Rechnens. Insbesondere werden Theme wie „communication, locality, parallelism, selforganization, symmetry breaking, synchronization, and uncer tainty” behandelt.  —Understanding of the fundamental principles and issues un derlying the design of distributed systems and networks Familiarity with essential algorithmic ideas and lower bound techniques in distributed computing Ability to analyze and design distributed algorithms for areas suchascommunication, locality, parallelism, self-organization, symmetry breaking, synchronization, and uncertainty Fähigkeiten / Abilities Die Studierenden sind in der Lage verteilte Algorithmen zu entwerfen und für Anwendungen im Bereich Kommunikation, Parallelisierbarkeit und Selbstorganisation anzuwenden. — Analyze and design distributed algorithms for areas such ascommunication, locality, parallelism, self-organization, sym metry breaking, synchronization, and uncertainty Understand the fundamental principles and issues underlying the design of distributed systems and networks Develop a strong foundation for further study or work in the field of distributed computing Kompetenzen / Competencies Die Studierendenhabendie Kompetenz, verteilte Algorithmen zuentwerfenundfür Anwendungenmit Rechnerunterstützung Lösungen zu berechnen. — The ability to analyze and design distributed algorithms for a variety of fundamental issues in distributed computing The ability to apply knowledge of distributed computing to real-world distributed systems and networks Astrongunderstandingofthefundamentalprinciplesandissu esunderlyingthedesignofdistributedsystemsandnetworks","Introduction, Vertex Coloring, Tree Algorithms, Distributed Sorting, Maximal Independent Set, Shared Objects, Locality- Based Lower Bounds, Synchronizers, Dynamic Networks","120-minütige Klausur (oder 30 Minuten mündliche Prüfung) über: Vertex Coloring, Tree Algorithms, Distributed Sorting, Maximal Independent Set, Shared Objects, Locality-Based Lower Bounds, Synchronizers, Dynamic Networks Exam (120 minutes) or oral exam (30 minutes) covering the topics: Vertex Coloring, Tree Algorithms, Distributed Sorting, Maximal Independent Set, Shared Objects, Locality-Based Lower Bounds, Synchronizers, Dynamic Networks","Tafelanschrieb Blackboard, (videos in case of virtual lecture)","Distributed Computing: A Locality-Sensitive Approach D. Peleg Societyfor Industrialand Applied Mathematics(S IA M), 2000. Distributed Computing: Fundamentals, Simulations and Ad vanced Topics H. Attiya, J. Welch Mc Graw-Hill Publishing, 1998. Dissemination of Information in Communication Networks J. Hromkovic, R. Klasing, A. Pelc, P. Ruzicka, W. Unger Springer-Verlag, 2005. Introduction to Parallel Algorithms and Architectures: Arrays, Trees, Hypercubes F. T. Leighton Morgan Kaufmann Publishers Inc. , 1991. Introduction to Algorithms (3rd edition) T. Cormen, C. Leiserson, R. Rivest, C. Stein The M IT Press, 2009.",MSc AI Engineering and MSc Informatik/ Computer Science
6105,Dynamic Network Flows,422160,Unregelmäßig Irregular,1 Semester,Harks,"Graf, Harks",Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,2 V + 2Ü,"30+30 Std. Präsenz, 60+60 Std. Eigenarbeitszeit Workload 30+30 contact hours, 60+60 hours independent study and exam preparation",ECTS/Credits: 6,Keine None,"Lineare Algebra I, Analysis I+I I Linear Algebra I, Analysis I+I I","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen die grundlegenden Modelle und Me- thoden, um dynamische Netzwerkflüsse zu berechnen und zu charakterisieren. Des Weiterenwerden Modellemitstrategisch agierenden Flusspartikeln betrachtet. — The students learn the foundations of dynamic network flows from a computational perspective. They also understand mo dels with strategic acting agents. Fähigkeiten / Abilities Die Studierenden können dynamische Netzwerkflüsse modellieren und charakterisieren. Des Weiteren können sie Model le mit strategischer Interaktion von Flusspartikeln modellierenundanalysieren. Insbesonderealgorithmische Zugängezur Be rechnung von Gleichgewichtslösungen werden vermittelt. — The students are able to model dynamic network flows with and without strategically interacting agents. They are able to algorithmically solve such models by means of computing equilibrium solutions. Kompetenzen / Competencies Die Studierenden haben die Kompetenz, dynamische Netz werkflüsse sowohl ohne wie auch mit strategischer Interaktionvon Flusspartikeln zu modellieren, zu bewerten und mit Rech nerunterstützung zu lösen. —The students have the competence to model and algorithmically solve dynamic network flows with and without strategi cally interacting agents.","Dynamic capacitated flows, earliest arrival flows, Ford- Fulkerson Algorithm, Vickrey model, dynamic equilibrium flows, thin flows, instantaneous dynamic equilibrium flows, path-delay operator model","120-minütige Klausur (oder 30 Minuten mündliche Prüfung) über die Themen: Dynamic capacitated flows, earliest arri- val flows, Ford-Fulkerson Algorithm, Vickrey model, dynamicequilibrium flows, thin flows, instantaneous dynamic equilibri um flows, path-delay operator model. Exam (120 minutes) or oral exam (30 minutes) covering the topics: Dynamic capacitated flows, earliest arrival flows, Ford-Fulkerson Algorithm, Vickrey model, dynamic equilibri umflows, thinflows, instantaneousdynamicequilibriumflows, path-delay operator model.","Tafelanschrieb Blackboard, (videos in case of virtual lecture)",Skriptum,MSc AI Engineering and MSc Informatik/ Computer Science
6106,Computational Geometry,405125,Unregelmäßig Hinweis: Das Modul ersetzt das alte Modul „Algorithmische Geometrie“ - keine Doppelanrechung möglich! Irregular Notice:ThemodulereplacestheoldmoduleÄlgorithmic Geo metry cannot be credited twice.,1 Semester,Harks,Desai,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Euklidische Geometrie, Algorithmen und Datenstrukturen, Li- neare Algebra, Analysis Euclidean Geometry, Algorithms and Data Structures, Linear Algebra, Analysis","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen Techniken, die man für den Entwurfund die Analyse geometrischer Algorithmen und Datenstruk turen benötigt. — The students know techniques that can be used to design and analyze geometric algorithms and data structures. Fähigkeiten / Abilities Die Studierenden können die in der Vorlesung vorgestellten Verfahren und Datenstrukturen exemplarisch ausführen, de ren Funktionsweise erläutern und sie analysieren. — The students can apply the algorithms and data structures presented in the lecture on examples, can explain the way they work and are able to analyze them. Kompetenzen / Competencies Die Studierenden können entscheiden, welche Algorithmenoder Datenstrukturen geeignet sind, um ein gegebenes geo metrisches Problem zu lösen. Die Studierenden sind in der Lage, neue Probleme zu analysieren und sich auf Basis der inder Vorlesung erlernten Konzepte und Techniken eigene effi ziente Lösungen zu überlegen. — Thestudentshavethecompetencetodecidewhichalgorithms or data structures are useful to solve a geometric problem. They are able to analyze new problems and think of efficient solutions based on the concepts and techniques learned in the lecture.","Diese Vorlesung beschäftigt sich mit den algorithmischen Aspektengeometrischer Problemstellungen:Wirwerden Tech- niken erlernen, die man für den Entwurf und die Analyse von geometrischen Algorithmen und Datenstrukturen benötigt. Insbesondere werden Themen wie “Convex hull in 2d, Rangesearch, intersections, Polygon triangulation, Art Gallery theorem, Duality and line arrangements, Voronoi diagram and Delaunay triangulations, Epsilon-nets and V C-dimension, Cluste ring point sets” vorgestellt. — Thislecturedealswithalgorithmicaspectsofgeometrictasks:we will learn techniques that can be used to design and ana lyze geometric algorithms and data structures. Inparticular, wewillcovertopicslike Convexhullin2d, Rangesearch, intersections, Polygon triangulation, Art Gallery theorem, Duality and line arrangements, Voronoi diagram and De launay triangulations, Epsilon-nets and V C-dimension, Cluste ring point sets.",120-minütige Klausur oder mündliche Prüfung (ca. 30 Minu- ten) über die Themen der Vorlesung. Die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. Written exam (120 minutes) or oral exam (approx. 30 minu tes) covering the content of the course. The precise mode of assessment will be announced at the start of the semester.,"Tafelanschrieb Blackboard, (videos in case of virtual lecture)","Markde Berg, Otfried Cheong, Marcvan Kreveld, Mark Over- mars: Computational Geometry: Algorithms and Applications. Springer-Verlag, 3rd edition, 2008. Rolf Klein:Algorithmische Geometrie:Grundlagen, Methoden, Anwendungen. Springer-Verlag, 2nd edition, 2005.",MSc AI Engineering and MSc Informatik/ Computer Science
6111,Klassische Grenzwertsätze & große Abweichungen,451019,Unregelmäßig Irregular,1 Semester,Prochno,Prochno,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Einführung in die Stochastik, Wahrscheinlichkeitstheorie Introduction to Stochastics, Probability Theory","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden bekommen ein vertieftes Verständnis klassi-scher Grenzwertsätze der Wahrscheinlichkeitstheorie und ler nen die grundlegenden Konzepte sowie Techniken der Theorie der großen Abweichungen kennen.  —Studentsobtainadeeperunderstandingofclassicallimittheo rems in probability and learn the fundamental concepts and methods of large deviations theory. Fähigkeiten / Abilities Die Studierenden üben den Umgang sowie die Kombinati on der Methoden der Wahrscheinlichkeitstheorie, speziell der Theorie der großen Abweichungen, an ausgewählten Proble men, die sich auf verschiedene Bereiche der Mathematik, wie etwa Funktionalanalysis, Wahrscheinlichkeitstheorie, (konvexeund diskrete) Geometrie sowie theoretische Informatik, stüt zen. — Studentspracticehandlingthemethodsdevelopedandusedin probability theory, in particular large deviations theory, whichare intimately related to functional analysis, probability theo ry, (discrete and convex) geometry, and computer science. Kompetenzen / Competencies Die Studierenden sind in der Lage, die Konzepte und Metho den der Wahrscheinlichkeitstheorie, speziell der Theorie dergroßen Abweichungen, bei konkreten Fragestellungen anzu wenden. — The students are able to approach problems in mathematicsand related fields by means of methods and ideas from proba bility theory, in particular large deviations theory.","Ausgehend von den klassischen Grenzwertsätzen der Wahr- scheinlichkeitstheorie, die das typische Verhalten etwa von Summen u. i. v Zufallsgrößen beschreiben, führen wir in die Theorie der großen Abweichungen ein, d. h. die zentralen Be griffe, Konzepte und fundamentale Sätze werden behandelt. Die Theorie beschäftigt sich mit untypischen/ seltenen Ereignissen und deren asymptotische Quantifizierung mittels Ra tenfunktionen. Sie steht historisch in enger Verbindung zur statistischen Physik und hat moderne Anwendungen/Bezüge etwa zu geometrischer Funktionalanalysis, Konvexgeometrie oder theoretischer Informatik. Das Modul beinhaltet Elemente aus: • Kolmogorovs L1-Version des S GG Z • Lindebergs Zentraler Grenzwertsatz • Lindeberg Methode • Legendre Transformation • Kumulantenerzeugende Funktion • Satz von Cramér • Satz von Cramér (heavy tails Version)  • Prinzipien großer Abweichungen • Kontraktionsprinzip • Varadhans Variationslemma • Satz von Sanov• Anwendungenin Funktionalanalysis, theoretischer Infor matik — Startingwiththeclassicallimit theoremsinprobabilitytheory, whichdescribe, forinstance, thetypicalbehaviorofsumsofiid random variables, we introduce the theory of large deviationswith its key notions and concepts as well as some of the fun damental results. The theory deals with atypical/ rare eventsand their asymptotic quantification using rate functions. His torically, the area is closely linked to statistical physics and has modern applications in/ is related to geometric functional analysis, convex geometry or theoretical computer science. The module covers elements from: • Kolmogorov’s L1 version of the S LL N • Lindeberg’s central limit theorem • Lindeberg’s method • Legendre transformation • Cumulant generating function • Cramér’s theorem • Cramér’s theorem (heavy tails version) • Large deviation principles • Contraction principle • Varadhan’s variational lemma • Sanov’s theorem • Applicationsinfunctionalanalysis, theoreticalcomputer science",Klausur (90 Minuten) oder mündliche Prüfung (ca. 30 Mi- nuten) in deutscher oder englischer Sprache; die genaue Prü- fungsart wird zu Beginn des Semesters bekannt gegeben. 90-minute written examination or oral exam (about 30 minu tes)in Germanor English; theprecisemodeofassessmentwill be announced at the start of the semester.,"Präsentation und Beamer, Tafel/Tablet Presentation and projector, blackboard/tablet","J. Prochno: Classical limit theorems & large deviations, Lec- ture notes, 2020 F. Den Hollander:Large Deviations, Fields Institute Monogra phs, Volume 14, 2000 A. Dembo, O. Zeitouni: Large Deviations Techniques & App lications, Springer, 2010",MSc AI Engineering and MSc Informatik/ Computer Science
6112,Introduction to Information-based Complexity and,485384,Unregelmäßig Irregular,1 Semester,Prochno,"Prochno, Sonnleitner",Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,3 V + 1Ü,60 Std. Präsenz + 40 Std. Übungen + 80 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 40 hrs exercises + 80 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Lineare Algebra I+I I, Analysis I+I I, Einführungindie Stochas- tik Linear Algebra I+I I, Analysis I+I I, Introduction to Stochastics","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen Grundkonzepte und -resultate der“Information-based complexity” und wissen über die Funkti onsweise von “Compressed Sensing” Bescheid.  — The students know fundamental concepts and statements of information-based complexity and are aware of the workings of compressed sensing. Fähigkeiten / Abilities Die Studierenden üben anhand ausgewählter Probleme Be griffe und Methoden aus “Information-based Complexity” und“Compressed Sensing”einzuordnenundanzuwenden. Siewen den diese an, um konkrete Fragestellungen zu beantworten. — The students practice with the help of selected problems to classify and apply concepts and methods of information-based complexity and compressed sensing. They apply these in order to solve concrete problems. Kompetenzen / Competencies Die Studierenden sind in der Lage, die Konzepte und Methoden von “Information-based Complexity” und “Compres sed Sensing” bei konkreten Fragestellungen anzuwenden. — The students are able to apply concepts and methods ofinformation-based complexity and compressed sensing to con crete problems.","setztsich aus Themenbereichen der folgenden Liste zusammen: • Grundlagen der “Information-based complexity” • Numerische Integration und Approximation • Lineare Algorithmen und lineare Probleme • “Compressed sensing” und “sparse approximation” • “Restricted Isometry Property” • (Gauss’sche) Zufallsmatrizen und Maßkonzentration —Information-based Complexity is concerned with the theoreti cal analysis of numerical problems and their complexity withrespecttogiveninformationandintrinsicdimensionality. Compressed sensing is an efficient technique to recover and sto re signals with few important features, and as such will be studied in this course in the framework of information-based complexity. The content is based on elements of the following  list: • Information-based complexity basics • Numerical integration and approximation • Linear algorithms and Linear problems • Compressed sensing and sparse approximation • Restricted Isometry Property• (Gaussian) random matrices and concentration of mea sure",Klausur (90 Minuten) oder mündliche Prüfung (ca. 30 Mi- nuten) in deutscher oder englischer Sprache; die genaue Prü- fungsart wird zu Beginn des Semesters bekannt gegeben. 90-minute written examination or oral exam (about 30 minu tes)in Germanor English; theprecisemodeofassessmentwill be announced at the start of the semester.,"Präsentation und Beamer, Tafel/Tablet Presentation and projector, blackboard/tablet",wird zu Beginn des Semesters be- kannt gegeben Additional reading material will be announced at the start of the semester,MSc AI Engineering and MSc Informatik/ Computer Science
6113,Einführung in die Approximationstheorie,455460,Jedes Semester Every semester,1 Semester,Prochno,Prochno,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,2 V + 1Ü,45 Std. Präsenz + 50 Std. Übungsaufgaben + 55 Std. Nach- Workload bereitung und Prüfungsvorbereitung 45 contact hours + 50 hrs exercises + 55 hrs independent study and exam preparation,ECTS/Credits: 5,Keine None,"Analysis I, Analysis I I Analysis I, Analysis I I","Verwendbarkeit in weiteren Master Informatik, Bachelor Mathematik Studiengängen Master Computer Science, Bachelor Mathematics","Kenntnisse / Skills/Knowledge Die Studierenden lernen grundlegenden Konzepte sowie Tech- niken der Approximationstheorie kennen. —Students learn fundamental concepts and methods of appro  ximation theory. Fähigkeiten / Abilities Die Studierenden üben den Umgang sowie die Kombinati on der Methoden der Approximationstheorie an ausgewählten Problemen, die sich auf verschiedene Bereiche der Mathema tik stützen. — Students practice handling the methods developed and usedin approximation theory, which are intimately related to va rious areas of mathematics. Kompetenzen / Competencies Die Studierenden sind in der Lage, die Konzepte und Methoden der Approximationstheorie bei konkreten Fragestellun gen zu klassischen sowie aktuellen Themen (etwa im Rahmenhochdimensionaler Probleme der Mathematik und angrenzen der Gebiete) anzuwenden. — The students are able to approach classical and modern (e. g. , high-dimensional) problems in mathematics and related fields by means of methods and ideas from approximation theory.","Das Modul dient der Vermittlung von Grundlagen der klassi- schen Approximationstheorie. Darüber hinaus sollen auch mo- dernere Aspekte der Approximationstheorie diskutiert werden. Das Modul beinhaltet ausgewählte Themen aus den Berei chen: The module introduces some fundamental ideas in classical approximation theory as well as some of its modern aspects. The module covers selected topics from:• Approximation by algebraic polynomials (1st Weier strass theorem) • Trigonometric Polynomials (2nd Weierstrass theorem) • Characterization of best approximation • Lagrange, Chebyshev and Hermite interpolation • Orthogonal polynomials (Christoffel-Darboux Identity) • Entropy numbers and applications • General s-Numbers and applications",mündliche Prüfung (ca. 30 Minuten) 30-minute oral examination,"Präsentation und Beamer, Tafel/Tablet Presentation and projector, blackboard/tablet","A Short Course on Approximation Theory, N. L. Carothers Modern Approximation Theory, J. Vybíral",MSc AI Engineering and MSc Informatik/ Computer Science
6117,Convex Geometry and Applications to Linear Programming,472730,Unregelmäßig Irregular,1 Semester,Prochno,"Prochno, Sonnleitner",Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,3 V + 1Ü,60 Std. Präsenz + 40 Std. Übungen + 80 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 40 hrs exercises + 80 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Lineare Algebra I, Analysis I Linear Algebra I, Analysis I","Verwendbarkeit in weiteren Master Informatik, Bachelor Mathematik Studiengängen Master Computer Science, Bachelor Mathematics","Kenntnisse / Skills/Knowledge Die Studierenden kennen Grundkonzepte und -resultate der Konvexgeometrie und der Linearen Optimierung. — The students know fundamental concepts and statements of convex geometry and linear programming.  Fähigkeiten / Abilities Die Studierendenübenanhandausgewählter Probleme Begrif fe und Methoden aus der Konvexgeometrie und der Linearen Optimierung einzuordnen und anzuwenden. Sie wenden diese an, um konkrete Fragestellungen zu beantworten. — The students practice on selected problems to classify and apply concepts and methods of convex geometry and linear programming. They apply these to solve concrete problems. Kompetenzen / Competencies Die Studierenden sind in der Lage, die Konzepte und Metho den der Konvexgeometrie und der Linearen Optimierung bei konkreten Fragestellungen anzuwenden. —The students are able to apply concepts and methods of con vexgeometryandlinearprogrammingtoconcreteproblems.","Die Konvexgeometrie beschäftigt sich mit konvexen Mengen im euklidischen Raum und bildet die Grundlage der Konvexen Optimierung, wozu die Lineare Optimierung zählt. Dieser Zu sammenhang wird durch Themenbereiche aus der folgenden Liste dargestellt: • Grundlagen der Konvexgeometrie • Geometrische Version des Satzes von Hahn-Banach • Satz von Krein-Milman über Extremalpunkte • Polytope und Polyeder • Grundlagen der Linearen Optimierung • Simplex Algorithmus • Farkas’ Lemma • “Neighborly Polytopes” und dünne lineare Systeme — Convex geometry is concerned with convex sets in Euclidean space and forms the basis of convex optimization, of which linear programming is part. This relation will be demonstrated through topics from the following list: • Elementary convex geometry • Geometric Hahn-Banach theorem • Krein-Milman theorem on extreme points • Polytopes and Polyhedra • Linear programming basics • Simplex algorithm • Farkas’ lemma • Neighborly Polytopes and sparse linear systems",Klausur (90 Minuten) oder mündliche Prüfung (ca. 30 Mi- nuten) in deutscher oder englischer Sprache; die genaue Prü-  fungsart wird zu Beginn des Semesters bekannt gegeben. 90-minute written examination or oral exam (about 30 minu tes)in Germanor English; theprecisemodeofassessmentwill be announced at the start of the semester.,"Präsentation und Beamer, Tafel/Tablet Presentation and projector, blackboard/tablet",wird zu Beginn des Semesters be- kannt gegeben Additional reading material will be announced at the start of the semester,MSc AI Engineering and MSc Informatik/ Computer Science
6120,Principles of AI Engineering,455410,Unregelmäßig Irregular,1 Semester,Herbold,Herbold,Englisch English,Modulgruppe „A IS E“ Modulgruppe „A IS E“,2 V + 2Ü,60 Std. Präsenz + 45 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 45 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Software Engineering, Introduction to A I Engineering","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen die grundlegenden Begriffe und Ver- fahren zur Entwicklung von Anwendungen mit Komponenten der Künstlichen Intelligenz (A I/K I) und wissen wie diese im Operativbetrieb eingesetzt werden können. Sie können zu gegeben Problemengeeignete Anforderungenan K ISystemede  finieren, eine geeignete Architektur auswählen und umsetzen, und die Qualität dieser Systeme sichern. Sie können nicht funktionale Aspekte von K I-Systemen bewerten, um einen verantwortungsbewussten, ethischen, und mit regulatorischen Anforderungen kompatiblen Einsatz zu gewährleisten. —Thestudentsknowtheterminologyandmethodsforthedeve lopmentofapplicationswithcomponentspoweredby Artificial Intelligence (A I) and how they can be used in operation. They know how to define requirements for A I systems, can defineand implement suitable architectures, and ensure their qua lity of such systems. They can assess non-functional aspects of A I systems to ensure a responsible, ethical, and regulatory compliant use.",Dieses Modul behandelt die Themen: • Requirements Engineering für Systeme mit K I Kompo- nenten• Architektur und Design von Systemen mit K I Kompo nenten • K I Pipelines • Testen von K I Komponenten • Datenqualität • Continuous Deployment und M LOps • Verantwortungsbewusstes entwickeln von K Is • Ethische und regulatorische Aspekte von K Is — This module covers the following topics:• Requirements engineering for systems with A I com ponents • Architecture and design of systems with A I components • A I/M L pipelines • Testing of A I components • Data quality • Continuous deployment and M LOps • Responsible development of A Is • Ethical and regulatory aspects,"Portfolio: Bearbeitung eines Semesterprojekts, nachgewiesen durch eine ca. 10-minütiges Kolloquium mit Präsentation und einen ca. 2-seitigen schriftlichen Bericht der eigenen Projektergebnisse am Semesterende. 60-minütige Klausur oder ca. 15 Minuten mündliche Prüfungjeweils in deutscher oder englischer Sprache. Die genaue Prü fungsart wird zu Beginn des Semesters bekannt gegeben.  — Portfolio:Implementation of a semester project completed with a pre sentation of approximately 10 minutes duration and a 2 page written report featuring a demonstration of results at the end of the semester. A 60-minute written or oral examination of approximately 15 minutes duration conducted either in German or English. Theform of assessment is announced at the beginning of the se mester.","Präsentation mit Tafel und Beamer Presentation with a projector, blackboard",Wird zu Beginn der Vorlesung bekannt gegeben,MSc AI Engineering and MSc Informatik/ Computer Science
6121,Requirements Engineering,455412,Unregelmäßig Irregular,1 Semester,Herbold,Herbold,Englisch English,Modulgruppe „A IS E“ Modulgruppe „A IS E“,"2 V+2Ü Für die Übungen im Rahmen der Lehrveranstaltung besteht Anwesenheitspflicht. Um den Erfolg der Veranstaltung zu gewährleisten, ist eine verstärkte Interaktion der Studierenden untereinander, aberauch zwischen Studierenden und Betreuern notwendig. Insbesondere arbeiten die Studierenden in einer Gruppe an ei nem das ganze Semester andauernden Projekt, in welchem gemeinsam Anforderungen erhoben, verfeinert, dokumentiert, und validiert werden. Im Rahmen dieser Projekte nehmen die Lehrenden die Rolle von Kunden ein. Die Kunden stehen un ter anderem für Interviews und Verhandlungen im Fall von Konflikten, sowie zur Validation von Anforderungen zur Ver fügung. Diese Interaktionen mit Kunden sind ein wesentlicher Bestandteildes Requirements Engineering. Ohne Anwesenheit kann daher nicht sichergestellt werden, dass der Einsatz dergelehrten Methoden erlernt wird, insbesondere was den Um gang mit Kunden angeht. —In this lecture’s exercises, participants’ attendance is manda tory. In order ensure the module’s success, an intensified interacti on amongst students but also between students and lecturers is essential. Most notably, participants collaborate within a group project throughout the entire semester in which they define, refine, document and validate requirements together. Withinthoseprojects, lecturerandteachingassistantsassume the roles of clients who are primarily available for interviews,  negotiations in the event of conflicts as well as validation of requirements. Suchformsofinteractionwithclientsarecrucialelements of requirements engineering. Without regular atten dance, learninghowtousetheconveyedmethods, inparticular in dealing with clients, could not be warranted.",60 Std. Präsenz + 45 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 45 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Software Engineering,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden können die Begriffe Anforderung/Requi- rement und Requirements Engineering definieren und kennen die Prinzipien des Requirements Engineerings. Sie lernen den Requirements Engineering Prozess kennen und welche Rol le dieser in der Softwareentwicklung spielt. Sie kennen den Systemkontext und die Kontextgrenze, Methoden für die Erhebung von Anforderungen und für die Interpretation der erhobenen Informationen, Verhandlungsmethodenmit Stakeholdern, die Strukturvon Anforderungsdokumentationen, Techni kenfürdie Anforderungsdokumentationinnatürlicher Sprachesowiefürdiemodellbasierte Anforderungsdokumentation, Me thoden für die Validierung von Anforderungen, sowie für das Management von Anforderungen, wie das Änderungsmanagement und die Nachverfolgung von Anforderungen. Für ein ge gebenes Problemkönnendie Studierendendieobengenannten Methoden anwenden, um eine geeignete Anforderungsdefini tion zu entwickeln. —The students can define the terms requirement and require  ments engineering and acquire knowledge on the principles of requirements engineering. They become acquainted with the generalrequirementsengineeringprocessandknowhowitcan be embedded into the overall software development process. They gain knowledge about the system context and contextboundaries, requirements elicitation techniques, the interpre tation of elicitation results, the negotiation of requirements withdifferentstakeholders, thestructureofdocumentsfortherequirements documentation, the requirements documentati on in natural language, techniques for the use of structurednatural language, the requirements documentation with models, the validation of requirements, managing changes to re quirements, and tracing requirements through a development process. The students can apply the aforementioned methodsto a given problem to derive a suitable requirements specifi cation.","Dieses Modul vertieft die Grundlagen der Softwaretechnik mit Details zum Umgang mit Anforderungen. Anforderungen wer- den am Beginn von Projekten erhoben und sind entscheidend für den Projekterfolg. Es wird ein vollständiger Requirements Engineering Prozess behandelt, von der Erhebung der Anforderungen, überdie Dokumentationund Validierungder Anforderungen, bis hin zum Management der Anforderungen wäh rend des Software Lebenszyklus. — This module deepens the foundations of software engineering with details regarding requirements. Requirements are elicited at the beginning of a project and are crucial for its success. The module considers a complete requirements engineering process, starting with the elicitation of requirements, followed by the documentation and validation of requirements, up tothe management of requirements throughout the software li fecycle.","Portfolio bestehend aus: Bearbeitung eines Semesterprojekts, nachgewiesen durch ein ca. 10-minütiges Kolloquium mit Präsentation und einen ca. 2-seitigen schriftlichen Bericht der eigenen Projektergebnisse am Semesterende. 60 Minuten Klausur oder ca. 15 Minuten mündliche Prüfungjeweils in deutscher oder englischer Sprache. Die genaue Prü fungsart wird zu Beginn des Semesters bekannt gegeben. — Portfolio examination including:Implementation of a semester project completed with a pre  sentation of approximately 10 minutes’ duration and a 2 page written report featuring a demonstration of results at the end of the semester. A 60-minute written or oral examination of approximately 15 minutes’durationconductedeitherin Germanor English. Theform of assessment is announced at the beginning of the se mester.","Präsentation mit Tafel und Beamer Presentation with a projector, blackboard","Klaus Pohl, Chris Rupp: Requirements Engineering Funda- mentals: A Study Guide for the Certified Professional for Re-quirements Engineering Exam-Foundation Level-I RE Bcom pliant Klaus Pohl: Requirements Engineering: Fundamentals, Prin ciples, and Techniques",MSc AI Engineering and MSc Informatik/ Computer Science
6122,Mining Software Repositories Lab,455423,Unregelmäßig Irregular,1 Semester,Herbold,Trautsch,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,5Ü,75 Std. Präsenz + 135 Std. Vor- und Nachbereitung Workload 75 contact hours + 135 hrs independent study and implemen tation,ECTS/Credits: 7,Keine None,"Software Engineering, Introduction to A I Engineering, Advan- ced Topics in Data Science, Kenntnisse in Python Software Engineering, Introduction to A I Engineering, Advan ced Topics in Data Science, Python Programming Language",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Die Studierenden kennen praktische Anwendungen von Data Scienceund Machine Learning Techniken, um Fragestellungenaus dem Software Engineering basierend auf Daten aus Soft ware Repositories zu bearbeiten. Sielernendurchdie Bearbeitungvon Fragestellungendes Soft  ware Engineerings den Prozess der Datenanalyse kennen undführen diesen selbstständig durch. Hierbei lernen die Studie renden geeignete Hypothesen zu definieren, benötigte Datenausgeeigneten Quellenzusammeln, Analysemodellezuerstel len inkl. des Trainings und der Auswertung von Modellen, die statistische Auswertung der Ergebnisse durchzuführen und die Ergebnisse zu präsentieren. — The students know practical applications of data science andmachine learning techniques to answer questions about soft ware engineering based on data from software repositories. Theylearntheprocessofrepositorydataanalysisthroughtheirworkonsoftwareengineeringtopics. Thestudentslearntode fine hypotheses, to collect data from suitable data sources, to create analysis models including their training and evaluation, to statistically assess results and to present their findings.","Die Studenten arbeiten mithilfe von Daten aus Software Re- positories in Gruppen an verschiedenen Fragestellungen aus der Software Engineering Forschung. Die Gruppen arbeiten im Verlauf des Kurses an unterschiedli chen Projekten. Für jedes Projekt bzw. Fragestellung müssen Datenextrahiertundtransformiertbzw. bereinigtwerden. Die se Daten müssen dann anhand der Fragestellung ausgewertet bzw. in einem Machine Learning Modell verarbeitet werden. Am Ende jedes Projektes stellen alle Gruppen Ihre Ergebnisse in einer Präsentation vor. — The students work in groups on different topics from software engineering research using software repository mining. The groups work on different projects during the course. For each project suitable data needs to be extracted, transformed, and/or cleaned. The data needs to be evaluated or used as input for a suitable machine learning model. At the end of each project, the groups present their results.","Portfolio-Prüfung basierend auf der Eignung, Implementie- rung, und Auswertungsmethodik der gewählten Methoden, den erzielten Ergebnissen, und der Präsentation der Projek tergebnisse. Die Elemente des Portfolios sind: Der Quelltext inklusive Dokumentation, eine schriftliche Ausarbeitung zu den Projektergebnissen (max. 8 Seiten), Präsentationen der Projektergebnisse, sowie ein abschließendes Prüfungsgespräch (max. 10 Minuten) mit jedem Teilnehmenden. Bei Teampräsentationen muss jeder Teilnehmende den Eigenanteil am Projekt darstellen. Zusätzlich werden die Eigen  anteile in der Quelltextdokumentation und der Ausarbeitung schriftlich festgehalten. Details zur Bewertung werden zu Beginn der Lehrveranstal tung erläutert. — Portfolio exam based on the suitability, implementation and assessment refinement of the chosen methods, the achieved results, and communication/presentation of the project. The portfolio elements are: code with documentation, a writtenreport on the outcome of the projects (max. 8 pages), pre sentations given over the course of the semester and a finalexamination conversation (max. 10 minutes) with each indi vidual participant. Within the team presentations, each participant showcases her/his own personal contribution to the project. Additionally, participants declare in written form their individual contribu tions as part of the report and the code documentation. Details on the assessment including count and length of thepresentations will be announced at the beginning of the cour se.",Präsentation mit Beamer Presentation with a projector,Wird zu Beginn der Vorlesung bekannt gegeben Will be announced at the beginning of the lecture,MSc AI Engineering and MSc Informatik/ Computer Science
6123,Deep Learning for Natural Language and Code,472700,Unregelmäßig Irregular,1 Semester,Herbold,Herbold,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,2 V + 2Ü,60 Std. Präsenz + 45 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 45 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Introduction to Deep Learning,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden kennen die üblichen Aufgaben, die durch Verarbeitung von Text gelöst werden können, sowohl für die natürliche Sprache, als auch für Code. Sie kennen moderne auf Deep Learning basierende Verfahren zum Lösen dieser Probleme und können diese praktisch umsetzen. Sie wissen  welche Verfahren für eine gegebene Problemstellung geeignet sind und können diese auswählen. Sie kennen die Grenzen der Modelle und können die Güte der Ergebnisse bewerten. — The students know the typical tasks that can be solved through natural language and code processing. They know modern deep learning approaches to address these tasks and know how to implement them in practice. They know how select suitable methods for a given problem. They know thelimitations of the models and can evaluate their performan ce.",Dieses Modul behandelt die Themen: • Typische Aufgaben der Textverarbeitung • Word embeddings und Recurrent Neural Networks • Transformer und Pre-training • Encoder-only Modelle • Decoder-only Modelle • Encoder-decoder Modelle • Domainspezifische Modelle • Embeddings für Code • Transformer für Code • Multimodale Modelle — This module covers the following topics: • Typical tasks for language and code processing • Word embeddings and recurrent neural networks • Transformers and pre-training • Encoder-only models • Decoder-only models • Encoder-decoder models • Encoder-decoder models • Domain-specific models • Embeddings for code • Transformers for code • Multimodal models,90-minütige Klausur oder mündliche Prüfung (20 Minuten); diegenaue Prüfungsartwirdzu Beginndes Semestersbekannt gegeben. 90-minute written or 20-minutes oral examination; the preci se mode of assessment will be announced at the start of the semester.,"Präsentation mit Tafel und Beamer Presentation with a projector, blackboard",Wird zu Beginn der Vorlesung bekannt gegeben Will be announced at the beginning of the lecture,MSc AI Engineering and MSc Informatik/ Computer Science
6124,Mining Software Repositories,455433,Unregelmäßig Irregular,1 Semester,Herbold,Herbold,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,2 V + 2Ü,60 Std. Präsenz + 45 Std. Übungen + 75 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 45 hrs exercises + 75 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Software Engineering,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Die Studierenden kennen die Datenquellen, aus denen man historische Datenüberdie Softwareentwicklungsammelnkann undkönnendiese Datenmit Hilfevongeeigneten Werkzeugensammeln. Sie können heuristisch Verknüpfungen zwischen gesammelten Daten finden sowie Informationen über Fehler ex  trahieren. Die Studierenden kennen die üblichen Fehlerquellender Heuristiken. Sie können qualitative Daten aus Reposito ries sammeln. Sie wissen, wie man diese Daten benutzt, um Fragestellungen über die Softwareentwicklung zu beantworten und können hierfür etablierte Verfahren anwenden. — The students know the data sources from which historic dataabout software development can be collected and know sui table tools to collect such data. They can use heuristics to detect links within this data and to collect information aboutbugs. They are aware of common sources of errors within the se heuristics. They can qualitatively label data from softwarerepositories. Theyknowhowtousedatafromsoftwarereposi tories to answer questions about software engineering and can apply suitable methods for this purpose.","Dieses Modul behandelt die Themen: • Sammeln von Daten aus Softwarerepositories• Erkennenvon Linkszwischenverschiedenen Datenpunk ten, zum Beispiel Commits und Issues. • Softwaremetriken • Sammeln von Daten über Softwarefehler • Fehler- und Rauschquellen in den Daten • Soziale Netzwerke in der Softwareentwicklung • Qualitatives codieren von Daten • Analyse von Daten aus Softwarerepositories. — This module covers the following topics: • Collection of data from software repositories • Detection of links between data points, e. g. , commits and issues • Collection of data about software bugs • Sources of noise within the data • Social networks in software development • Qualitative coding of data • Analysis of data from software repositories",90-minütige Klausur oder mündliche Prüfung (20 Minuten); diegenaue Prüfungsartwirdzu Beginndes Semestersbekannt gegeben. 90-minute written or 20-minutes oral examination; the preci se mode of assessment will be announced at the start of the semester.,"Präsentation mit Tafel und Beamer Presentation with a projector, blackboard",Wird zu Beginn der Vorlesung bekannt gegeben Will be announced at the beginning of the lecture,MSc AI Engineering and MSc Informatik/ Computer Science
6125,AI Engineering Lab,455437,Unregelmäßig Irregular,1 Semester,Herbold,Trautsch,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,5Ü,75 Std. Präsenz + 135 Std. Vor- und Nachbereitung Workload 75 contact hours + 135 hrs independent study and implemen tation,ECTS/Credits: 7,Keine None,"Software Engineering, Introduction to A I Engineering, Advan- ced Topics in Data Science, Python Programming Language",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Die Studierendenerlernendiewichtigstenpraktischen Implika- tionendurchden Einsatzvon Machine Learning Komponentenin einem Softwareprojekten durch die Umsetzung eines Pro jekts. Relevante Aspekte, die durch den Einsatz von Machine Lear ning beeinflusst werden sind unter anderem die Auswirkungenauf die Anforderungsanalyse, Continuous Integration, Soft waretests und das U I Design. Die Studierenden müssen außerdem Machine Learning spezifischen Anforderungen spezi fizieren, umsetzen, und deren Umsetzung überprüfen, unter anderem Fairness, Erklärbarkeit und der Notwendigkeit eines „human-in-the-loop“. Weiterhinmüssendie Komponentendes Projektes evaluiert und überwacht werden können. —The students learn practical implications of combi ning/including machine learning parts in a software project through the implementation of projects. Among others, relevant aspects that are influenced by the use of machine learning that are considered during the projects are the implications for requirements, continuous integration, testing, and U I design. The students learn to specify, imple ment, and validate machine learning specific requirements like fairness, explainabilityora“human-in-the-loop”. Theirfurther evaluate and monitor the components of a project.","Die Studierenden arbeiten in Gruppen und erstellen ein oder mehrere Projekte, welche ein oder mehrere Machine Learning Komponenten beinhalten. Jedes Projekt wird vollständig entwickelt, sodass es eine dem Projektziel entsprechende Nutzeroberfläche oder Programmierschnittstelle gibt. Das Projekt muss die vorgegebene Aufgabe für den Benutzer mit Hilfe der Machine Learning Kom ponenten erfüllen. Die Studierenden präsentieren den Projektfortschritt, die fer tige Anwendung und welche Herausforderungen während der Entwicklung auf welche Art und Weise gelöst wurden. — Thestudentsworkingroups, creatingoneormultipleprojects which use one or multiple machine learning components. Each project is developed to completion, such that there is a user interface of or programming interface suitable to achieve the project goals. The students present their project progress, how they addres sedchallengestheyfacedduringdevelopment, andthefinished product.","Portfolio-Prüfung. Die Elemente des Portfolios sind: Der Quelltext inklusive Dokumentation, eine schriftliche Ausarbei-tung zu den Projektergebnissen (max. 8 Seiten), Präsentationen der Projektergebnisse, sowie ein abschließendes Prüfungs gespräch (max. 10 Minuten) mit jedem Teilnehmenden. Bei Teampräsentationen muss jeder Teilnehmende den Eigenanteil am Projekt darstellen. Zusätzlich werden die Eigen  anteile in der Quelltextdokumentation und der Ausarbeitungschriftlich festgehalten. Details zur Bewertung werden zu Be ginn der Lehrveranstaltung erläutert. Portfolio exam. The portfolio elements are: code with docu mentation, a written report on the outcome of the projects (max. 8 pages), presentations given over the course of thesemester and a final examination conversation (max. 10 mi nutes) with each individual participant. Within the team presentations, each participant showcases her/his own personal contribution to the project. Additionally, participantsdeclareinwrittenformtheirindividualcontributi ons as part of the report and the code documentation. Details on the assessment will be announced at the beginning of the course.",Präsentation mit Beamer Presentation with a projector,Wird zu Beginn der Vorlesung bekannt gegeben Will be announced at the beginning of the lecture,MSc AI Engineering and MSc Informatik/ Computer Science
6140,Exemplary and Effective Programming,413152,Wird vermutlich nicht mehr angeboten Probably not offered anymore,1 Semester,Abbott,Abbott,Englisch English,Modulgruppe „A IS E“ Modulgruppe „A IS E“,1 V+3 P,"56 hours’ lectures & project meetings; Workload 124 hours’ study & project work. • First phase: 4 weeks of lectures (4 hours/week) • Second phase: 10 weeks for individual programming projects: 2 hours/week group progress meeting, and 2 hours/week technical discussions. Projects involve implementing (in C++, using Co Co ALib) advanced algorithms from computer algebra and/or number theory.",ECTS/Credits: 6,Keine None,"Access to a development environment for C++ (req. C++14 standard) (e. g. g++ & make on linux, clang & make on Ma- c OS, Cygwin environment on Microsoft) Mastersstudents:accesstoprofilingtools(e. g. gprof, valgrind and kcachegrind) Basic knowledge of procedural programming & classes (e. g. C++, Java or Python).  Basic algebra: finite fields, polynomial rings. Recommended: basic algebra & number theory, computer al gebra. Not required: numerical analysis.","Verwendbarkeit in weiteren Bachelor Mathematik, Master Informatik, Master Computa Studiengängen tional Mathematics Bachelor Mathematics, Master Computer Science, Master Computational Mathematics","Kenntnisse / Skills/Knowledge Participants acquire experience programming in a team on an established body of software: how and when to interact with other team members (incl. bug-tracking tools); softwarequality guarantees (e. g. exception-safety, thread-safety); whe re and how to “optimizeän implementation; how to documentprogram code, and how to read and interpret existing do cumentation; design of efficient and effective data-structures (i. e. “classesïn C++). Fähigkeiten / Abilities • Ability to work in an established team, planning and understanding different working roles. • Abilitytogiveconstructivecriticismtootherteammem bers, and ability to accept constructive criticism from other team members. • Ability to faithfully represent advanced mathematical structures through programming object classes. • Abilitytowritehighquality, maintainablesoftwarelibra rycodewithdocumentation; incl. accuratelydelineating input conditions and output guarantees. • Ability to implement proper, comprehensive error hand ling (e. g. avoiding memory leaks, corrupt structures, dangling references, etc). • Abilitytousecompilationbuildsystems, andunderstand error messages. • Ability to design thorough test suites (often in parallel with development and debugging). • (Master) Ability to determine where and how to “opti mize”programcode(incl. understandingtrade-offs, and when not to “optimize”) Kompetenzen / Competencies • Team membership: effective inter-communication. • Effective interface/A PI design (esp. ease of use). • Effective development (and debugging).  • Effective documentation writing. • Effective reading & understanding of source code writ ten by others. • Effective & safe use of on-line resources (e. g. cpprefe rence, B OO ST, Stack Overflow). • Master only - Effective “optimization""(e. g. via profi ling).","Using C++ as a vehicle, participants acquire experience pro- gramminginateamonanestablishedbodyofsoftware:name- ly Co Co ALib, an open-source C++ library for computationsin commutative algebra, which already includes several fun damental data-structures and algorithms. Building on top of the foundations of Co Co ALib, students are required to designand develop efficient, robust implementations of advanced al gorithms from the realms of computer algebra and/or number theory. They will aspire to achieving quality high enough to permit incorporation into the Co Co ALib library. Students gain practical knowledge: how and when to interact with other team members (incl. bug-tracking tools); software quality guarantees (e. g. exception-safety, thread-safety); how to document program code, and how to read and interpretexisting documentation; design & testing of efficient and ef fective data-structures (i. e. ""\classesïn C++). Masters only: where and how to ""\optimizeän implementation (incl. using specific profiling tools).","Finaloralpresentation 30min(incl. demo):Presentwhatwas achieved, andjustifydesigndecisions(withsupportfromprofi- lingtoolsfor Mastersstudents). Ifimplementationincomplete, explain why. Potentially give ideas for future development. Deliver (electronic copy) source code of implementation & test suite. Deliver (electronic copy) documentation: both for users and for maintainers; helpful examples.",-,"Kreuzer & Robbiano Computational Commutative Algebra (vols 1, 2)H. Cohen ACoursein Computational Algebraic Number Theo ry V. Shoup A Computational Introduction to Number Theory and Algebra www. shoup. net S. Meyers Effective C++ (book series)",MSc AI Engineering and MSc Informatik/ Computer Science
6141,Komplexitätstheorie,482211,Jedes Wintersemester Every winter semester,1 Semester,Müller,Müller,Englisch English,Modulgruppe „A EM M“ Modulgruppe „A EM M“,4 V + 2Ü,"60+30 Präsenz, 90+90 Eigenarbeitszeit Workload 60+30 contact hours, 90+90 independent study",ECTS/Credits: 9,Keine None,"Theoretische Informatik I, Mathematische Logik Theoretical Computer Science I, Mathematical Logic","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Die Vorlesungisteine Einführungindas Pversus NP Problem und die es umgebende Theorie. Die Studierenden lernen • algorithmische Ressourcen wie Laufzeit, Speicherplatz, Nichtdeterminismus, Alternierung oder Randomisierung von Algorithmen abzuschätzen. • die inherente Komplexität gegebener Berechnungsprobleme zu erkennen und via zentraler Komplexitätsklas  sen zu klassifizieren. • theoretische Resultatezur Strukturdieser Komplexitäts klassen. — The course offers an introduction to the P versus N P problem and its surrounding theory. Students learn• to estimate algorithmic resources like runtime, memory, nondeterminism, alternation or randomness of algo rithms. • to classify computational problems according to their inherent complexity and via complexity classes. • theoretical results concerning the structure of these complexity classes.","Turingmaschinen (Hilbert, Gödel, Turing), Zeit (P, Zeit- hierarchie, Schaltkreisfamilien), Nichtdeterminismus (N P, nichtdeterministische Zeithierarchie, Cooks Theorem, N PVollständigkeit Beispiele und Theorie, Ladner’s Theorem, Levin Optimalität), Platz (L, N L, P SP AC E, Savitchs Theo rem, Immerman-Szelepcsényi Theorem), Alternierung (co NP, U P, Falltürfunktionen, Polynomialzeithierarchie, Orakel, timespace trade-offs), Schaltkreisgrösse (Nichtuniformität, Karp Lipton Theorem, Shannons Theorem, Hastads Switching Lemma), Randomness (arithmetische Schaltkreise, R P, B PP, po lynomial identity testing, Sipser-Gacs Theorem) —Turing machines (Hilbert, Gödel, Turing), Time (P, time hierarchy, circuit families), Nondeterminism (N P, nondeterministic time hierarchy, Cook’s Theorem, N P-completeness ex amplesandtheory, Ladner’stheorem, Levinoptimality), Space (L, N L, P SP AC E, Savitch’s theorem, Immerman-Szelepcsényitheorem), Alternation (co NP, U P, trapdoors, polynomial hier archy, oracles, time-space trade-offs), Size (non-uniformity, Karp-Lipton theorem, Shannon’s theorem, Hastad’s switchinglemma), Randomness (arithmetical circuits R P, B PP, polyno mial identity testing, Sipser-Gacs theorem)","Je nach Teilnehmerzahl mündliche Prüfung (ca. 30 Minuten) oder Klausur (120 Minuten). Die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 120-minute written or oral exam of about 30 minutes, de pending on the number of participants. The precise mode of assessment will be announced at the start of the semester.",Tafel Blackboard,"Arora, Barak, Computational Complexity: A Modern Ap- proach, Cambridge University Press, 2009. Papadimitriou, Computational Complexity, Addison-Wesley, 1995.",MSc AI Engineering and MSc Informatik/ Computer Science
6142,Fortgeschrittene Komplexitätstheorie,472710,Unregelmäßig Irregular,1 Semester,Müller,Müller,Englisch English,Modulgruppe „A EM M“ Modulgruppe „A EM M“,2 V + 2Ü,"60 Std. Präsenz+120 Std. Übungen, Nachbereitungder Vor- Workload lesung, Prüfungsvorbereitung 60 contact hours + 120 hrs Exercises, independent study and exam preparation",ECTS/Credits: 6,Keine None,Komplexitätstheorie oder Theoretische Informatik I I Computational Complexity Theory or Theoretical Computer Science I I,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Students learn about advanced topics in computational com- plexitytheory. Inparticulartheylearnvariousmethodstoprovelower bounds on circuit size. These include random restricti ons and polynomial approximations. These broadly draw from  techniques from combinatorics, stochastics and algebra.","The course treats advanced topics in computational comple- xity theory, it focusses on circuit lower bounds: Hastad’s ex-ponential lower bound for bounded depth circuits via the ran dom restriction method, Razborov-Smolensky’s lower boundfor such circuits with modulo counting gates via the approximation method, and Razborov’s lower bound for monotone circuits. However, for general circuits not even superli near lower bounds are known today for explicit functions, and circuit complexity has been dubbed ""complexity theory’s Waterloo""(Arora-Barak). Meta-analyses show that superpolynomial lower bounds are unreachable by the approximation method (Razborov) or so-called natural proofs (Razborov Rudich). As an algorithmic application of hardness hard wetreat pseudorandom generators and derandomization, in par ticular the Nisan-Wigderson generator. The course is a continuation of Computational Complexity Theory. Knowledge of e. g. Theoretical Computer Science I I is sufficient for a large part of the material, and students with thisbackgroundarewelcome. Theyareassistedincopingwith eventual extra material.","Je nach Teilnehmerzahl mündliche Prüfung (ca. 30 Minuten) oder Klausur (90 Minuten). Die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 90-minutes written exam or 30 minutes oral exam, dependingon the number of participants. The precise mode of assess ment will be announced at the start of the semester.",Tafel Blackboard,"Arora, Barak, Computational Complexity: A Modern Ap- proach, Cambridge University Press, 2009.",MSc AI Engineering and MSc Informatik/ Computer Science
6143,Constraint Satisfaction Problems,472720,Unregelmäßig Irregular,1 Semester,Müller,Gaysin,Englisch English,Modulgruppe „A EM M“ Modulgruppe „A EM M“,2 V + 2Ü,"60 Std. Präsenz+120 Std. Übungen, Nachbereitungder Vor- Workload lesung, Prüfungsvorbereitung 60 contact hours + 120 hrs Exercises, independent study and exam preparation",ECTS/Credits: 6,Keine None,Komplexitätstheorie oder Theoretische Informatik I I Computational Complexity Theory or Theoretical Computer Science I I,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics",Studentslearnhowtomodelcomputationalproblemsas Cons- traint Satisfaction Problems. They learn general methods todesignalgorithmsfortheirefficientsolutionortodiscerntheo retical reasons for their intractability. They learn tools from universal algebra underlying these techniques.,"A Constraint Satisfaction Problem (C SP) asks to decide whe- ther there is an assignment to given variables, ranging over acertain domain, that satisfies a given set of constraints. Equivalently, this asks for a homomorphism between given struc tures. A famous example is the satisfiability problem for the Boolean domain (S AT). The story of C SPs started 50 years ago, and during the last 25 years C SPs play a prominent role throughout computerscience. On the one hand, they allow to model a wide va riety of combinatorial problems (in mathematics, computer science, artificial intelligence. .. ) in a natural and faithful way. On the other hand, they come together with general algo rithmic techniques for their solution, or general reasons for their computational hardness. These techniques are based on universal algebra.","Mündliche Prüfung, ca. 30 Minuten. Oral examination, ca. 30 minutes.",Tafel Blackboard,-,MSc AI Engineering and MSc Informatik/ Computer Science
6144,Model Theory,482201,Alle vier Semester Every four semester,1 Semester,Müller,Müller,Deutsch oder Englisch German or English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,"60 + 30 Std. Präsenz, 120 + 60 Std. Eigenarbeitszeit Workload 60 + 30 hrs presence, 120 + 60 hrs self study",ECTS/Credits: 9,Keine None,Grundlegende Kenntnisse aus der Mathematischen Logik Basic knowledge of mathematical logic,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics",After the course the students are able to • understand the interplay between formal axioms and their models • comprehend important model constructions • analyze theories and model classes • apply model theory to algebra,The following topics will be covered:  • Consequences of Gödel’s completeness theorem • Model constructions • Properties of classes of models and theories • Stability • Applications to algebra,120-minütige schriftliche Prüfung oder mündliche Prüfung (ca. 30 Minuten); die genaue Prüfungsart wird zu Semester- beginn bekannt gegeben. 120-minute examination or 30-minute oral examination. The precise mode of assessment will be announced at the start of the semester.,"Tafel, Overhead, Beamer Projector, blackboard","A. Prestel: Einführung in die Mathematische Logik und Mo- delltheorie. Vieweg, 1986. P. Rothmaler:Einführungindie Modelltheorie. Spektrum Aka demischer Verlag, 1995. W. Hodges: A shorter model theory. Cambridge University Press, 1997. D. Marker: Model Theory: An introduction. Springer, 2002. K. Tent, M. Ziegler: A course in Model Theory. Cambridge University Press, 2002.",MSc AI Engineering and MSc Informatik/ Computer Science
6160,Cooperative Autonomous Vehicles,455393,Wird vermutlich nicht mehr angeboten Probably not offered anymore,1 Semester,Vinel,Vinel,Englisch English,Modulgruppe „A IA“ Modulgruppe „A IA“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Grundlagen der Wahrscheinlichkeitstheorie Basics of probability theory,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Students acquire basic knowledge about cooperative automa- ted/autonomousvehiclesaswellasadvanceddriverassistancesystems. Theylearnabouttheconceptsofcooperativeawaren ess, collectiveperception, andcooperativemaneuvering. Theybecomefamiliarwithinter-vehicularcommunicationtechnolo  gies. Fähigkeiten / Abilities Students acquire the abilities to apply discussed techniquesfor the performance evaluation of contemporary vehicle-to everythingcommunicationsstandards. Theyareabletodesign protocols to support cooperative autonomous driving given specified application requirements and to assess cooperative autonomous driving scenarios in terms of their safety. Kompetenzen / Competencies Students learn to classify computation, communication anddecision-makingarchitecturesforcooperativeautonomousve hicles, evaluate advantages and disadvantages of cooperative maneuvering approaches, to select appropriate methods for the analysis of inter-vehicular communication protocols.","The module includes the topics on vehicular automation le- vels, cooperative awareness and decentralized environmental notifications, collective perception, cooperative maneuvering, vehicularplatooning, cooperativevideosystems, intelligentintersections, vehicletomobileedgecomputingserverconnectivity, 5 G vehicular communication paradigms, I TS-G5 commu nication standards, age-of-information and semantics aware communications.",90min Klausur 90min written exam,"Präsentation mit Beamer, Tafel Presentation with projector, blackboard",Nach Ansage in der Vorlesung Announced during the lecture,MSc AI Engineering and MSc Informatik/ Computer Science
6171,Data Visualisierung,471760,Jedes Sommersemester Every summer semester,1 Semester,Heinzl,"Heinzl, Gall",Englisch English,Modulgruppe „A IM“ Focus „A IM“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Grundlagen der Informatik, Software Engineering, Program- mierung I + I IFoundationsof Computer Science, Software Engineering, Pro gramming I+I I",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"After successful completion of the course, students are able tounderstandadvancedtheoreticalconceptsofdatavisualiza-tion. Furthermore, students can implement specific program  ming tasks resulting from a scientific article.","Data Visualization consists of a theoretical lecture part and a practical exercise part. The lecture part on Data Visualization contains of a series of lectures which take place throughout the semester. In these lectures advanced data visualization topics will be covered, such as visualization of graph data or spatio-temporal data, immersiveanalytics, crossvirtualityanalyticsorvisualanalysisof non-destructive testing data in material sciences. The lecture introduces bridging data visualization concepts and fur ther covers the following aspects in two parts: 1) Revisiting Important Visualization Areas:• Scientific Visualization comprises volume and flow visualization. Volume visualization on the one hand is focused on direct and indirect techniques but also explo res underlying techniques such as ray casting for directvolume rendering, simple and advanced transfer functions, as well as iso-surfacing for indirect volume ren dering. Flow visualization on the other discusses visual metaphors and techniques for direct and indirect flow visualization. Advanced concepts in terms of topology visualization will be discussed. • Information visualization: While information visualiza tion targets the visualization of abstract data, with a specialization on graph data and networks. • Visual analytics and visual data science seek to facilita te analytical reasoning by interactive visual interfaces. It involves the use of visualization and interaction techniques to explore and analyze large, complex, and dyna mic datasets, with the goal of gaining insights, making discoveries, and supporting decision making. 2) Advanced Visualization Concepts: • Visualization Design:Visualization Design:Thischapterexplores models for visualization design in order to ju stify the choices made when applying vis techniques ina (novel) application area, e. g. , relating the visual en codings and interaction techniques to the requirements of the target task. • Biomedical visualization encompasses novel topics and approaches to enhance the understanding of biologicaland medical concepts and data. It involves data visuali zation of medical images (such as M RI or C T scans) or biologicalprocesses(suchasthemovementofmolecules in the body). • Tensor visualization is the process of representing ten sors (multi-dimensional arrays of data) in a visual for mat. This chapter will present visualization concepts mainly focusing on tensors of second order as well as respective abstraction concepts. Novel tensor analysis techniques, concepts for analyzing tensor field topology, and new tensor visualization methods will be discussed • Immersive(I A)and Cross Virtuality Analytics(X VA)arenoveltopicsinvisualizationrequiringsuitablevisualme taphors and interaction concepts for in depth analyses. I A is using engaging, embodied analysis tools to sup port data understanding and decision making. X VA isconcerned with systems for data visualization and ana lysisthatseamlesslyintegratedifferentvisualmetaphors and devices along the entire R VC to support multipleusers with transitional and collaborative interfaces ana lysisthatseamlesslyintegratedifferentvisualmetaphors and devices along the entire R VC to support multiple users with transitional and collaborative interfaces. • Visual Computing in Materials Science: Visual compu ting has become highly attractive for boosting researchendeavors in the materials science domain. Using visu al computing, a multitude of different phenomena may now be studied, at various scales, dimensions, or using different modalities. This was simply impossible. Visualcomputing techniques generate novel insights to understand, discover, design, and use complex material sys tems of interest. • Visualizationand Decision-Making Design Under Uncer tainty:Visualizationisacorecomponentofanydecisionor risk analysis process. Respective tools for this purpo se are becoming increasingly accessible. In addition, the visual literacy of the general public has been increasing due to the pervasiveness of visualizations in everyday life. As the appetite for decision making tools grows, so does the need to convey error, confidence, missing, or conflicting data visually. The exercise part will pose a “V IS Challenge” to the students. It requires the students to propose and implement their solu tions to given challenges in visualization. This V IS Challengeconsists of the implementation of a state-of-the-art visualiza tion technique based on a scientific article. Students choose from a shortlist of given scientific papers (i. e. , 2-3 recent highimpact articles). The students first need to read and under stand the given article. They need to present their proposed conceptswithrespecttothearticle’smainideasintheformof  paper prototypes. After a feedback loop the implementation will starts. There are no requirements regarding programminglanguages, however recommendations on languages, tools, li braries, etc. will be given. The exercise is ideally implemented in groups of two. The exercise is continuously supported by a tutor. For a positive grade, both lecture and exercise must be completed positively!","Portfolio Thegradefor Data Visualizationwillbebasedonthepractical implementation work and the theoretical knowledge. Theperformanceevaluationoftheexercisecoursefocusseson the implemented programming tasks in terms of the selected visualization paper. For a positive assessment, the students must present the selected article and their implementationconcepts. The implementation quality, functionality, and usa bility as well as the documentation of code and functionalitywill be evaluated. Finally, the students will present and demonstrate their final implementation. The score for the gra ding results is given as follows:• 1st presentation of the article incl. implementation con cept (10 points) • Implementationofthearticle’sunderlyingtechnique(45 points) • Functionality and usability (15 points) • Documentation of code + functionality (10 points)• 2nd presentation and demonstration of the implemen tation (20 points) The lecture part will be evaluated in an oral exam (approx. 15min) of the presented lecture content, in which the achieve ment of the teaching objectives will be checked. For a positive evaluation of Data Visualization, both exercise and lecture have to be completed positively.",The material is organized in thematic groups and presented by means of electronic slides. A practical design and imple- mentation project allows students to develop their analytical skills and deepen their programming knowledge.,"Chen, Hauser, Rheingans, Scheuermann: Foundations of Data Visualization, 2019 Telea: Data Visualization – Principles and Practice, Second Edition A K Peters Verlag, 2014. Munzer: Visualization Analysis and Design, A K Peters Verlag, 2014. Hansen, Johnson: The Visualization Handbook, 2005 Hansen, Chen, Johnson, Kaufman, Hagen: Scientific Visualization - Uncertainty, Multifield, Biomedical, and Scalable Vi sualization, 2014 Kim Marriott, Falk Schreiber, Tim Dwyer, Karsten Klein, Nathalie Henry Riche, Takayuki Itoh, Wolfgang Stuerzlinger, Bru ce H. Thomas, Immersive Analytics, 2018 Keim, Kohlhammer, Ellis, Mansmann: Mastering the Informa tion Age - Solving Problems with Visual Analytics, 2010 Ward, Grinstein, Keim: Interactive Data Visualization: Foun dations, Techniques, and Applications, 2010. Ware: Information Visualization, Second Edition: Perception for Design, 2004 Aigner, Miksch, Schumann, Tominski: Visualization of Time Oriented Data, Springer Verlag, 2011 Further materials in the lecture slides",MSc AI Engineering and MSc Informatik/ Computer Science
6172,Immersive Analytics PN xxxxxx,Not found,Jedes Wintersemester Every winter semester,1 Semester,Heinzl,Heinzl,Englisch English,Modulgruppe „A IM“ Focus „A IM“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Data Visualization, Grundlagen der Informatik, Software En- gineering, Programmierung I + I IData Visualization, Foundations of Computer Science, Soft ware Engineering, Programming I+I I",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"At the end of the course students will be able to understand theoretical concepts of immersive analytics. Furthermore, stu- dents can implement specific programming tasks resulting from a scientific topic or article.","Immersive Analytics consists of a theoretical lecture part and a practical exercise part. The lecture part contains of a series of lectures which take place throughout the semester. In these lectures, theoreti cal and advanced immersive analysis and visualization topics will be covered. The lecture introduces covers the following aspects: • Introduction to Immersive Analytics: Students learn the basic principles of immersive analytics together its goals and opportunities, some historical context as well as the broad research agenda of this field. A review on the terms of immersion and engagement is given. • The value of 3 D in information visualization: While In formation visualization is typically used in conventional 2 D displays and modern virtual reality in for 3 D data, this part explores potential benefits for immersive ana lytics in information visualization settings. • Multisensory immersive analytics introduces conceptsand backgrounds on visual representations, sonificati on and auralization, haptic displays, smell/olfaction, aswell as taste/gustation. Furthermore, the design of re spective systems will be reviewed integrating immersiveanalytics and modalities of non-visual immersive analy tics. • Interaction in immersive analytics is a major componentwithin the analysis workflow. Basic opportunities, requirements and tasks will be reviewed in order to culmi nate in natural user interfaces (N UP) and post W IM P (windows, icons, menus, pointer) interaction as well as respective designs and setups. • Immersivehumancenteredcomputationalanalytics:He re, the role of humans in a human-machine cooperativeanalysis will be addressed by first reviewing the clas sic loop of sensemaking in visual analytics, collaborativehumans-machineanalysisandfinallyrelateddesignprin ciples. • Immersive visual data stories: Visual data driven stories areanimportantmeansforcommunicatinginformation. Here, the challenges and opportunities of immersion arediscussed considering games research and related inter action concepts. • Situated analytics: The concept of situated analytics isintroduced in this section, employing data representa tions organized in relation to germane objects, places  or persons for the purpose of understanding, sense- and decision making. • (Collaborative) cross virtuality analytics enables visual analytics to use transitional and collaborative interfaces interconnecting different stages in the reality–virtuality continuum to seamlessly integrate different devices andsupportmultipleusers. Insightsareprovidedintorespec tive visualization and interaction techniques. • Applications of Immersive Analytics: Finally, applications of immersive analytics various domains are discus sed, such as life and health sciences or applications inengineering from materials science, production enginee ring towards sustainable cities and cultural heritage. Theexercisepartwillposean„Immersive Analytics Challenge“ to the students. In addition to the initial task to be completed intheformofstandardexercises, italsorequiresproposingand implementing own solutions to given challenges in the field ofimmersive analytics. These challenges focus on the implemen tation of state-of-the-art techniques typically based on recentscientific articles. The students need to present their propo sed concepts with respect to the articles’ main ideas. After a feedback loop the implementation starts. Programming skills are thus mandatory and previous knowledge of C# and Unity is advantageous. An introduction to Unity will be offered in the tutorial of the course. Furthermore, the exercise course is typically implemented in groups of two and continuously supported by a tutor.","The grade for Immersive Analytics will be based on the prac- tical implementation work and the theoretical knowledge. Part 1 (50%): Portfolio (Practical Implementation) Theperformanceevaluationoftheexercisecoursefocusseson theimplementedprogrammingtasksintermsofthe Immersive Analytics Challenge. For a positive assessment, the studentsmustpresenttheirimplementations. Theimplementationqua lity, functionality, and usability as well as the documentationof code and functionality will be evaluated. Finally, the stu dents will present and demonstrate their implementation. The score for the grading results is given as follows: • Presentation of initial exercises incl. concept regarding the immersive analytics challenge• Presentation and demonstration of the final implemen tation • Implementation of the proposed techniques • Functionality and usability  • Documentation of code Part 2 (50%): Oral exam or written exam (Theoretical Knowledge) The lecture part will be evaluated in an oral exam (ap prox. 20 min) of the presented lecture content or in a written exam (90 minutes), depending on the number of participants, in which the achievement of the teaching objectives will be checked. The students will be informed about the exact type of exam at the beginning of the semester. To pass the examination, both assessment components ha ve to be passed.",Thematerialisorganizedinthematicgroupsandpresentedby means of electronic slides. Initial exercise tasks together with a practical design and implementation project allows studentsto develop their analytical skills and deepen their program ming knowledge.,"• Marriott, Dwyer, Riche, Stuerzlinger: Immersive analy- tics, 2018 • Min Chen, Helwig Hauser, Penny Rheingans, Gerik Scheuermann, Foundations in Data Visualization, 2019• Fröhler, B. , Heinzl, C. (2022), A Survey on Cross Virtuality Analytics. Computer Graphics Forum, 41: 465-494. https://doi. org/10. 1111/cgf. 14447 • Unraveling the Design Space of Immersive Analytics: A Systematic Review. I https://doi. org/10. 1109/T VC G. 2023. 3327368 • Grand Challenges in Immersive Analytics. https://doi. org/10. 1145/3411764. 3446866 • Survey of Immersive Analytics. https://doi. org/10. 1109/tvcg. 2019. 2929033 • Immersive Analytics of Multidimensional Volumetric Data. https://doi. org/10. 34726/hss. 2021. 86329 Further materials in the lecture slides",MSc AI Engineering and MSc Informatik/ Computer Science
6179,Project in Visual Computing,455419,Normalerweise jedes Semester Typically every semester,1 Semester,Heinzl,Heinzl,Englisch English,Modulgruppe „A IM“ Focus „A IM“,2Ü+2 P,60 Std. Präsenz + 120 Std. Vor- und Nachbereitung Workload 60 contact hours + 120 hrs preparation and follow-up,ECTS/Credits: 6,Keine None,"Grundlagen der Informatik, Software Engineering, Program- mierung I + I IFoundationsof Computer Science, Software Engineering, Pro gramming I+I I",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"After positive completion of the course, students are able to perform and realize a reasonably sized software project in the areaofvisualcomputingorvisualization. Studentswillbeable to plan and execute respective tasks and implement visual computing techniques and methods in a prototypic system. After this practical course they are able to. ..  • analyze problems in the field of visual computing • design effective visualization concepts to solve them • implementtheseconceptsusingstate-of-the-artlibraries • create evaluation designs of visualization techniques","Visual computing integrates computer science disciplines de- aling with the acquisition, the analysis and the synthesis of (visual) data using computing resources in applications suchas industrial quality control, medical image and data analysis, robotics, multimedia systems, computer games, etc. . Asi de others, visual computing thus covers aspects from image processing, visualization, computer graphics, computer vision, virtual and augmented reality, pattern recognition, machine learning, as well as human computer interaction. Thisprojecttargetstheimplementationofalarger, technicallyoriented project in the field of visual computing or visualiza tion. The topics and contents of the project will be agreed upon individually with the supervisor and should cover a topic of mutual interest in visual computing. Didactic approach: In regular meetings with the supervisor (usually every one to two weeks), the individual steps of the software project to be completed are discussed. This includes: • Creation of a specification sheet • Rough draft • Detailed design • Implementation details • Test scenarios • Creation of results • Completion of project documentation • Final meeting • Presentation and discussion of the results It is intended that the assignment will be worked on in groups of two students.","Portfolio. The following items will be evaluated: Implementation and quality of the software project Presentation of the software project Discussion and defense of the chosen approach Evaluation of oral and written performance in the submissi on discussion, demonstration of the developed prototype and project documentation.",Presentations,Originial works,MSc AI Engineering and MSc Informatik/ Computer Science
6195,Integraltransformationen und Computertomographie,482301,Unregelmäßig Irregular,1 Semester,Sauer,Sauer,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,90 Std. Präsenz + 90 Std. Übungen + 90 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 90 contact hours + 90 hrs exercises + 90 hrs independent study and exam preparation,ECTS/Credits: 9,Keine None,"Analysis I+I I, Lineare Algebra, Bildverarbeitung Analysis I+I I, Linear Algebra, Image Processing","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden erwerben Kenntnisse der mathematischen Grundlagen der Integraltransformationen und deren Anwen dunginder Computertomographie. Siekennendiewichtigsten Verfahren in Theorie und numerischer Umsetzung.  —The students acquire knowledge of the mathematical foun dations of Integral Transforms and Computed Tomography. They know the most important algorithms in theory and nu merical realization. Fähigkeiten / Abilities Die Studierenden besitzen die Fähigkeit, die Argumente der Beweise nachzuvollziehen, und gegebenenfalls anwendungsbezogen weiterzuentwickeln und können auf der Basis dieses theoretischen Verständnisses numerische Verfahren ent wickeln. — The students have the ability to follow the arguments of theproofs, to extend them in an application context and to deve lop numerical algorithms based on their understanding of the theory. Kompetenzen / Competencies Die Studierenden besitzen die Kompetenz, komplexe mathematische Konzepteineinem Anwendungsgebietpraktischum zusetzen. —The students have the competence to provide a practical rea lization of complex mathematical concepts in the context of an application.",The Fourier transform; The Radon Transform; Fundamentals of Signal Processing; Filtered Backprojection; Algebraic Re- construction Techniques; Inverse Problems; Beamforms and Scan Geometries,90-minütige Klausur oder mündliche Prüfung (ca. 20 Minu- ten); die genaue Prüfungsart wird zu Beginn des Semesters bekannt gegeben. 90-minute written or approximately 20-minutes oral examina tion; the precise mode of assessment will be announced at the start of the semester.,"Präsentation mit Tafel und Beamer Presentation with a projector, blackboard","Natterer, Computed Tomography Helgason, Todd Quinto, Inverse Problems",MSc AI Engineering and MSc Informatik/ Computer Science
6205,Energy Informatics I,455415,Unregelmäßig Irregular,1 Semester,de Meer,de Meer,Englisch English,Modulgruppe „A IA“ Focus „A IA“,2 V + 2Ü,60h Präsenz+50hÜbungslösungen+70hfür Vorlesungsthe- Workload men und Prüfungsvorbereitung 60 hours of presence + 50 hours for solution to exercises + 70 hours for lecture topics and exam preparation,ECTS/Credits: 6,Keine None,"Software Engineering, Computer Networking, I T Security",Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Understanding of the relationship between I T and energy sys-tems including resource utilization and fundamental metho dologies, concepts, protocols and reference architectures used in the context of smart grids: • Understanding the relationship and responsibilities of  actors in energy economics for use case analysis • Studying and modelling of variable renewable energy sources, forecast and power flexibility • Knowledge of the communication architectures for smart grids, especially detailed understanding of the smart grid architecture model and how to apply it with model-driven development • Understandingofthemainprotocolsandstandardsusedfor information gathering, data analysis and communi cation in smart grids Fähigkeiten / Abilities Selecting and applying appropriate methods for modelling renewable energy sources and flexibility from e. g. battery stora ges or combined heat and power plants. Designing the overallarchitecture of smart grid applications with a focus on exchangeofinformationandcommunicationinfrastructuretechnologies using the Smart Grid Architecture Model. Identifica tion of the most important standards for the communication infrastructure of a smart grid. Application of software tools for grid monitoring, distributed smart grid control, and grid management. Kompetenzen / Competencies Classification of methods and techniques for modelling rene wable energy sources and flexibility in the smart grid. Deep understanding of the communication architectures used for the smart grid: motives behind energy business actors andcomponents, available standards, and pros and cons of diffe rent architectures and communication protocols for different applications in the smart grid. Understanding different smart grid applications in the context of the smart grid architecture model.","In this lecture, we focus upon what differentiates the smart grid from the ""traditional""power grid as it has been known for the last century. Furthermore, we provide the students with a fundamental understanding of energy economics, smart gridarchitecture and a focus on the communication and networ king sides. We will focus on the question how I CT can serve the energy system and how the different parts of the smart grid can be modelled appropriately. In this lecture, we discuss three main parts: First, we discuss the evolution of energy systems and theirmarket actors. This includes challenges and solution approa ches on integrating renewable energy sources in a smart grid using modelling of both energy sources and models for power flexibility such as storage systems or electric vehicles.  Part two introduces the smart grid architecture model (S GA M), which helps us to allocate the smart grid actors and components, as well as to depict the requirements of smartgrid applications on the information and communication technology and standards. The application of the S GA M on a se lected smart grid use case deepens its understanding. In the third part, we discuss different communication tech nologies that can be used in the context of the smart grid. Finally, we focus on several smart grid use cases for which a review of relevant communication standards is conducted. Thereby, relevantprotocolsarediscussedindetailandareana lyzed in terms of applicability, communication technology and I T-security.","90 minutes written or 20 minutes oral exam (in English) or portfolio. The students will be informed about the exact type of exam by the beginning of the semester. A portfolio examination may contain tasks that relate to a project that uses the smart grid architecture model as basis and may consist of: • Written or oral partial examination • Documented and executable source code for tasks with tools • Live demonstration of task solutions • Summary of relevant research papers with topics of the module • Technical report • Ongoing technical sub-reports for a final summary into a complete document • Presentation of created material with use of suitable presentation techniques, e. g. Power Point, Live-Coding, Whiteboard, Flipchart The work on the portfolio will be carried out parallel to the lectureandthefinalsubmissionoftheportfoliowilltakeplace no later than 4 weeks after the end of the lecture period. The lecturer will announce the exact requirements for the portfolio at the beginning of the course.","Präsentation mit Overheadprojektor, Tafel Presentation on projector, blackboard","Christian Neureiter. A Domain-Specific, Model Driven Engi- neering Approach for Systems Engineering in the Smart Grid. November 2017 Momoh, James. Smart grid: fundamentals of design and ana lysis. Vol. 63. John Wiley & Sons, 2012. Additional literature will be referenced in the lecture material",MSc AI Engineering and MSc Informatik/ Computer Science
6206,Data on the Web,455417,Unregelmäßig Irregular,1 Semester,Scherzinger,Nečaský,Englisch English,Modulgruppe „A IA“ Focus „A IA“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Datenbanken und Informationssysteme, Algorithmen und Da- tenstrukturen, Web und Data Engineering Databases and Information Systems, Algorithms and Data Structures, Web and Data Engineering","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Thestudentsacquireasystematicunderstandingofpublishing and sharing data on the web. They know basic and advancedmodelsandformatsforrepresentingdataonthewebasknow  ledge graphs, the principles for achieving data interoperability through ontologies, and advanced technologies for querying the data. Fähigkeiten / Abilities The students can identify, understand, and access/query datapublished on the web (R ES T, S PA RQ L). They can also pu blishtheirdatainaninteroperablewayexploitingexistinganddesigningtheirontologiestodescribethedata. Theycancom bine data from different data sources into a single knowledge graph and query it. Kompetenzen / Competencies The students have the competence to select appropriate tech nologiesforpublishingandconsumingdataontheweb, designontologies to describe the data, and design and execute que ries (S PA RQ L) on top of the data.","This module focuses on the principles of sharing data on the web through R ES T and Linked Open Data A PIs. It shows suitable data formats for publishing data on the web, explains the role of ontologies and data vocabularies in improving data interoperability, and presents how to consume data using the S PA RQ L query language.","Teil 1: Mind. 50% der Punkte aus kleinen praktischen Aufga- ben aus den Übungen, z. B. die Arbeit mit einem speziellen System. Die Projektarbeit kann während der Übungen oder im Selbststudium zu Hause erbracht werden. Nicht Teil der Endnote. Teil 2: Eine benotete 60minütige schriftliche Klausur, die die Terminologie und theoretischen Prinzipien prüft. Die Punkte für die Endnote werden wie folgt berechnet:Teil1wirdalsbestanden/unbestandengewertetundmussbe standen werden. Teil 2 wird mit einer Note bewertet. Part1:Atleast50%ofpointsfromsmallpracticalassignments from the labs, i. e. , work with the particular systems. Can be done during the exercises or as homework. Not a part of the final grading. Part 2: A graded 60-minute written examination of termino logy and theoretical principles. The points for the final grade are computed as follows: Part 1 is pass/fail, and must be passed. Part 2 is graded.","Vorlesungen, Präsentation und Demonstrationen mit Projek- tor, Tafel, praktisches Seminar, ein Computerlabor mit einem Webbrowser auf jedem Computer, ein (virtueller) Server mit  einem R DF-Datenbankserver (z. B. Graph DB Free), der von den Computern im Labor zugänglich ist Lectures, presentation and demonstrations with a projector, blackboard, practical seminar, demonstrations with a projec tor, students work on exercises using their own laptops","Tom Heath and Christian Bizer. Linked Data: Evolving the Web into a Global Data Space. Synthesis Lectures on the Se- mantic Web: Theory and Technology, Morgan & Claypool. 2011 Bob Du Charme. Learning S PA RQ L: Querying and Updating with S PA RQ L 1. 1. O’Reilly Media, Inc. 2013 Panos Alexopoulos. Semantic Modelingfor Data. O’Reilly Me dia, Inc. 2020 Mayank Kejriwal, Craig A. Knoblock, Pedro Szekely. Know ledge Graphs (Adaptive Computation and Machine Learning series). M IT Press. 2021",MSc AI Engineering and MSc Informatik/ Computer Science
6208,Machine Learning Control and Optimization,455398,Unregelmäßig Irregular,1 Semester,Wirth,Wirth,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,4 V + 2Ü,60+30 Std. Präsenz + 90+90 Std. Eigenarbeitszeit Workload 60+30 contact hours + 90+90 hours lecture and tutorials follow-up and exam preparation,ECTS/Credits: 9,Keine None,"Lineare Algebra I + I I, Analysis I + I I, Gewöhnliche Differenti- algleichungen, Optimierung oder Mathematik in Technischen Systemen I – I II sowie Mathematische Systemtheorie —Linear Algebra I+I I, Analysis I+I I, Ordinary Differential Equa tions, Optimization or Mathematics in Technical Systems I-I II and Mathematical Systems Theory","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Die Studierenden verstehen die grundlegenden Prinzipien der  datenbasierten Regelung dynamischer Systeme. Dazu kennensie Methoden zur Behandlung von Datensätzen und zur datenbasierten Identifikation dynamischer Systeme. Ferner verfügen sie über relevante Techniken der mathematischen Op timierung. Sie sind in der Lage stabilisierende, datenbasierte L QR-Regler zu entwerfen. — The participants are familiar with the fundamental concepts of data-based control. They know methods from data analysis and data-driven system identification of dynamical systems. They are able to apply relevant techniques from optimization. Also they can design stabilizing, data-based L QR controllers. Fähigkeiten / Abilities Die Studierenden beherrschen die Grundsätze der Datenkom pression, sowie der Gruppierung von Daten. Sie sind in der Lage entsprechende Verfahren auf gegebene Datensätze an zuwenden. Zudem können die Studierenden unterschiedliche Verfahren zur Identifikation dynamischer Systeme auf gegebene Datensätze anwenden. Ebenso können sie Regelungsauf gaben datenbasiert formulieren und beherrschen wesentliche Ansätze für den datenbasierten Reglerentwurf. — The participants can analyze given data sets with respect todimensionality reduction and clustering. They can apply dif ferent techniques for data-based system identification. They can design algorithms for these purposes. They are capable of formulating various data-driven control tasks and are able to design appropriate data-based controllers.","Datenkompression, Hauptkomponenten-Analyse, Gruppie- rung, Lloyd Algorithmus, Support-Vector Machines, Kern- Trick, Eigensystem-Realisierungsalgorithmus. Beobachter-Kalman Filter Identifikation. Zusammenhang zwischen Systemidentifikation und der Koop man Operatortheorie. Datenbasierte Regelung, linear-quadratische optimale Steuerung, Dateninformativität, Semi-Definite Programme, sto chastische Gradientenverfahren —Dimensionality reduction, principal component analysis, clus tering, Lloyd’s algorithm, support vector machines, kernel trick, eigensystem realization algorithm. Connection between system identification and Koopman ope rator theory, observer-Kalman filter identification. Data-driven linear-quadratic regulator problem, data informa tivity, semi-definiteprogramming, stochasticgradientdescent",90 min Klausur oder ca. 30 min mündliche Prüfung. Die ge- naue Prüfungsart wird zu Beginn des Semesters bekannt ge- geben. 90-minute written examination or 30-minute oral examinati on. The precise mode of assessment will be announced at the beginning of the semester,"Tafel, Beamer, Vorlesungsskript, Übungsblätter Blackboard, projector presentation, lecture notes, exercise sheets","S. L. Burton, J. N. Kutz:Data-Driven Scienceand Engineering: Machine Learning, Dynamical Systems and Control, Cam- bridge University Press, 2019. De Persis, C. ,Tesi, P. :Formulasfor Data-Driven Control:Sta bilization, Optimality and Robustness, I EE E Transactions on Automatic Control 65 (3): 909 – 924, 2020. van Waarde, H. , Eising, J. , Trentelman, H. , Camlibel, K. : Da ta Informativity: A New Perspective on Data-Driven Analysis and Control. I EE ETransactionson Automatic Control65(11):",MSc AI Engineering and MSc Informatik/ Computer Science
4753,"– 4768, 2020.",Not found,Unregelmäßig Irregular,1 Semester,Scherzinger,Hobulova,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,2 V + 2Ü,60 Std. Präsenz + 50 Std. Übungen + 70 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 50 hrs exercises + 70 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Datenbanken und Informationssysteme Undergraduate database course,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","The aim of the course is to provide an overview of the basic principles of data organization. In the first part, students get acquainted with the basic methods of data storage and file organization types. We will also focus on data structures forefficient access to data, i. e. basic types of hashing and hier archical indexing, including their use in traditional, primarily  relational database systems. In the last part, we will focus on more advanced principles of data organization in the context of spatial distributed databases.","Introduction, organisation of the course. Data storage. R AI D File organisation Hashing in internal and external memory Hierarchical indexing, B-trees Spatial databases Distributed databases","Part 1: 30-minute, written single-choice assessment of terminology and theoretical principles Part 2:60-minute written examination, assessing practical problem solving skills The points for the final grade are computed as follows: Part 1 is pass/fail, and must be passed. Part 2 is graded.","Tafel, Projektor Blackboard, projector","Raghu Ramakrishnan, Johannes Gehrke: Database manage- ment systems (3. ed. ). Mc Graw-Hill 2003. Ausgewählte Forschungsartikel / selected research articles.",MSc AI Engineering and MSc Informatik/ Computer Science
6210,Semantic Data Integration,473270,Unregelmäßig Irregular,1 Semester,Algergawy,Algergawy,Englisch English,Modulgruppe „A IA“ Focus „A IA“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Datenbanken und Informationssysteme, Algorithmen und Da- tenstrukturen, Web und Data Engineering Databases and Information Systems, Algorithms and Data Structures, Web and Data Engineering","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Thestudentsacquireasystematicunderstandinghowtocom- bine and integrate different data sources using a broad rangeof techniques for data integration. During the integration pro  cess, the students will know basic and advanced models andformatsforrepresentingdata, howtoidentifyanddiscoverda ta and semantic heterogeneities across different data sources, the principles for achieving data interoperability through on tologies, and advanced technologies for querying the data. Fähigkeiten / Abilities The students can identify, understand, and access/query different data sources (conjunctive queries, X Query, and S PA RQ L). They can also identify and discover different heterogeneities across data sources, how to resolve these kinds of he terogeneities through schema and ontology matching. They can combine data from different data sources into a mediated schema making use of discovered matches and query it. Kompetenzen / Competencies The students obtain the competency to select appropriate technologiesforidentifyinganddiscoveringdataandsemanticheterogeneities through schema and ontology matching, de sign ontologies to describe the data, and design and execute queries on top of the data.","This module focuses on the principles of data integration des- cribingtheimportanceofdataintegrationindifferentapplica-tions and use cases. Different schemes of integration such vir tual and physical data integration will be covered. The course will further focus on virtual and web data integration. Further topics covered are various aspects of data integration, such asdataandsemanticheterogeneities, schemaandontologymat ching, and the role of semantics and ontologies in improving data integration and data interoperability.",90-minütige Klausur 90-minute written examination,"Vorlesungen, Präsentation und Demonstrationen mit Projek- tor, Tafel, praktisches Seminar, Tool-Demonstrationen über Beamer, Studierende arbeiten an praktischen Übungen an ih ren eigenen Geräten Lectures, presentation and demonstrations with a projector, blackboard, practical seminar, demonstrations with a projec tor, students work on exercises using their own laptops","An Hai Doan, Alon Halevy, Zachary Ives: Principles of Data Integration. Morgan Kaufmann, 2012. Barbella, Marcello, and Genoveffa Tortora. Ä Semi-automatic Data Integration Process of heterogeneous databases. "" Pat tern Recognition Letters (2023). Ulf Leser, Felix Naumann: Informationsintegration. Dpunkt  Verlag, 2007. Luna Dong, Divesh Srivastava: Big Data Integration. Mor gan & Claypool, 2015. Serge Abiteboul, et al: Web Data Management. Cambridge University Press, 2012. Mountantonakis, Michalis, and Yannis Tzitzikas. ""Large-scalesemantic integration of linked data: A survey. "" A CM Compu ting Surveys (C SU R) 52. 5 (2019): 1-40. Jérôme Euzenat, Pavel Shvaiko: Ontology Matching. Sprin ger, 2007. Felix Naumann:An Introductionto Duplicate Detection. Mor gan & Claypool, 2012.",MSc AI Engineering and MSc Informatik/ Computer Science
6211,Management of Scientific Data,472780,Unregelmäßig Irregular,1 Semester,Algergawy,Algergawy,Englisch English,Modulgruppe „A IA“ Focus „A IA“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,"Datenbanken und Informationssysteme, Algorithmen und Da- tenstrukturen, Web und Data Engineering Databases and Information Systems, Algorithms and Data Structures, Web and Data Engineering","Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge The students gain a systematic understanding of the main components of data lifecycle in research data managementstarting from research data planning to data archiving, inte  gration and sharing. During the exploration of research data lifecycle, the students will know basic and advanced modelsand techniques to write a good research data plan, to well de scribeandorganizescientificdatausingdifferentandstandard metadata, to examine scientific data to ensure data quality, and to select suitable stores for data preserving. Fähigkeiten / Abilities Bycompletingthiscourse, studentswillgettoknowthewhole rangeofprocedureswithregardtoresearchdatamanagement, i. e. dataplanning, datacollection, metadatamanagement, da ta preservation, data sharing, re-usability and storage of data, enhancement of visibility and data analysis and synthesis is sues. Kompetenzen / Competencies The students obtain the competency to select appropriatetechnologies to provide well organised, well documented, pre servedandshareddatathatareinvaluabletoadvancescientificinquiry and to increase opportunities for learning and innova tion.","Thismodulefocusesonthemaincomponentsofresearchdata lifecycle, including the followings: • Research data management, in general • Data management plans • Date description and metadata standard • Data organization and data storing • Data quality • Data sharing and reuse • Data integration and analysis • F AI R data principles",60-minütige Klausur 60-minute written examination,"Vorlesungen, Präsentation und Demonstrationen mit Projek- tor, Tafel, praktisches Seminar, Tool-Demonstrationen über Beamer, Studierende arbeiten an praktischen Übungen an ih ren eigenen Geräten Lectures, presentation and demonstrations with a projector, blackboard, practical seminar, demonstrations with a projec tor, students work on exercises using their own laptops","R DA: Research data alliance https://www. rd-alliance. org/ Pietro Pinoli, Stefano Ceri, Davide Martinenghi, Luca Nan- ni: Metadata management for scientific databases. Inf. Syst. 81: 1-20 (2019)Managing Research Data to Unlock its Full Poten tial : https://masterclasses. nature. com/managing-research data/18320206 Wilkinson, M. , Dumontier, M. , Aalbersberg, I. et al. The FA IR Guiding Principles for scientific data management and stewardship. Sci Data 3, 160018 (2016). htt ps://doi. org/10. 1038/sdata. 2016. 18 Research data Oxford: https://researchdata. ox. ac. uk/data management-training Cox, A. M. ,&Pinfield, S. (2014). Researchdatamanagement and libraries: Current activities and future priorities. Journalof Librarianshipand Information Science, 46(4), 299–316. htt ps://doi. org/10. 1177/0961000613492542",MSc AI Engineering and MSc Informatik/ Computer Science
6212,Modern Database Systems,472770,Unregelmäßig Irregular,1 Semester,Scherzinger,Hobulova,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,2 V + 2Ü,60 Std. Präsenz + 50 Std. Übungen + 70 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 50 hrs exercises + 70 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Datenbanken und Informationssysteme Databases and Information Systems,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","The aim of the course is to provide and introduction to the approaches for efficient storing and querying of Big Data. The course will familiarize students with a wide range of related concepts and technologies and provide a deeper insight into new types of database systems. For each type of databases, basic principles and techniques as well as practical examples will be introduced. In the labs, the students will put into ope ration different types of databases and test their functionality using small applications.","The following topics are covered: • Relational data model, relational databases. Historicaloverview of alternative data models and database sys tems. • Introduction to Big Data (history, features, data mo dels). • Basic principles of Big Data Management (C AP Theo rem, distribution, scaling, replication, transactions in a distributed environment, . .. ). • Overview and classification of database systems and technologies for efficient management and processing of Big Data. • Distributed file systems. • Map Reduce - principle, properties, critique, alternative approaches. • No SQ L databases (key / value, column, document). • Graph data and graph databases. • Data with multiple models. Multi-model databases. Po lystores. • S QL language in the world of Big Data. New SQ L data base. • Other types of modern databases (array databases, . .. ).","Teil 1: Mind. 50% der Punkte aus kleinen praktischen Aufga- ben aus den Übungen, z. B. die Arbeit mit einem speziellen System. Die Projektarbeit kann während der Übungen oder im Selbststudium zu Hause erbracht werden. Nicht Teil der Endnote. Teil 2: Eine benotete 60-minütige schriftliche Klausur, die die Terminologie und theoretische Prinzipien prüft. Die Punkte für die Endnote werden wie folgt berechnet: Teil 1 wird als bestanden/unbestanden gewertet, und muss bestanden werden. Teil 2 wird mit einer Note bewertet. Part1:Atleast50%ofpointsfromsmallpracticalassignments from the labs, i. e. , work with the particular systems. Can be done during the practicals or as homework. Not a part of the final grading. Part 2: A graded 60-minute written examination of termino logy and theoretical principles. The points for the final grade are computed as follows: Part 1 is pass/fail, and must be passed.  Part 2 is graded.","Tafel, Projektor Blackboard, projector","Pramod J. Sadalage-Martin Fowler:No SQ LDistilled:A Brief Guide to the Emerging World of Polyglot Persistence Eric Redmond - Jim R. Wilson: Seven Databases in Seven Weeks: A Guide to Modern Databases and the No SQ L Move ment Sherif Sakr - Eric Pardede: Graph Data Management: Tech niques and Applications Jeffrey Dean and Sanjay Ghemawat: Map Reduce: Simplified Data Processing on Large Clusters, Google, Inc. Hadoop: The Definitive Guide, by Tom White, 2nd edition, Oreilly’s, 2010 Carlyna Bondiombouy, Patrick Valduriez. Query Processing in Multistore Systems: an overview. [Research Report] R R-8890, I NR IA Sophia Antipolis - Méditerranée. 2016, pp. 38.",MSc AI Engineering and MSc Informatik/ Computer Science
6215,Online and Approximation Algorithms,455480,Unregelmäßig Irregular,1 Semester,Harks,Ghodselahi,Englisch English,Modulgruppe „A EM M“ Focus „A EM M“,2 V + 2Ü,60 Std. Präsenz + 60 Std. Übungen + 60 Std. Nachbereitung Workload der Vorlesung und Prüfungsvorbereitung 60 contact hours + 60 hrs exercises + 60 hrs independent study and exam preparation,ECTS/Credits: 6,Keine None,Keine None,"Verwendbarkeit in weiteren Master Informatik, Master Computational Mathematics Studiengängen Master Computer Science, Master Computational Mathema tics","Kenntnisse / Skills/Knowledge Erwerbvon Kenntnissenüber Online-und Approximationspro- bleme sowie deren praktische Anwendung. —Acquire an understanding of online and approximation pro blems, along with their practical applications.  Fähigkeiten / Abilities Verbessern Sie Ihre Fähigkeit, Online-und Approximationspro bleme zu identifizieren und zu lösen, indem Sie Techniken wie potentielle Funktionen, L P-Relaxierungen und randomisiertes Runden anwenden. —Enhance your ability to identify and solve online and approxi mationproblemsusingtechniquessuchaspotentialfunctions, L P relaxations, and randomized rounding. Kompetenzen / Competencies Entwicklungder Fähigkeit, Online-und Näherungsalgorithmentheoretisch zu analysieren, so dass keine Programmierung er forderlich ist. — Develop the competency to theoretically analyze online andapproximation algorithms, eliminating the need for program ming.","list access, cashing, randomized online algorithms, load ba- lancing, scheduling, k-server problems, knapsack, set cover, matching, hitting set.",120 min Klausur oder ca. 30 min mündliche Prüfung 120-minute written examination or 30-minute oral examinati- on,"Präsentation mit Tafel und Beamer Presentation with a projector, blackboard","A. Borodin und R. El-Yaniv. Online Computationand Compe- titive Analysis. Cambridge University Press, Cambridge, 1998 V. V. Vazirani. Approximation Algorithms. Springer Verlag, Berlin, 2001 A. Fiat, G. J. Woeginger. Online Algorithms: The State of the Art. Springer, 1998",MSc AI Engineering and MSc Informatik/ Computer Science
6219,IoT Security: Security Solutions for the Internet of Things,455520,Unregelmäßig Irregular,1 Semester,Katzenbeisser,Anagnostopoulos,Englisch English,Modulgruppe „A IA“ Focus „A IA“,2 V,30 Std. Präsenz + 60 Std. Nachbereitung der Vorlesung und Workload Prüfungsvorbereitung 30 contact hours + 60 hours independent study and exam preparation,ECTS/Credits: 3,Keine None,-,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Students acquire basic knowledge of the Internet of Things (Io T), of its different segments that include devices of varying capabilities, of the industrial Io T, as well as of the concept of Io T2. 0, whichcombines Io Twithadvancedtechnologies, such as artificial intelligence and the blockchain. The students gain  knowledge of potential security solutions for the Io T, ranging from the design level to security protocol implementations forparticular use cases, such as device authentication, device at testation, and sensor data aggregation. Additionally, practical knowledge on how to gather sensor data and secure them is also provided by examining the relevant topic with the help of the S TM B-L475 E-I OT01 A board. Fähigkeiten / Abilities Students gain the ability to outline and potentially implement security solutions, ranging from design-level solutions to use case protocols, both in theory and in practice. Students gainthe ability to theoretically analyze potential threats in the fra mework of the Io T and to phrase out relevant requirements, potentially leading to the corresponding security specificati ons. Kompetenzen / Competencies Students learn to analyze the security requirements, specifi cations, threat models and analyses associated with the Io T, and select appropriate security solutions to address them, wi thout affecting the practicality and efficiency of the relevant Io T systems. Practical competencies for the design and imple mentation of security solutions in the framework of the Io T are also acquired, to a limited extent.","The following topics are covered: • Basic concepts (definition of the Internet of Things (Io T), examination of the different segments of th Io T and their diversity, applications of the Io T, the need for (lightweight)security in the Io T) • Requirements, specifications, threat modelling, attack surface analysis for the Io T • The EN IS Areportsregardinggoodpracticesforsecurity of the Io T • The Industrial Internetof Things(I Io T)andtheconcept of Io T 2. 0 • Introduction of security in the Io T in the design phase • Lightweight security primitves: Physical Unclonable Functions (P UFs), True Random-Number Generators (T RN Gs), Trusted Platform Modules (T PMs), and other solutions • Lightweight cryptography for the Io T: Standards and proposed solutions • Authentication protocols in the context of th Io T • Attestation of Io T devices in the field • Advanced security solutions for the Io T utilizing the blockchain, machine learning, post-C MO S technologies  and/or advanced artificial intelligence (Security for the Io T 2. 0 concept) • Secure sensor data aggregation in the context of the Io T: Issues and potential solutions • Sensor measurements with the S TM B-L475 E-I OT01 A board • Securityintheframeworkofthe ST MB-L475 E-I OT01 A board • Exploringacomprehensivesecuritysolutionforthe ST M B-L475 E-I OT01 A board in the framework of a network forming a small segment of the Io T",90 Minuten Klausur in Englisch 90-minute written exam in English,"Presentation, projector, blackboard, sensor measurements with the S TM B-L475 E-I OT01 A board","Russel & Van Duren: „Practical Internet of Things Security“, 2nd edition, Packt Publishing, 2019. Gilchrist: „Io T Security Issues“, De Gruyter, 2017.",MSc AI Engineering and MSc Informatik/ Computer Science
6220,Introduction to Microelectronics: From Silicion to,455530,Unregelmäßig Irregular,1 Semester,Katzenbeisser,Anagnostopoulos,Englisch English,Modulgruppe „A IS E“ Focus „A IS E“,2 V,30 Std. Präsenz + 60 Std. Nachbereitung der Vorlesung und Workload Prüfungsvorbereitung 30 contact hours + 60 hours independent study and exam preparation,ECTS/Credits: 3,Keine None,-,Verwendbarkeit in weiteren Master Informatik Studiengängen Master Computer Science,"Kenntnisse / Skills/Knowledge Studentsacquirebasicknowledgeofmicroelectronics, rangingfrom semiconducting materials and their principles of opera tion in the context of computers to post-C MO S technologies, simple digital circuits, and their applications for computation  and computer sciences. Students learn the working principlesof diodes, transistors, operational amplifiers, and even post C MO S electronics relevant to digital circuits in the framework of computer science. Fähigkeiten / Abilities Students learn the application domains of microelectronics and are able to design simple analog and digital circuits, such as memory cells, both in theory and in practice. Kompetenzen / Competencies Students learn to analyze simple circuit designs and gain the ability to select the appropriate microelectronic components for the creation of simple circuits to address problems in the computation, storage, and other similar domains.","The following topics are covered: • Basicconceptsofmicroelectronics(examplesofelectro- nic systems, electronics vs. microelectronics, etc. ) • Short introduction to the physics of microelectronics(charge carriers, the pn junction, the need for conductors and semiconductors, silicon and other semiconduc ting materials) • Diodes and their applications• M OS transistors (P MO S, N MO S, C MO S), their prin ciples of operation, and their applications • C MO S amplifiers• Operational amplifiers, modes of operation (noninverting amplifier, inverting amplifier, integrator and diffe rentiator, voltage adder), and their applications• Design principles of simple computer components ba sed on microelectronics (memory cells, registers, logical gates) • Basic digital circuits and practical applications • Circuit design, correction, and theoretical testing using artificial intelligence• Microelectronicsbeyondsilicon:connectiontonanoelec tronics and post-C MO S technologies",90 Minuten Klausur in Englisch 90-minute written exam in English,"Präsentation, Beamer, Tafel Presentation, projector, blackboard","Sedra, Smith, Carusone&Gaudet:„Microelectronic Circuits“, 8th edition, Oxford University Press, 2019. Momeni:„Grundlagender Mikroelektronik1“, Springer, 2021. Razavi: „Fundamentals of Microelectronics“, 3rd edition, Wi  ley & Sons, 2021.",MSc AI Engineering and MSc Informatik/ Computer Science
